--------------------------------------------------------------------------
-- FLEXIA 10.4 
-- Altia Consultores 
-- Scripts creación BD flexia 
-- Oracle
-- Creacións de las tablas de del esquema de la organizacion
-- Ejecutar con usuario del esquema de la organizacion a crear
--------------------------------------------------------------------------

spool 5_crea_tablas_organizacion.log
SET ECHO ON;

-- MÓDULO DE ADMINISTRACIÓN

CREATE TABLE A_PLT (	
	PLT_COD NUMBER(6,0) NOT NULL, 
	PLT_DES VARCHAR2(80) NOT NULL, 
	PLT_APL NUMBER(3,0) NOT NULL, 
	PLT_DOC LONG RAW, 
	PLT_PRO VARCHAR2(5), 
	PLT_TRA NUMBER(4,0), 
	PLT_INT CHAR(1), 
	PLT_REL VARCHAR2(1),
	CONSTRAINT PK_A_PLT PRIMARY KEY (PLT_COD)
);


CREATE TABLE A_DEP (	
	DEP_COD NUMBER(3,0) NOT NULL, 
	DEP_NOM VARCHAR2(60) NOT NULL, 
	CONSTRAINT PK_DEP PRIMARY KEY (DEP_COD)
);


CREATE TABLE A_UOR (	
	UOR_COD NUMBER(5,0) NOT NULL, 
	UOR_PAD NUMBER(5,0), 
	UOR_NOM VARCHAR2(80) NOT NULL, 
	UOR_TIP VARCHAR2(1), 
	UOR_FECHA_ALTA DATE, 
	UOR_FECHA_BAJA DATE, 
	UOR_ESTADO VARCHAR2(1), 
	UOR_COD_VIS VARCHAR2(8), 
	UOR_EMAIL VARCHAR2(100), 
	UOR_NO_VIS CHAR(1) DEFAULT '0' NOT NULL, 
	UOR_COD_ACCEDE VARCHAR2(10),
	UOR_REX_GENERAL VARCHAR2(2) DEFAULT 0,
	OFICINA_REGISTRO NUMBER(1,0) DEFAULT 0,
	CONSTRAINT PK_UOR PRIMARY KEY (UOR_COD), 
	CONSTRAINT UNIQUE_A_UOR_VIS_EST_NOM UNIQUE (UOR_NOM, UOR_ESTADO, UOR_COD_VIS), 
	CONSTRAINT UOR_PAD_FK_A_UOR_UOR_COD FOREIGN KEY (UOR_PAD)
		REFERENCES  A_UOR (UOR_COD) ON DELETE CASCADE
);


COMMENT ON COLUMN A_UOR.UOR_COD IS 'Codigo de Unidad Organica';
COMMENT ON COLUMN A_UOR.UOR_PAD IS 'Unidad Padre';
COMMENT ON COLUMN A_UOR.UOR_NOM IS 'Nombre de la Unidad';
COMMENT ON COLUMN A_UOR.UOR_TIP IS 'Tipo de Unidad (Registro,...)';
COMMENT ON COLUMN A_UOR.OFICINA_REGISTRO IS '1- Si es oficina de registro, 0- No es oficina de registro (por defecto)';
COMMENT ON TABLE A_UOR IS 'ESTRUCTURA ORGANICA (Unidades Organicas)';

CREATE INDEX REL_UOR_UOR_FK ON A_UOR (UOR_PAD);


CREATE TABLE A_CAR (	
	CAR_COD NUMBER(3,0) NOT NULL, 
	CAR_PAD NUMBER(3,0), 
	CAR_NOM VARCHAR2(80) NOT NULL, 
	CAR_FECHA_ALTA DATE, 
	CAR_FECHA_BAJA DATE, 
	CAR_ESTADO VARCHAR2(1), 
	CAR_COD_VIS VARCHAR2(6), 
	CONSTRAINT PK_CAR PRIMARY KEY (CAR_COD)
);

COMMENT ON COLUMN A_CAR.CAR_COD IS 'Codigo del cargo';
COMMENT ON COLUMN A_CAR.CAR_PAD IS 'Cargo Padre';
COMMENT ON COLUMN A_CAR.CAR_NOM IS 'Nombre del cargo';
COMMENT ON TABLE A_CAR IS 'CARGOS (perfil dentro de cada UOR)';

CREATE INDEX REL_CAR_CAR_FK ON A_CAR (CAR_PAD);
  
  
CREATE TABLE  A_DOC (	
	DOC_CEI NUMBER(15,0) NOT NULL, 
	DOC_APL NUMBER(3,0) NOT NULL, 
	DOC_NOM VARCHAR2(100), 
	CONSTRAINT PK_A_DOC PRIMARY KEY (DOC_APL, DOC_CEI)
);
 

CREATE TABLE A_ETI (	
	ETI_COD NUMBER(3,0) NOT NULL, 
	ETI_DES VARCHAR2(50) NOT NULL, 
	ETI_CBD VARCHAR2(50) NOT NULL, 
	ETI_NOM VARCHAR2(200), 
	ETI_APL NUMBER(3,0) NOT NULL, 
	CONSTRAINT PK_A_ETI PRIMARY KEY (ETI_COD)
);


CREATE TABLE PARAMETROS (
	    CODIGO VARCHAR2(64) NOT NULL,
	    VALOR  VARCHAR2(64),
	    CONSTRAINT PK_PARAMETROS PRIMARY KEY (CODIGO)
  );
   
  COMMENT ON COLUMN PARAMETROS.CODIGO IS 'Clave del parámetro';
  COMMENT ON COLUMN PARAMETROS.VALOR IS 'Valor del parámetro';
  COMMENT ON TABLE PARAMETROS IS 'PARAMETROS PROPIOS DE LA ORGANIZACION';


CREATE TABLE A_LIST (	
	LIST_COD NUMBER(*,0) NOT NULL ENABLE, 
	LIST_NOM VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	CONSTRAINT "A_LIST_PK" PRIMARY KEY (LIST_COD)
  );
 
COMMENT ON TABLE  "A_LIST"  IS 'TABLA DONDE SE ALMACENAN LOS LISTADOS QUE PUEDEN SER MODIFICABLES';
 
CREATE TABLE A_CAMPLIST(	
	CAMPLIST_COD NUMBER(*,0) NOT NULL ENABLE, 
	CAMPLIST_NOM VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	CAMPLIST_TAMANO NUMBER(*,0) NOT NULL ENABLE, 
	CAMPLIST_ACTIVO NUMBER(*,0) NOT NULL ENABLE, 
	CAMPLIST_CODLIST NUMBER(*,0) NOT NULL ENABLE, 
	CAMPLIST_ORDEN NUMBER(*,0), 
	CONSTRAINT A_CAMPLIST_PK PRIMARY KEY (CAMPLIST_COD, CAMPLIST_CODLIST), 
	CONSTRAINT A_CAMPLIST_A_LIST_FK1 FOREIGN KEY ("CAMPLIST_CODLIST")
	REFERENCES A_LIST (LIST_COD) ON DELETE CASCADE ENABLE
   );
  
 
COMMENT ON COLUMN A_CAMPLIST.CAMPLIST_TAMANO IS 'Tamaño en % de lo que ocupa en el listado';
COMMENT ON COLUMN A_CAMPLIST.CAMPLIST_ACTIVO IS '1 si el campo esta visible en el listado, 0 si no esta visible';
COMMENT ON COLUMN A_CAMPLIST.CAMPLIST_CODLIST IS 'Referenta al listado que pertenece.';

-- ADMINISTRACIÓN (CALENDARIO).
CREATE TABLE GEN_AGENDA_DETALLE (	
	GEN_AGE_FECHA DATE NOT NULL, 
	GEN_AGE_HORA NUMBER(4,0) NOT NULL, 
	GEN_AGE_PERSONAS_IR NUMBER(4,0) NOT NULL, 
	GEN_AGE_CITAS_IR NUMBER(4,0) NOT NULL, 
	GEN_AGE_PERSONAS_MMR NUMBER(4,0) NOT NULL, 
	GEN_AGE_CITAS_MMR NUMBER(4,0), 
	GEN_AGE_VALIDO NUMBER(4,0), 
	CONSTRAINT PK_GEN_AGENDA_DETALLE PRIMARY KEY (GEN_AGE_FECHA, GEN_AGE_HORA)
);
 

CREATE TABLE GEN_CALENDARIO (	
	GEN_CAL_DIA DATE NOT NULL, 
	GEN_CAL_ANO NUMBER(4,0) NOT NULL, 
	CONSTRAINT PK_GEN_CALENDARIO PRIMARY KEY (GEN_CAL_DIA, GEN_CAL_ANO)
);
-- INFORMES

CREATE TABLE ENTIDADEINFORME (	
	CODIGO NUMBER(15,0) NOT NULL, 
	NOME VARCHAR2(30) NOT NULL, 
	CLAUSULAFROM VARCHAR2(1024), 
	CLAUSULAWHERE VARCHAR2(4000), 
	NOMEVISTA VARCHAR2(30) NOT NULL, 
	CONSTRAINT PK_ENTIDADEINFORME PRIMARY KEY (CODIGO)
);

COMMENT ON TABLE ENTIDADEINFORME IS 'Entidades disponibles para los informes predefinidos (p.e: alumno, profesor, etc.).';
COMMENT ON COLUMN ENTIDADEINFORME.CODIGO IS 'Código identificador de la entidad.';
COMMENT ON COLUMN ENTIDADEINFORME.NOME IS 'Nombre de la entidad.';
COMMENT ON COLUMN ENTIDADEINFORME.CLAUSULAFROM IS 'Tablas a las que se refiere la entidad (nombres de las tablas separados por comas).';
COMMENT ON COLUMN ENTIDADEINFORME.CLAUSULAWHERE IS 'Condición de join entre las tablas a las que se refiere la entidad.';
COMMENT ON COLUMN ENTIDADEINFORME.NOMEVISTA IS 'Nombre de la vista que devuelve los datos de la entidad.';


CREATE TABLE ENTIDADEAPLICACION (	
	APL_COD NUMBER(3,0) NOT NULL, 
	COD_ENTIDADEINFORME NUMBER(15,0) NOT NULL, 
	CONSTRAINT PK_ENTIDADEAPLICACION PRIMARY KEY (APL_COD, COD_ENTIDADEINFORME),
	CONSTRAINT FK_EA_EI FOREIGN KEY (COD_ENTIDADEINFORME)
	REFERENCES ENTIDADEINFORME (CODIGO) ON DELETE CASCADE
);
 
COMMENT ON TABLE ENTIDADEAPLICACION IS 'Vinculación de pantallas con aplicaciones.';
COMMENT ON COLUMN ENTIDADEAPLICACION.APL_COD IS 'Aplicación a la que se vincula la entidad.';
COMMENT ON COLUMN ENTIDADEAPLICACION.COD_ENTIDADEINFORME IS 'Código identificador de la entidad.';


CREATE TABLE ENTSUBENT (	
	COD_ENTSUBENT NUMBER(15,0) NOT NULL, 
	COD_ENTIDADEINFORME NUMBER(15,0) NOT NULL, 
	COD_PAI NUMBER(15,0), 
	TXT_CONDJOIN VARCHAR2(4000), 
	CONSTRAINT PK_ENTSUBENT PRIMARY KEY (COD_ENTSUBENT), 
	CONSTRAINT FK_ESE_EI FOREIGN KEY (COD_ENTIDADEINFORME)
	REFERENCES  ENTIDADEINFORME (CODIGO) ON DELETE CASCADE, 
	CONSTRAINT FK_ESE_ESE FOREIGN KEY (COD_PAI)
	REFERENCES  ENTSUBENT (COD_ENTSUBENT) ON DELETE CASCADE
);


COMMENT ON TABLE ENTSUBENT IS 'Estructura en árbol de las entidades de un informe. (Estructura estática)';
COMMENT ON COLUMN ENTSUBENT.COD_ENTSUBENT IS 'Código identificador del nodo.';
COMMENT ON COLUMN ENTSUBENT.COD_ENTIDADEINFORME IS 'Código identificador de la entidad contenida en ese nodo.';
COMMENT ON COLUMN ENTSUBENT.COD_PAI IS 'Código identificador del nodo padre del actual. (Nulo si es el raíz).';
COMMENT ON COLUMN ENTSUBENT.TXT_CONDJOIN IS 'Condición de join que relaciona la entidad superior con la hija.';


CREATE TABLE CAMPOSJOIN (	
	CAMPO_ENT VARCHAR2(30) NOT NULL, 
	CAMPO_SUBENT VARCHAR2(30) NOT NULL, 
	OUTER_JOIN VARCHAR2(1), 
	COD_ESE NUMBER(15,0) NOT NULL, 
	CONSTRAINT PK_CAMPOSJOIN PRIMARY KEY (CAMPO_ENT, CAMPO_SUBENT, COD_ESE), 
	CONSTRAINT FK_CJ_ESE FOREIGN KEY (COD_ESE)
	REFERENCES ENTSUBENT (COD_ENTSUBENT) ON DELETE CASCADE
);

COMMENT ON TABLE CAMPOSJOIN IS 'Definición de los campos por los que se vincula una entidad con una subentidad (ENTSUBENT).';
COMMENT ON COLUMN CAMPOSJOIN.CAMPO_ENT IS 'Campo en la entidad principal.';
COMMENT ON COLUMN CAMPOSJOIN.CAMPO_SUBENT IS 'Campo en la subentidad';
COMMENT ON COLUMN CAMPOSJOIN.OUTER_JOIN IS 'Indicador de si es un outer join Valores: L - Left Outer Join, R - Right Outer Join';
COMMENT ON COLUMN CAMPOSJOIN.COD_ESE IS 'Código de relación entidad-subentidad ( ENTSUBENT ) .';
  
CREATE INDEX IDX_CJ_01 ON CAMPOSJOIN (COD_ESE);


CREATE TABLE ESTRUCTURAINFORME (	
	COD_ESTRUCTURA NUMBER(15,0) NOT NULL, 
	COD_ENTIDADEINFORME NUMBER(15,0) NOT NULL, 
	COD_PAI NUMBER(15,0), 
	CONSULTASQL CLOB, 
	POSICION NUMBER(*,0), 
	CONSTRAINT PK_ESTRUCTURAINFORME PRIMARY KEY (COD_ESTRUCTURA), 
	CONSTRAINT FK_ESTI_EI FOREIGN KEY (COD_ENTIDADEINFORME)
	REFERENCES ENTIDADEINFORME (CODIGO) ON DELETE CASCADE, 
	CONSTRAINT FK_ESTI_ESTI FOREIGN KEY (COD_PAI)
	REFERENCES ESTRUCTURAINFORME (COD_ESTRUCTURA) ON DELETE CASCADE
);

COMMENT ON TABLE ESTRUCTURAINFORME IS 'Estructura en árbol de las entidades de un informe.';
COMMENT ON COLUMN ESTRUCTURAINFORME.COD_ESTRUCTURA IS 'Código identificador del nodo.';
COMMENT ON COLUMN ESTRUCTURAINFORME.COD_ENTIDADEINFORME IS 'Código identificador de la entidad contenida en ese nodo.';
COMMENT ON COLUMN ESTRUCTURAINFORME.COD_PAI IS 'Código identificador del nodo padre del actual. (Nulo si es el raíz).';
COMMENT ON COLUMN ESTRUCTURAINFORME.CONSULTASQL IS 'Consulta SQL que se genera en esta estructura.';
COMMENT ON COLUMN ESTRUCTURAINFORME.POSICION IS 'Posicion que ocupa la estructura en el conjunto de las subestructuras.';
  
CREATE INDEX IDX_ESTI_01 ON ESTRUCTURAINFORME (COD_ENTIDADEINFORME);
CREATE INDEX IDX_ESTI_02 ON ESTRUCTURAINFORME (COD_PAI);


CREATE TABLE CAMPOINFORME (
	CODIGO NUMBER(15,0) NOT NULL, 
	NOME VARCHAR2(50) NOT NULL, 
	CAMPO VARCHAR2(255) NOT NULL, 
	TIPO VARCHAR2(1) NOT NULL, 
	LONXITUDE NUMBER(4,0) NOT NULL, 
	SELECTVALORES VARCHAR2(4000), 
	FROMVALORES VARCHAR2(4000), 
	WHEREVALORES VARCHAR2(4000), 
	NOMEAS VARCHAR2(255), 
	CONSTRAINT PK_CAMPOINFORME PRIMARY KEY (CODIGO)
);
 
COMMENT ON TABLE CAMPOINFORME IS 'Campos disponibles para la definición de informes.';
COMMENT ON COLUMN CAMPOINFORME.CODIGO IS 'Código identificador del campo.';
COMMENT ON COLUMN CAMPOINFORME.NOME IS 'Nombre descriptivo del campo.';
COMMENT ON COLUMN CAMPOINFORME.CAMPO IS 'Campo correspondiente dentro de la base de datos.';
COMMENT ON COLUMN CAMPOINFORME.TIPO IS 'Tipo del campo (N-numérico, A-alfanumérico, D-fecha).';
COMMENT ON COLUMN CAMPOINFORME.LONXITUDE IS 'Número máximo de caracteres/dígitos del campo';
COMMENT ON COLUMN CAMPOINFORME.SELECTVALORES IS 'Campo/s selección para recuperar valores del campo.';
COMMENT ON COLUMN CAMPOINFORME.FROMVALORES IS 'Tabla/s para recuperar valores del campo.';
COMMENT ON COLUMN CAMPOINFORME.WHEREVALORES IS 'Condición/es para recuperar valores del campo.';
COMMENT ON COLUMN CAMPOINFORME.NOMEAS IS 'Etiqueta de este campo que aparecerá en el XML (Sin _ ni espacios ni caracteres extendidos).';


CREATE TABLE ETIQ_PLT (	
	COD_CAMPOINFORME NUMBER(15,0) NOT NULL, 
	COD_INFORMEXERADOR NUMBER(15,0) NOT NULL, 
	PREFIJO VARCHAR2(500) NOT NULL, 
	CONSTRAINT FK_ETP_CI FOREIGN KEY (COD_CAMPOINFORME)
		REFERENCES CAMPOINFORME (CODIGO) ON DELETE CASCADE
);

COMMENT ON TABLE ETIQ_PLT IS 'Etiquetas a meter en la plantilla de Word para un informe dado.';
COMMENT ON COLUMN ETIQ_PLT.COD_CAMPOINFORME IS 'Código del campo de informe.';
COMMENT ON COLUMN ETIQ_PLT.COD_INFORMEXERADOR IS 'Código del informe al que pertenecen las etiquetas.';
COMMENT ON COLUMN ETIQ_PLT.PREFIJO IS 'Path de entidades hasta llegar al campo concreto con un separador.';


CREATE TABLE CAMPOCONDICIONINFORME (	
	COD_ESTRUCTURA NUMBER(15,0) NOT NULL, 
	POSICION NUMBER(3,0) NOT NULL, 
	CLAUSULA VARCHAR2(3), 
	COD_CAMPOINFORME NUMBER(15,0) NOT NULL, 
	OPERADOR VARCHAR2(12) NOT NULL, 
	VALOR VARCHAR2(150), 
	CONSTRAINT PK_CAMPOCONDICIONINFORME PRIMARY KEY (COD_ESTRUCTURA, POSICION), 
	CONSTRAINT FK_CCI_CI FOREIGN KEY (COD_CAMPOINFORME)
	REFERENCES CAMPOINFORME (CODIGO) ON DELETE CASCADE
);

COMMENT ON TABLE CAMPOCONDICIONINFORME IS 'Condiciones de filtro para los informes generados.';
COMMENT ON COLUMN CAMPOCONDICIONINFORME.COD_ESTRUCTURA IS 'Código de la estructura donde se mete el campo';
COMMENT ON COLUMN CAMPOCONDICIONINFORME.POSICION IS 'Posición de la condición.';
COMMENT ON COLUMN CAMPOCONDICIONINFORME.CLAUSULA IS 'Conector lógico para la condición (''AND'', ''OR'') o NULL en la primera condición.';
COMMENT ON COLUMN CAMPOCONDICIONINFORME.COD_CAMPOINFORME IS 'Código identificador del campo.';
COMMENT ON COLUMN CAMPOCONDICIONINFORME.OPERADOR IS 'Operador de condición (''='',''LIKE'',''<'',''>'',''<>'',''IS NULL'',''IS NOT NULL'').';
COMMENT ON COLUMN CAMPOCONDICIONINFORME.VALOR IS 'Valor con el que comparar; si tiene valor NULL esta condición no se incluye en la SQL.';

CREATE INDEX IDX_CCI_01 ON CAMPOCONDICIONINFORME (COD_ESTRUCTURA);
CREATE INDEX IDX_CCI_02 ON CAMPOCONDICIONINFORME (COD_CAMPOINFORME);


CREATE TABLE CAMPOENTIDADEINFORME (
	COD_ENTIDADEINFORME NUMBER(15,0) NOT NULL, 
	COD_CAMPOINFORME NUMBER(15,0) NOT NULL, 
	CONSTRAINT PK_CAMPOENTIDADEINFORME PRIMARY KEY (COD_ENTIDADEINFORME, COD_CAMPOINFORME), 
	CONSTRAINT FK_CEI_EI FOREIGN KEY (COD_ENTIDADEINFORME)
	REFERENCES ENTIDADEINFORME (CODIGO) ON DELETE CASCADE, 
	CONSTRAINT FK_CEI_CI FOREIGN KEY (COD_CAMPOINFORME)
	REFERENCES  CAMPOINFORME (CODIGO) ON DELETE CASCADE
);

COMMENT ON COLUMN CAMPOENTIDADEINFORME.COD_ENTIDADEINFORME IS 'Codigo identificador de la entidad.';
COMMENT ON COLUMN CAMPOENTIDADEINFORME.COD_CAMPOINFORME IS 'Codigo identificador del campo.';
COMMENT ON TABLE CAMPOENTIDADEINFORME  IS 'Campos vinculados a cada entidad.';

CREATE INDEX IDX_CEI_01 ON CAMPOENTIDADEINFORME (COD_CAMPOINFORME);
CREATE INDEX IDX_CEI_02 ON CAMPOENTIDADEINFORME (COD_ENTIDADEINFORME);
 

CREATE TABLE CAMPOORDEINFORME (	
	COD_ESTRUCTURA NUMBER(15,0) NOT NULL, 
	POSICION NUMBER(3,0) NOT NULL, 
	COD_CAMPOINFORME NUMBER(15,0) NOT NULL, 
	TIPOORDE VARCHAR2(1) NOT NULL, 
	CONSTRAINT PK_CAMPOORDEINFORME PRIMARY KEY (COD_ESTRUCTURA, POSICION), 
	CONSTRAINT FK_COI_CI FOREIGN KEY (COD_CAMPOINFORME)
	REFERENCES CAMPOINFORME (CODIGO) ON DELETE CASCADE
);
 
COMMENT ON TABLE CAMPOORDEINFORME IS 'Campos para ordenar el resultado del informe';
COMMENT ON COLUMN CAMPOORDEINFORME.COD_ESTRUCTURA IS 'Código de la estructura donde se mete el campo';
COMMENT ON COLUMN CAMPOORDEINFORME.POSICION IS 'Posición del campo en la ordenación';
COMMENT ON COLUMN CAMPOORDEINFORME.COD_CAMPOINFORME IS 'Código identificador del campo';
COMMENT ON COLUMN CAMPOORDEINFORME.TIPOORDE IS 'Tipo de orden (''A'' = Ascendente, ''D'' = Descendente).';

CREATE INDEX IDX_COI_01 ON CAMPOORDEINFORME (COD_ESTRUCTURA);
CREATE INDEX IDX_COI_02 ON CAMPOORDEINFORME (COD_CAMPOINFORME);
 

CREATE TABLE CAMPOSELECCIONINFORME (	
	COD_ESTRUCTURA NUMBER(15,0) NOT NULL, 
	POSICION NUMBER(3,0) NOT NULL, 
	COD_CAMPOINFORME NUMBER(15,0) NOT NULL, 
	ANCHO NUMBER(4,2), 
	CONSTRAINT PK_CAMPOSELECCIONINFORME PRIMARY KEY (COD_ESTRUCTURA, POSICION), 
	CONSTRAINT FK_CSI_CI FOREIGN KEY (COD_CAMPOINFORME)
	REFERENCES CAMPOINFORME (CODIGO) ON DELETE CASCADE
);

COMMENT ON TABLE CAMPOSELECCIONINFORME IS 'Campos que se presentan en cada informe';
COMMENT ON COLUMN CAMPOSELECCIONINFORME.COD_ESTRUCTURA IS 'Código de la estructura donde se mete el campo';
COMMENT ON COLUMN CAMPOSELECCIONINFORME.POSICION IS 'Posición del campo en la lista de selección.';
COMMENT ON COLUMN CAMPOSELECCIONINFORME.COD_CAMPOINFORME IS 'Código identificador del campo.';
COMMENT ON COLUMN CAMPOSELECCIONINFORME.ANCHO IS 'Ancho en cm. elegido por el usuario (puede ser null).';

CREATE INDEX IDX_CSI_01 ON CAMPOSELECCIONINFORME (COD_ESTRUCTURA);
CREATE INDEX IDX_CSI_02 ON CAMPOSELECCIONINFORME (COD_CAMPOINFORME);


CREATE TABLE LISTADOXERADOR (	
	COD_INFORMEXERADOR NUMBER(15,0) NOT NULL, 
	TEXTOCABECEIRA VARCHAR2(100), 
	FONTECABECEIRA VARCHAR2(30) NOT NULL, 
	TAMANOFONTECABECEIRA NUMBER(2,0) NOT NULL, 
	NEGRITACABECEIRA VARCHAR2(1) NOT NULL, 
	SUBRAIADOCABECEIRA VARCHAR2(1) NOT NULL, 
	CURSIVACABECEIRA VARCHAR2(1) NOT NULL, 
	CABECEIRAOFICIAL VARCHAR2(1) NOT NULL, 
	CABECEIRACENTRO VARCHAR2(1) NOT NULL, 
	CABECEIRACOLUMNAS VARCHAR2(1) NOT NULL, 
	TEXTOPE VARCHAR2(100), 
	FONTEPE VARCHAR2(30) NOT NULL, 
	TAMANOFONTEPE NUMBER(2,0) NOT NULL, 
	NUMEROPAXINAPE VARCHAR2(1) NOT NULL, 
	DATAINFORMEPE VARCHAR2(1) NOT NULL, 
	FONTEDETALLE VARCHAR2(30) NOT NULL, 
	TAMANOFONTEDETALLE NUMBER(2,0) NOT NULL, 
	MARXEESQUERDA NUMBER(4,2) NOT NULL, 
	MARXEDEREITA NUMBER(4,2) NOT NULL, 
	ORIENTACIONPAXINA VARCHAR2(1) NOT NULL, 
	NUMERARLINHAS VARCHAR2(1) NOT NULL, 
	CONSTRAINT PK_LISTADOXERADOR PRIMARY KEY (COD_INFORMEXERADOR)
);
 
COMMENT ON TABLE LISTADOXERADOR IS 'Definición de los informes de tipo listado y estadística.';
COMMENT ON COLUMN LISTADOXERADOR.TAMANOFONTECABECEIRA IS 'Tamaño de la fuente para la cabecera.';
COMMENT ON COLUMN LISTADOXERADOR.NEGRITACABECEIRA IS 'Negrita cabecera (S/N).';
COMMENT ON COLUMN LISTADOXERADOR.SUBRAIADOCABECEIRA IS 'Subrayado cabecera (S/N).';
COMMENT ON COLUMN LISTADOXERADOR.CURSIVACABECEIRA IS 'Cursiva cabecera (S/N).';
COMMENT ON COLUMN LISTADOXERADOR.CABECEIRAOFICIAL IS 'Añadir cabecera oficial.';
COMMENT ON COLUMN LISTADOXERADOR.CABECEIRACENTRO IS 'Incluir datos del centro en la cabecera (S/N).';
COMMENT ON COLUMN LISTADOXERADOR.CABECEIRACOLUMNAS IS 'Incluir títulos de columnas (S/N).';
COMMENT ON COLUMN LISTADOXERADOR.TEXTOPE IS 'Texto para el pie de página.';
COMMENT ON COLUMN LISTADOXERADOR.FONTEPE IS 'Tipo de fuente para el pie de página.';
COMMENT ON COLUMN LISTADOXERADOR.TAMANOFONTEPE IS 'Tamaño de la fuente para el pie de página.';
COMMENT ON COLUMN LISTADOXERADOR.NUMEROPAXINAPE IS 'Incluir número de página (S/N).';
COMMENT ON COLUMN LISTADOXERADOR.DATAINFORMEPE IS 'Incluir fecha informe (S/N).';
COMMENT ON COLUMN LISTADOXERADOR.FONTEDETALLE IS 'Tipo de fuente para el detalle.';
COMMENT ON COLUMN LISTADOXERADOR.TAMANOFONTEDETALLE IS 'Tamaño de la fuente para el detalle.';
COMMENT ON COLUMN LISTADOXERADOR.MARXEESQUERDA IS 'Margen izquierdo de la página (cm).';
COMMENT ON COLUMN LISTADOXERADOR.MARXEDEREITA IS 'Margen derecho de la página (cm).';
COMMENT ON COLUMN LISTADOXERADOR.ORIENTACIONPAXINA IS 'Orientación de la página (V/A).';
COMMENT ON COLUMN LISTADOXERADOR.NUMERARLINHAS IS 'Añadir columna de número de línea de detalle';
COMMENT ON COLUMN LISTADOXERADOR.COD_INFORMEXERADOR IS 'Código identificador del informe.';
COMMENT ON COLUMN LISTADOXERADOR.TEXTOCABECEIRA IS 'Texto para la cabecera.';
COMMENT ON COLUMN LISTADOXERADOR.FONTECABECEIRA IS 'Tipo de fuente para la cabecera.'; 


CREATE TABLE INFORMEXERADOR (	
	CODIGO NUMBER(15,0) NOT NULL, 
	APL_COD NUMBER(3,0) NOT NULL, 
	MUN_PAI NUMBER(3,0), 
	MUN_PRV NUMBER(2,0), 
	MUN_COD NUMBER(3,0), 
	NOME VARCHAR2(30) NOT NULL, 
	DESCRIPCION VARCHAR2(256), 
	FORMATO VARCHAR2(1) NOT NULL, 
	COD_ESTRUCTURA NUMBER(15,0) NOT NULL, 
	DTD_CONTIDO CLOB, 
	F_DOT LONG RAW, 
	PLT_EDITADA VARCHAR2(1), 
	CONSTRAINT PK_INFORMEXERADOR PRIMARY KEY (CODIGO)
);
  
CREATE INDEX IDX_IX_01 ON INFORMEXERADOR (COD_ESTRUCTURA);


CREATE TABLE FONTELETRA (	
	COD_FONTELETRA NUMBER(15,0) NOT NULL, 
	NOME VARCHAR2(100) NOT NULL, 
	CONSTRAINT PK_FONTELETRA PRIMARY KEY (COD_FONTELETRA)
);

COMMENT ON TABLE FONTELETRA IS 'Fuentes de letra utilizables en las distintas zonas del informe.';
COMMENT ON COLUMN FONTELETRA.COD_FONTELETRA IS 'Código identificador del tipo de letra.';
COMMENT ON COLUMN FONTELETRA.NOME IS 'Nombre de la fuente';


CREATE TABLE ETIQUETA (	
	CODIGO NUMBER(15,0) NOT NULL, 
	APL_COD NUMBER(3,0) NOT NULL, 
	MUN_PAI NUMBER(3,0), 
	MUN_PRV NUMBER(2,0), 
	MUN_COD NUMBER(3,0), 
	NOME VARCHAR2(30) NOT NULL, 
	ANCHO NUMBER(4,2) NOT NULL, 
	ALTO NUMBER(4,2) NOT NULL, 
	ESPACIOHORIZONTAL NUMBER(4,2) NOT NULL, 
	ESPACIOVERTICAL NUMBER(4,2) NOT NULL, 
	MARXESUPERIOR NUMBER(4,2) NOT NULL, 
	MARXEINFERIOR NUMBER(4,2) NOT NULL, 
	MARXEESQUERDA NUMBER(4,2) NOT NULL, 
	MARXEDEREITA NUMBER(4,2) NOT NULL, 
	MARXESUPERIORETIQUETA NUMBER(4,2) NOT NULL, 
	MARXEESQUERDAETIQUETA NUMBER(4,2) NOT NULL, 
	BORDEETIQUETA VARCHAR2(1) NOT NULL, 
	CONSTRAINT PK_ETIQUETA PRIMARY KEY (CODIGO)
);

COMMENT ON COLUMN ETIQUETA.CODIGO IS 'Código identificador de la etiqueta base.';
COMMENT ON COLUMN ETIQUETA.APL_COD IS 'Aplicación a la que pertenece la definición de la etiqueta.';
COMMENT ON COLUMN ETIQUETA.MUN_PAI IS 'País del municipio de la etiqueta.';
COMMENT ON COLUMN ETIQUETA.MUN_PRV IS 'Provincia del municipio de la etiqueta.';
COMMENT ON COLUMN ETIQUETA.MUN_COD IS 'Código del municipio de la etiqueta.';
COMMENT ON COLUMN ETIQUETA.ANCHO IS 'Ancho de la etiqueta (cm.).';
COMMENT ON COLUMN ETIQUETA.ALTO IS 'Alto de la etiqueta (cm.).';
COMMENT ON COLUMN ETIQUETA.ESPACIOHORIZONTAL IS 'Espacio horizontal entre etiquetas (cm).';
COMMENT ON COLUMN ETIQUETA.ESPACIOVERTICAL IS 'Espacio vertical entre etiquetas (cm).';
COMMENT ON COLUMN ETIQUETA.MARXESUPERIOR IS 'Margen superior de la página (cm).';
COMMENT ON COLUMN ETIQUETA.MARXEINFERIOR IS 'Margen inferior de la página (cm).';
COMMENT ON COLUMN ETIQUETA.MARXEESQUERDA IS 'Margen izquierdo de la página (cm).';
COMMENT ON COLUMN ETIQUETA.MARXEDEREITA IS 'Margen derecho de la página (cm).';
COMMENT ON COLUMN ETIQUETA.MARXESUPERIORETIQUETA IS 'Margen superior del texto en la etiqueta (cm).';
COMMENT ON COLUMN ETIQUETA.MARXEESQUERDAETIQUETA IS 'Margen izquierdo del texto en la etiqueta (cm).';
COMMENT ON COLUMN ETIQUETA.BORDEETIQUETA IS 'Imprimir borde de etiqueta (S/N).';


CREATE TABLE ETIQUETAXERADOR (	
	COD_INFORMEXERADOR NUMBER(15,0) NOT NULL, 
	COD_ETIQUETA NUMBER(15,0), 
	ANCHO NUMBER(4,2) NOT NULL, 
	ALTO NUMBER(4,2) NOT NULL, 
	ESPACIOHORIZONTAL NUMBER(4,2) NOT NULL, 
	ESPACIOVERTICAL NUMBER(4,2) NOT NULL, 
	MARXESUPERIOR NUMBER(4,2) NOT NULL, 
	MARXEINFERIOR NUMBER(4,2) NOT NULL, 
	MARXEESQUERDA NUMBER(4,2) NOT NULL, 
	MARXEDEREITA NUMBER(4,2) NOT NULL, 
	MARXESUPERIORETIQUETA NUMBER(4,2) NOT NULL, 
	MARXEESQUERDAETIQUETA NUMBER(4,2) NOT NULL, 
	BORDEETIQUETA VARCHAR2(1) NOT NULL, 
	FONTEDETALLE VARCHAR2(30) NOT NULL, 
	TAMANOFONTEDETALLE NUMBER(2,0) NOT NULL, 
	CONSTRAINT PK_ETIQUETAXERADOR PRIMARY KEY (COD_INFORMEXERADOR), 
	CONSTRAINT FK_ETX_ET FOREIGN KEY (COD_ETIQUETA)
	REFERENCES ETIQUETA (CODIGO) ON DELETE CASCADE
);
 
COMMENT ON TABLE ETIQUETAXERADOR IS 'Informes de tipo Etiqueta';
COMMENT ON COLUMN ETIQUETAXERADOR.COD_INFORMEXERADOR IS 'Código identificador del informe.';
COMMENT ON COLUMN ETIQUETAXERADOR.COD_ETIQUETA IS 'Código identificador de la etiqueta base.';
COMMENT ON COLUMN ETIQUETAXERADOR.ANCHO IS 'Ancho de la etiqueta (cm.).';
COMMENT ON COLUMN ETIQUETAXERADOR.ALTO IS 'Alto de la etiqueta (cm.).';
COMMENT ON COLUMN ETIQUETAXERADOR.ESPACIOHORIZONTAL IS 'Espacio horizontal entre etiquetas (cm).';
COMMENT ON COLUMN ETIQUETAXERADOR.ESPACIOVERTICAL IS 'Espacio vertical entre etiquetas (cm).';
COMMENT ON COLUMN ETIQUETAXERADOR.MARXESUPERIOR IS 'Margen superior de la página (cm).';
COMMENT ON COLUMN ETIQUETAXERADOR.MARXEINFERIOR IS 'Margen inferior de la página (cm).';
COMMENT ON COLUMN ETIQUETAXERADOR.MARXEESQUERDA IS 'Margen izquierdo de la página (cm).';
COMMENT ON COLUMN ETIQUETAXERADOR.MARXEDEREITA IS 'Margen derecho de la página (cm).';
COMMENT ON COLUMN ETIQUETAXERADOR.MARXESUPERIORETIQUETA IS 'Margen superior del texto en la etiqueta (cm).';
COMMENT ON COLUMN ETIQUETAXERADOR.MARXEESQUERDAETIQUETA IS 'Margen izquierdo del texto en la etiqueta (cm).';
COMMENT ON COLUMN ETIQUETAXERADOR.BORDEETIQUETA IS 'Imprimir borde de etiqueta (S/N).';
COMMENT ON COLUMN ETIQUETAXERADOR.FONTEDETALLE IS 'Tipo de fuente para el detalle.';
COMMENT ON COLUMN ETIQUETAXERADOR.TAMANOFONTEDETALLE IS 'Tamaño de la fuente para el detalle.';


-- Secuencias para las claves de estructuras y entidades de informes.

CREATE SEQUENCE CONTCAMPOINFORME 
	INCREMENT BY 1 
	START WITH 20000;

CREATE SEQUENCE CONTENTIDADEINFORME
	INCREMENT BY 1 
	START WITH 20;

  
-- TERCEROS Y TERRITORIO

CREATE TABLE T_TID (	
	TID_COD NUMBER(4,0) NOT NULL, 
	TID_DIN NUMBER(1,0) NOT NULL, 
	TID_DUP NUMBER(1,0) NOT NULL, 
	TID_PFI NUMBER(1,0) NOT NULL, 
	TID_NML NUMBER(1,0) NOT NULL, 
	TID_DES VARCHAR2(30) NOT NULL, 
	TID_DG1 NUMBER(2,0) NOT NULL, 
	TID_TD1 VARCHAR2(1) NOT NULL, 
	TID_DG2 NUMBER(2,0), 
	TID_TD2 VARCHAR2(1), 
	TID_DG3 NUMBER(2,0), 
	TID_TD3 VARCHAR2(1), 
	TID_DG4 NUMBER(2,0), 
	TID_TD4 VARCHAR2(1), 
	TID_DG5 NUMBER(2,0), 
	TID_TD5 VARCHAR2(1), 
	TID_LMX NUMBER(2,0), 
	TID_TVA VARCHAR2(1) NOT NULL, 
	TID_COD_ACCEDE VARCHAR2(4), 
	CONSTRAINT PK_T_TID PRIMARY KEY (TID_COD)
);

COMMENT ON TABLE T_TID IS 'TIPOS IDENTIFICADORES';
COMMENT ON COLUMN T_TID.TID_COD IS 'Codigo de Tipo de Identificador';
COMMENT ON COLUMN T_TID.TID_DIN IS 'Documento INE';
COMMENT ON COLUMN T_TID.TID_DUP IS 'Indica la existencia o no de duplicados. Los valores posibles serán:  1=Duplicables,  0=No duplicables';
COMMENT ON COLUMN T_TID.TID_PFI IS 'Indicador de Persona Fisica ( 1 - Fisica, 0 - Juridica)';
COMMENT ON COLUMN T_TID.TID_NML IS '1 - Normalizado / 0 - No Normalizado';
COMMENT ON COLUMN T_TID.TID_DES IS 'Descripcion (NIF, CIF,...)';
COMMENT ON COLUMN T_TID.TID_DG1 IS 'Numero máximo de digitos para el primer grupo';
COMMENT ON COLUMN T_TID.TID_TD1 IS 'Tipo de Digitos del Primer Grupo (N- Numerico / X - AlfaNumerico / A - Alfabetico)';
COMMENT ON COLUMN T_TID.TID_DG2 IS 'Numero máximo de digitos para el segundo grupo';
COMMENT ON COLUMN T_TID.TID_TD2 IS 'Tipo de Digitos del Segundo Grupo (N- Numerico / X - AlfaNumerico / A - Alfabetico)';
COMMENT ON COLUMN T_TID.TID_DG3 IS 'Numero máximo de digitos para el primer grupo';
COMMENT ON COLUMN T_TID.TID_TD3 IS 'Tipo de Digitos del Tercer Grupo (N- Numerico / X - AlfaNumerico / A - Alfabetico)';
COMMENT ON COLUMN T_TID.TID_DG4 IS 'Numero máximo de digitos para el primer grupo';
COMMENT ON COLUMN T_TID.TID_TD4 IS 'Tipo de Digitos del Cuarto Grupo (N- Numerico / X - AlfaNumerico / A - Alfabetico)';
COMMENT ON COLUMN T_TID.TID_DG5 IS 'Numero máximo de digitos para el primer grupo';
COMMENT ON COLUMN T_TID.TID_TD5 IS 'Tipo de Digitos del Quinto Grupo (N- Numerico / X - AlfaNumerico / A - Alfabetico)';
COMMENT ON COLUMN T_TID.TID_LMX IS 'Longitud Máxima del Nombre';
COMMENT ON COLUMN T_TID.TID_TVA IS 'Validacion asociada';
 
CREATE INDEX REL_TT_11_FK ON T_TID (TID_DIN);
  

CREATE TABLE T_TER (	
	TER_COD NUMBER(12,0) NOT NULL, 
	TER_TID NUMBER(2,0) NOT NULL, 
	TER_DOC VARCHAR2(25), 
	TER_NOM VARCHAR2(80) NOT NULL, 
	TER_AP1 VARCHAR2(100), 
	TER_PA1 VARCHAR2(10), 
	TER_AP2 VARCHAR2(100), 
	TER_PA2 VARCHAR2(10), 
	TER_NOC VARCHAR2(160), 
	TER_NML NUMBER(1,0) NOT NULL, 
	TER_TLF VARCHAR2(40), 
	TER_DCE VARCHAR2(50), 
	TER_SIT VARCHAR2(1) NOT NULL, 
	TER_NVE NUMBER(3,0) NOT NULL, 
	TER_FAL DATE NOT NULL, 
	TER_UAL NUMBER(4,0) NOT NULL, 
	TER_APL NUMBER(3,0) NOT NULL, 
	TER_FBJ DATE, 
	TER_UBJ NUMBER(4,0),
	TER_DOM NUMBER(12,0), 
	EXTERNAL_CODE VARCHAR2(15),
	CONSTRAINT PK_T_TER PRIMARY KEY (TER_COD), 
	CONSTRAINT FK_T_TER_REL_TT_01_T_TID FOREIGN KEY (TER_TID)
	REFERENCES T_TID (TID_COD)
);

COMMENT ON COLUMN T_TER.TER_COD IS 'Codigo de Tercero';
COMMENT ON COLUMN T_TER.TER_TID IS 'Tipo de Documento';
COMMENT ON COLUMN T_TER.TER_DOC IS 'Numero de Documento';
COMMENT ON COLUMN T_TER.TER_NOM IS 'Nombre';
COMMENT ON COLUMN T_TER.TER_AP1 IS 'Apellido 1';
COMMENT ON COLUMN T_TER.TER_PA1 IS 'Particula 1';
COMMENT ON COLUMN T_TER.TER_AP2 IS 'Apellido 2';
COMMENT ON COLUMN T_TER.TER_PA2 IS 'Particula 2';
COMMENT ON COLUMN T_TER.TER_NOC IS 'Nombre Completo';
COMMENT ON COLUMN T_TER.TER_NML IS 'Normalizado (0/1)';
COMMENT ON COLUMN T_TER.TER_TLF IS 'Telefono';
COMMENT ON COLUMN T_TER.TER_DCE IS 'Correo Electronico';
COMMENT ON COLUMN T_TER.TER_SIT IS 'Situacion';
COMMENT ON COLUMN T_TER.TER_NVE IS 'Número de Versión';
COMMENT ON COLUMN T_TER.TER_FAL IS 'Fecha de Alta';
COMMENT ON COLUMN T_TER.TER_UAL IS 'Usuario de Alta';
COMMENT ON COLUMN T_TER.TER_APL IS 'Modulo de Alta';
COMMENT ON COLUMN T_TER.TER_UBJ IS 'Usuario de Baja';
COMMENT ON COLUMN T_TER.TER_DOM IS 'Domicilio principal del tercero';
COMMENT ON COLUMN T_TER.EXTERNAL_CODE IS 'Código externo tercero';
COMMENT ON TABLE T_TER IS 'TERCEROS';

 
CREATE INDEX INDEX_TER_DOC ON T_TER (TER_DOC) ;
CREATE INDEX REL_TT_01_FK ON T_TER (TER_TID) ;
 

CREATE TABLE T_TOC (	
	TOC_COD NUMBER(5,0) NOT NULL, 
	TOC_DES VARCHAR2(40) NOT NULL, 
	CONSTRAINT PK_T_TOC PRIMARY KEY (TOC_COD)
);

COMMENT ON TABLE T_TOC IS 'TIPO DE OCUPACION (Vivienda  principal, segunda vivienda, lugar de trabajo...)';


CREATE TABLE T_DOM (	
	DOM_COD NUMBER(12,0) NOT NULL, 
	DOM_NML NUMBER(1,0) NOT NULL, 
	CONSTRAINT PK_T_DOM PRIMARY KEY (DOM_COD)
);

COMMENT ON COLUMN T_DOM.DOM_COD IS 'Codigo de domicilio';
COMMENT ON COLUMN T_DOM.DOM_NML IS 'Indica si el domicilio al que hace referencia pertenece a 1- Direcciones Postales o a 2 - Domicilios NO Normalizados';
COMMENT ON TABLE T_DOM  IS 'DOMICILIOS';


CREATE TABLE T_DOT (	
	DOT_DOM NUMBER(12,0) NOT NULL, 
	DOT_TER NUMBER(12,0) NOT NULL, 
	DOT_TOC NUMBER(5,0), 
	DOT_SIT VARCHAR2(1) NOT NULL, 
	DOT_FEC DATE NOT NULL, 
	DOT_USU NUMBER(4,0) NOT NULL, 
	DOT_DPA NUMBER(1,0) NOT NULL, 
	CONSTRAINT PK_T_DOT PRIMARY KEY (DOT_DOM, DOT_TER), 
	CONSTRAINT FK_T_DOT_REL_TT_09_T_TOC FOREIGN KEY (DOT_TOC)
	REFERENCES T_TOC (TOC_COD), 
	CONSTRAINT FK_T_DOT_REL_TT_08_T_DOM FOREIGN KEY (DOT_DOM)
	REFERENCES T_DOM (DOM_COD)
);

COMMENT ON COLUMN T_DOT.DOT_DOM IS 'Codigo de Domicilio';
COMMENT ON COLUMN T_DOT.DOT_TER IS 'Codigo de Tercero';
COMMENT ON COLUMN T_DOT.DOT_TOC IS 'Tipo de Ocupacion';
COMMENT ON COLUMN T_DOT.DOT_SIT IS 'Situacion (A - Alta / B - Baja)';
COMMENT ON COLUMN T_DOT.DOT_FEC IS 'Fecha Relación';
COMMENT ON COLUMN T_DOT.DOT_USU IS 'Usuario Relación';
COMMENT ON COLUMN T_DOT.DOT_DPA IS 'Domicilio establecido en Padron';
COMMENT ON TABLE T_DOT IS 'RELACIóN DOMICILIOS - TERCEROS';

CREATE INDEX REL_TT_09_FK ON T_DOT (DOT_TOC);
CREATE INDEX REL_TT_07_FK ON T_DOT (DOT_TER);
CREATE INDEX REL_TT_08_FK ON T_DOT (DOT_DOM);
   
   
CREATE TABLE T_HTE (	
	HTE_TER NUMBER(12,0) NOT NULL, 
	HTE_NVR NUMBER(3,0) NOT NULL, 
	HTE_DOT NUMBER(12,0), 
	HTE_TID NUMBER(2,0) NOT NULL, 
	HTE_DOC VARCHAR2(25), 
	HTE_NOM VARCHAR2(80) NOT NULL, 
	HTE_AP1 VARCHAR2(100), 
	HTE_PA1 VARCHAR2(10), 
	HTE_AP2 VARCHAR2(100), 
	HTE_PA2 VARCHAR2(10), 
	HTE_NOC VARCHAR2(160), 
	HTE_NML NUMBER(1,0) NOT NULL, 
	HTE_TLF VARCHAR2(40), 
	HTE_DCE VARCHAR2(50), 
	HTE_FOP DATE NOT NULL, 
	HTE_USU NUMBER(4,0) NOT NULL, 
	HTE_APL NUMBER(3,0) NOT NULL, 
	EXTERNAL_CODE VARCHAR2(15),
	CONSTRAINT PK_T_HTE PRIMARY KEY (HTE_TER, HTE_NVR), 
	CONSTRAINT FK_T_HTE_REL_TT_02_T_TER FOREIGN KEY (HTE_TER)
	REFERENCES T_TER (TER_COD), 
	CONSTRAINT FK_T_HTE_REL_TT_12_T_TID FOREIGN KEY (HTE_TID)
	REFERENCES T_TID (TID_COD), 		
	CONSTRAINT FK_T_HTE_REL_TT_03_T_DOT FOREIGN KEY (HTE_DOT, HTE_TER)
	REFERENCES T_DOT (DOT_DOM, DOT_TER)
);
   
COMMENT ON TABLE T_HTE IS 'HISTORICO DE TERCEROS';
COMMENT ON COLUMN T_HTE.HTE_TER IS 'Tercero';
COMMENT ON COLUMN T_HTE.HTE_NVR IS 'Numero de Version';
COMMENT ON COLUMN T_HTE.HTE_DOT IS 'Codigo de Domicilio';
COMMENT ON COLUMN T_HTE.HTE_TID IS 'Tipo de Documento';
COMMENT ON COLUMN T_HTE.HTE_DOC IS 'Documento';
COMMENT ON COLUMN T_HTE.HTE_NOM IS 'Nombre o Razon Social';
COMMENT ON COLUMN T_HTE.HTE_AP1 IS 'Apellido 1';
COMMENT ON COLUMN T_HTE.HTE_PA1 IS 'Particula 1';
COMMENT ON COLUMN T_HTE.HTE_AP2 IS 'Apellido 2';
COMMENT ON COLUMN T_HTE.HTE_PA2 IS 'Particula 2';
COMMENT ON COLUMN T_HTE.HTE_NOC IS 'Nombre Completo';
COMMENT ON COLUMN T_HTE.HTE_NML IS 'Normalizado';
COMMENT ON COLUMN T_HTE.HTE_TLF IS 'Telefono - Fax';
COMMENT ON COLUMN T_HTE.HTE_DCE IS 'Correo Electrónico';
COMMENT ON COLUMN T_HTE.HTE_FOP IS 'Fecha de Operacion';
COMMENT ON COLUMN T_HTE.HTE_USU IS 'Usuario de la Operacion';
COMMENT ON COLUMN T_HTE.HTE_APL IS 'Modulo de la Operacion';
COMMENT ON COLUMN T_HTE.EXTERNAL_CODE IS 'Código externo tercero';

CREATE INDEX  REL_TT_12_FK ON  T_HTE (HTE_TID);
CREATE INDEX  REL_TT_02_FK ON  T_HTE (HTE_TER);
CREATE INDEX  REL_TT_03_FK ON  T_HTE (HTE_DOT);


CREATE TABLE T_CLS (	
	CLS_COD VARCHAR2(3) NOT NULL, 
	CLS_DES VARCHAR2(80) NOT NULL, 
	CONSTRAINT PK_T_CLS PRIMARY KEY (CLS_COD)
);
  
COMMENT ON TABLE T_CLS IS 'CLASIFICACION DE SUELO';


CREATE TABLE T_COM (
	COM_COD NUMBER(5,0) NOT NULL, 
	COM_NOM VARCHAR2(60), 
	CONSTRAINT PK_T_COM PRIMARY KEY (COM_COD)
);

COMMENT ON TABLE T_COM IS 'COMARCAS';
 

CREATE TABLE T_CPO (	
	CPO_PAI NUMBER(3,0) NOT NULL, 
	CPO_PRV NUMBER(2,0) NOT NULL, 
	CPO_MUN NUMBER(4,0) NOT NULL, 
	CPO_COD VARCHAR2(8) NOT NULL, 
	CPO_DEF NUMBER(1,0) NOT NULL, 
	CONSTRAINT PK_T_CPO PRIMARY KEY (CPO_PAI, CPO_PRV, CPO_MUN, CPO_COD)
);

COMMENT ON TABLE T_CPO IS 'CODIGOS POSTALES';
CREATE INDEX REL_TT_43_FK ON T_CPO (CPO_PAI, CPO_PRV, CPO_MUN);

 
CREATE TABLE T_CSU (	
	CSU_COD VARCHAR2(2) NOT NULL, 
	CSU_DES VARCHAR2(80) NOT NULL, 
	CONSTRAINT PK_T_CSU PRIMARY KEY (CSU_COD)
);

COMMENT ON TABLE T_CSU  IS 'CALIFICACION DEL SUELO (calificaciones suelo de las parcelas catastrales a efectos urbanásticos y de catastro)';
 

CREATE TABLE T_DIN (
	DIN_COD NUMBER(1,0) NOT NULL, 
	DIN_DES VARCHAR2(60) NOT NULL, 
	CONSTRAINT PK_T_DIN PRIMARY KEY (DIN_COD)
);

COMMENT ON COLUMN T_DIN.DIN_COD IS 'Codigo de Documento';
COMMENT ON COLUMN T_DIN.DIN_DES IS 'Descripcion del documento';
COMMENT ON TABLE T_DIN  IS 'DOCUMENTOS INE';


CREATE TABLE T_DIS (	
	DIS_PAI NUMBER(3,0) NOT NULL, 
	DIS_PRV NUMBER(2,0) NOT NULL, 
	DIS_MUN NUMBER(3,0) NOT NULL, 
	DIS_COD NUMBER(2,0) NOT NULL, 
	DIS_NOM VARCHAR2(25), 
	DIS_NOL VARCHAR2(50), 
	DIS_IDO VARCHAR2(14), 
	CONSTRAINT PK_T_DIS PRIMARY KEY (DIS_PAI, DIS_PRV, DIS_MUN, DIS_COD)
);

COMMENT ON COLUMN T_DIS.DIS_PAI IS 'Pais';
COMMENT ON COLUMN T_DIS.DIS_PRV IS 'Provincia';
COMMENT ON COLUMN T_DIS.DIS_MUN IS 'Municipio';
COMMENT ON COLUMN T_DIS.DIS_COD IS 'Codigo';
COMMENT ON COLUMN T_DIS.DIS_NOM IS 'Nombre Oficial';
COMMENT ON COLUMN T_DIS.DIS_NOL IS 'Nombre Corto';
COMMENT ON COLUMN T_DIS.DIS_IDO IS 'Identificador del Objeto Gráfico';
COMMENT ON TABLE T_DIS  IS 'DISTRITOS CENSALES (unidades territoriales que dividen el municipio )';

CREATE INDEX REL_TT_45_FK ON T_DIS (DIS_PAI, DIS_PRV, DIS_MUN);


CREATE TABLE T_TVV (	
	TVV_COD NUMBER(1,0) NOT NULL, 
	TVV_DES VARCHAR2(50) NOT NULL, 
	CONSTRAINT PK_T_TVV PRIMARY KEY (TVV_COD)
);

COMMENT ON TABLE T_TVV IS 'TIPO DE VIVIENDA';


CREATE TABLE T_DPO (	
	DPO_DOM NUMBER(12,0) NOT NULL, 
	DPO_DSU NUMBER(12,0) NOT NULL, 
	DPO_ESC VARCHAR2(2), 
	DPO_PLT VARCHAR2(3), 
	DPO_TVV NUMBER(1,0), 
	DPO_PTA VARCHAR2(4), 
	DPO_OBS VARCHAR2(80), 
	DPO_SIT VARCHAR2(1) NOT NULL, 
	DPO_FAL DATE NOT NULL, 
	DPO_UAL NUMBER(4,0) NOT NULL, 
	DPO_FBJ DATE, 
	DPO_UBJ NUMBER(4,0), 
	DPO_FIV DATE NOT NULL, 
	CONSTRAINT PK_T_DPO PRIMARY KEY (DPO_DOM), 
	CONSTRAINT FK_T_DPO_REL_TT_34_T_TVV FOREIGN KEY (DPO_TVV)
	REFERENCES   T_TVV (TVV_COD), 
	CONSTRAINT FK_T_DPO_REL_TT_21_T_DOM FOREIGN KEY (DPO_DOM)
	REFERENCES   T_DOM (DOM_COD)
);

COMMENT ON COLUMN T_DPO.DPO_DOM IS 'Codigo de Domicilio';
COMMENT ON COLUMN T_DPO.DPO_DSU IS 'Direccion Suelo Asociada';
COMMENT ON COLUMN T_DPO.DPO_ESC IS 'Escalera';
COMMENT ON COLUMN T_DPO.DPO_PLT IS 'Planta';
COMMENT ON COLUMN T_DPO.DPO_TVV IS 'Tipo de Vivienda (1-Familiar, 2-colectiva)';
COMMENT ON COLUMN T_DPO.DPO_PTA IS 'Puerta';
COMMENT ON COLUMN T_DPO.DPO_OBS IS 'Observaciones';
COMMENT ON COLUMN T_DPO.DPO_SIT IS 'Situacion';
COMMENT ON COLUMN T_DPO.DPO_FAL IS 'Fecha Alta';
COMMENT ON COLUMN T_DPO.DPO_UAL IS 'Usuario de Alta';
COMMENT ON COLUMN T_DPO.DPO_FBJ IS 'Fecha Baja';
COMMENT ON COLUMN T_DPO.DPO_UBJ IS 'Usuario de Baja';
COMMENT ON COLUMN T_DPO.DPO_FIV IS 'Fecha de Inicio de Vigencia';
COMMENT ON TABLE T_DPO  IS 'DIRECCIONES POSTALES';

CREATE INDEX REL_TT_34_FK ON T_DPO (DPO_TVV);
CREATE INDEX REL_TT_26_FK ON T_DPO (DPO_DSU);
CREATE INDEX REL_TT_35_FK ON T_DPO (DPO_ESC);
CREATE INDEX REL_TT_36_FK ON T_DPO (DPO_PLT);
 

CREATE TABLE T_HDP (	
	HDP_DOM NUMBER(12,0) NOT NULL, 
	HDP_VER NUMBER(3,0) NOT NULL, 
	HDP_TVV NUMBER(1,0), 
	HDP_PLT VARCHAR2(3), 
	HDP_ESC VARCHAR2(2), 
	HDP_DADS NUMBER(12,0), 
	HDP_DHDS NUMBER(12,0), 
	HDP_DHVE NUMBER(3,0), 
	HDP_PTA VARCHAR2(4), 
	HDP_FIV DATE NOT NULL, 
	HDP_FFV DATE NOT NULL, 
	HDP_UOP NUMBER(4,0) NOT NULL, 
	CONSTRAINT PK_T_HDP PRIMARY KEY (HDP_DOM, HDP_VER), 
	CONSTRAINT FK_T_HDP_REL_TT_98_T_TVV FOREIGN KEY (HDP_TVV)
	REFERENCES  T_TVV (TVV_COD), 
	CONSTRAINT FK_T_HDP_REL_TT_97_T_DPO FOREIGN KEY (HDP_DOM)
	REFERENCES  T_DPO (DPO_DOM)
);
 
COMMENT ON TABLE T_HDP IS 'HISTÓRICO DE DIRECCIONES POSTALES';
COMMENT ON COLUMN T_HDP.HDP_DOM IS 'Codigo de Domicilio';
COMMENT ON COLUMN T_HDP.HDP_VER IS 'Numero de Version';
COMMENT ON COLUMN T_HDP.HDP_TVV IS 'Tipo de Vivienda';
COMMENT ON COLUMN T_HDP.HDP_PLT IS 'Planta';
COMMENT ON COLUMN T_HDP.HDP_ESC IS 'Escalera';
COMMENT ON COLUMN T_HDP.HDP_DHDS IS 'Direccion Suelo Asociada';
COMMENT ON COLUMN T_HDP.HDP_PTA IS 'Puerta';
COMMENT ON COLUMN T_HDP.HDP_FIV IS 'Fecha Inicio de Vigencia';
COMMENT ON COLUMN T_HDP.HDP_FFV IS 'Fecha Fin de Vigencia';
COMMENT ON COLUMN T_HDP.HDP_UOP IS 'Usuario de la Operacion';


CREATE TABLE T_OEX (	
	OEX_COD VARCHAR2(2) NOT NULL, 
	OEX_DES VARCHAR2(80), 
	CONSTRAINT PK_T_OEX PRIMARY KEY (OEX_COD)
);

COMMENT ON TABLE T_OEX  IS 'ORGANISMOS EXTERNOS';


CREATE TABLE T_ECO (	
	ECO_PAI NUMBER(3,0) NOT NULL, 
	ECO_PRV NUMBER(2,0) NOT NULL, 
	ECO_MUN NUMBER(3,0) NOT NULL, 
	ECO_COD NUMBER(5,0) NOT NULL, 
	ECO_CIN NUMBER(2,0) NOT NULL, 
	ECO_NOM VARCHAR2(25) NOT NULL, 
	ECO_NOL VARCHAR2(50), 
	ECO_IDO VARCHAR2(14), 
	ECO_SIT VARCHAR2(1), 
	CONSTRAINT PK_T_ECO PRIMARY KEY (ECO_PAI, ECO_PRV, ECO_MUN, ECO_COD)
);

COMMENT ON COLUMN T_ECO.ECO_PAI IS 'Pais';
COMMENT ON COLUMN T_ECO.ECO_PRV IS 'Provincia';
COMMENT ON COLUMN T_ECO.ECO_MUN IS 'Municipio';
COMMENT ON COLUMN T_ECO.ECO_COD IS 'Codigo de Entidad Colectiva';
COMMENT ON COLUMN T_ECO.ECO_CIN IS 'Codigo INE';
COMMENT ON COLUMN T_ECO.ECO_NOM IS 'Nombre Oficial';
COMMENT ON COLUMN T_ECO.ECO_NOL IS 'Nombre Largo';
COMMENT ON COLUMN T_ECO.ECO_IDO IS 'Identificador Grafico del Objeto';
COMMENT ON COLUMN T_ECO.ECO_SIT IS 'Situacion (A: Alta, O: Modificacion por Error, R: Modificacion con Rectificacion)';
COMMENT ON TABLE T_ECO IS 'ENTIDADES COLECTIVAS (aparece en algunas regiones como una unidad territorial intermedia entre la Entidad Singular de poblacion y el Municipio)';

CREATE INDEX REL_TT_70_FK ON T_ECO (ECO_PAI, ECO_PRV, ECO_MUN);
  
  
CREATE TABLE T_CEC (	
	CEC_OEX VARCHAR2(2) NOT NULL, 
	CEC_COD VARCHAR2(15) NOT NULL, 
	CEC_PAI NUMBER(3,0) NOT NULL, 
	CEC_PRV NUMBER(2,0) NOT NULL, 
	CEC_MUN NUMBER(3,0) NOT NULL, 
	CEC_ECO NUMBER(5,0) NOT NULL, 
	CEC_NOM VARCHAR2(50) NOT NULL, 
	CONSTRAINT PK_T_CEC PRIMARY KEY (CEC_OEX, CEC_COD), 
	CONSTRAINT FK_T_CEC_REL_TT_79_T_ECO FOREIGN KEY (CEC_PAI, CEC_PRV, CEC_MUN, CEC_ECO)
	REFERENCES T_ECO (ECO_PAI, ECO_PRV, ECO_MUN, ECO_COD), 
	CONSTRAINT FK_T_CEC_REL_TT_78_T_OEX FOREIGN KEY (CEC_OEX)
	REFERENCES T_OEX (OEX_COD)
);

COMMENT ON COLUMN T_CEC.CEC_OEX IS 'Organismo Externo';
COMMENT ON COLUMN T_CEC.CEC_COD IS 'Codigo';
COMMENT ON COLUMN T_CEC.CEC_PAI IS 'Pais'; 
COMMENT ON COLUMN T_CEC.CEC_PRV IS 'Provinia';
COMMENT ON COLUMN T_CEC.CEC_MUN IS 'Municipio';
COMMENT ON COLUMN T_CEC.CEC_ECO IS 'Entidad Colectiva';
COMMENT ON COLUMN T_CEC.CEC_NOM IS 'Nombre';
COMMENT ON TABLE T_CEC  IS 'ENTIDADES COLECTIVAS EXTERNAS';
 
CREATE INDEX REL_TT_78_FK ON T_CEC (CEC_OEX);
CREATE INDEX REL_TT_79_FK ON T_CEC (CEC_PAI, CEC_PRV, CEC_MUN, CEC_ECO);
  
 
CREATE TABLE T_ESI (	
	ESI_PAI NUMBER(3,0) NOT NULL, 
	ESI_PRV NUMBER(2,0) NOT NULL, 
	ESI_MUN NUMBER(3,0) NOT NULL, 
	ESI_COD NUMBER(5,0) NOT NULL, 
	ESI_ECO NUMBER(5,0), 
	ESI_CIN NUMBER(2,0) NOT NULL, 
	ESI_DCO VARCHAR2(1) NOT NULL, 
	ESI_NOM VARCHAR2(25) NOT NULL, 
	ESI_NOL VARCHAR2(50), 
	ESI_KMC NUMBER(4,0), 
	ESI_ALT NUMBER(5,0), 
	ESI_IDO VARCHAR2(14), 
	ESI_SIT VARCHAR2(1), 
	ESI_PAEC NUMBER(3,0), 
	ESI_PREC NUMBER(2,0), 
	ESI_MUEC NUMBER(3,0), 
	CONSTRAINT PK_T_ESI PRIMARY KEY (ESI_PAI, ESI_PRV, ESI_MUN, ESI_COD), 
	CONSTRAINT FK_T_ESI_REL_TT_61_T_ECO FOREIGN KEY (ESI_PAEC, ESI_PREC, ESI_MUEC, ESI_ECO)
	REFERENCES T_ECO (ECO_PAI, ECO_PRV, ECO_MUN, ECO_COD)
);

COMMENT ON TABLE T_ESI IS 'ENTIDADES SINGULARES';
COMMENT ON COLUMN T_ESI.ESI_PAI IS 'Pais';
COMMENT ON COLUMN T_ESI.ESI_PRV IS 'Provincia';
COMMENT ON COLUMN T_ESI.ESI_MUN IS 'Municipio';
COMMENT ON COLUMN T_ESI.ESI_COD IS 'Codigo de Entidad Singular';
COMMENT ON COLUMN T_ESI.ESI_ECO IS 'Entidad Colectiva a la que pertenece';
COMMENT ON COLUMN T_ESI.ESI_CIN IS 'Código INE';
COMMENT ON COLUMN T_ESI.ESI_DCO IS 'Dígito de Control';
COMMENT ON COLUMN T_ESI.ESI_NOM IS 'Nombre Oficial';
COMMENT ON COLUMN T_ESI.ESI_NOL IS 'Nombre Largo';
COMMENT ON COLUMN T_ESI.ESI_KMC IS 'Kilometros a la capital';
COMMENT ON COLUMN T_ESI.ESI_ALT IS 'Altitud';
COMMENT ON COLUMN T_ESI.ESI_IDO IS 'Identificador de Objeto Gráfico';
COMMENT ON COLUMN T_ESI.ESI_SIT IS 'Situacion';

CREATE INDEX REL_TT_56_FK ON T_ESI (ESI_PAI, ESI_PRV, ESI_MUN);
CREATE INDEX REL_TT_61_FK ON T_ESI (ESI_PAEC, ESI_PREC, ESI_MUEC, ESI_ECO);
 
 
CREATE TABLE T_CES (	
	CES_OEX VARCHAR2(2) NOT NULL, 
	CES_COD VARCHAR2(15) NOT NULL, 
	CES_PAI NUMBER(3,0) NOT NULL, 
	CES_PRV NUMBER(2,0) NOT NULL, 
	CES_MUN NUMBER(3,0) NOT NULL, 
	CES_ESI NUMBER(5,0) NOT NULL, 
	CES_NOM VARCHAR2(50) NOT NULL, 
	CONSTRAINT PK_T_CES PRIMARY KEY (CES_OEX, CES_COD), 
	CONSTRAINT FK_T_CES_REL_TT_77_T_ESI FOREIGN KEY (CES_PAI, CES_PRV, CES_MUN, CES_ESI)
	REFERENCES T_ESI (ESI_PAI, ESI_PRV, ESI_MUN, ESI_COD), 
	CONSTRAINT FK_T_CES_REL_TT_76_T_OEX FOREIGN KEY (CES_OEX)
	REFERENCES T_OEX (OEX_COD)
);

COMMENT ON COLUMN T_CES.CES_OEX IS 'Organismo Externo';
COMMENT ON COLUMN T_CES.CES_COD IS 'Codigo de Entidad Singular Externa';
COMMENT ON COLUMN T_CES.CES_PAI IS 'Pais';
COMMENT ON COLUMN T_CES.CES_PRV IS 'Provicia';
COMMENT ON COLUMN T_CES.CES_MUN IS 'Municipio';
COMMENT ON COLUMN T_CES.CES_ESI IS 'Entidad Sigular';
COMMENT ON COLUMN T_CES.CES_NOM IS 'Nombre';
COMMENT ON TABLE T_CES IS 'ENTIDADES SINGULARES EXTERNAS'; 


CREATE TABLE T_NUC (	
	NUC_PAI NUMBER(3,0) NOT NULL, 
	NUC_PRV NUMBER(2,0) NOT NULL, 
	NUC_MUN NUMBER(3,0) NOT NULL, 
	NUC_ESI NUMBER(5,0) NOT NULL, 
	NUC_COD NUMBER(5,0) NOT NULL, 
	NUC_CIN NUMBER(2,0) NOT NULL, 
	NUC_NOM VARCHAR2(25) NOT NULL, 
	NUC_NOL VARCHAR2(50), 
	NUC_IDO VARCHAR2(14), 
	NUC_SIT VARCHAR2(1) NOT NULL, 
	NUC_FBA DATE, 
	NUC_UBA NUMBER(4,0), 
	NUC_FIV DATE NOT NULL, 
	CONSTRAINT PK_T_NUC PRIMARY KEY (NUC_PAI, NUC_PRV, NUC_MUN, NUC_ESI, NUC_COD), 
	CONSTRAINT FK_T_NUC_REL_TT_64_T_ESI FOREIGN KEY (NUC_PAI, NUC_PRV, NUC_MUN, NUC_ESI)
	REFERENCES T_ESI (ESI_PAI, ESI_PRV, ESI_MUN, ESI_COD)
);

COMMENT ON COLUMN T_NUC.NUC_PAI IS 'Pais';
COMMENT ON COLUMN T_NUC.NUC_PRV IS 'Provincia';
COMMENT ON COLUMN T_NUC.NUC_MUN IS 'Municipio';
COMMENT ON COLUMN T_NUC.NUC_ESI IS 'Entidad Singular';
COMMENT ON COLUMN T_NUC.NUC_COD IS 'Codigo de Nucleo';
COMMENT ON COLUMN T_NUC.NUC_CIN IS 'Codigo INE';
COMMENT ON COLUMN T_NUC.NUC_NOM IS 'Nombre';
COMMENT ON COLUMN T_NUC.NUC_NOL IS 'Nombre Largo';
COMMENT ON COLUMN T_NUC.NUC_IDO IS 'Identificador de Objeto Grafico';
COMMENT ON COLUMN T_NUC.NUC_SIT IS 'Situacion (A: Alta, O: Modificacion por Error, R: Modificacion con Rectificacion; B: Baja)';
COMMENT ON COLUMN T_NUC.NUC_FBA IS 'Fecha de Baja';
COMMENT ON COLUMN T_NUC.NUC_UBA IS 'Usuario de Baja';
COMMENT ON COLUMN T_NUC.NUC_FIV IS 'Fecha Inicio de Vigencia';
COMMENT ON TABLE T_NUC IS 'NUCLEOS DISEMINADOS';
 
CREATE INDEX REL_TT_64_FK ON T_NUC (NUC_PAI, NUC_PRV, NUC_MUN, NUC_ESI);


CREATE TABLE T_CNU (	
	CNU_OEX VARCHAR2(2) NOT NULL, 
	CNU_COD VARCHAR2(15) NOT NULL, 
	CNU_PAI NUMBER(3,0) NOT NULL, 
	CNU_PRV NUMBER(2,0) NOT NULL, 
	CNU_MUN NUMBER(3,0) NOT NULL, 
	CNU_ESI NUMBER(5,0) NOT NULL, 
	CNU_NUC NUMBER(5,0) NOT NULL, 
	CNU_NOM VARCHAR2(50) NOT NULL, 
	CONSTRAINT PK_T_CNU PRIMARY KEY (CNU_OEX, CNU_COD), 
	CONSTRAINT FK_T_CNU_REL_TT_75_T_NUC FOREIGN KEY (CNU_PAI, CNU_PRV, CNU_MUN, CNU_ESI, CNU_NUC)
	REFERENCES T_NUC (NUC_PAI, NUC_PRV, NUC_MUN, NUC_ESI, NUC_COD), 
	CONSTRAINT FK_T_CNU_REL_TT_74_T_OEX FOREIGN KEY (CNU_OEX)
	REFERENCES T_OEX (OEX_COD)
);

COMMENT ON COLUMN T_CNU.CNU_OEX IS 'Organismos Externos'; 
COMMENT ON COLUMN T_CNU.CNU_COD IS 'Codigo de Nucleo Externo';
COMMENT ON COLUMN T_CNU.CNU_PAI IS 'Pais'; 
COMMENT ON COLUMN T_CNU.CNU_PRV IS 'Proia';
COMMENT ON COLUMN T_CNU.CNU_MUN IS 'Municipio';
COMMENT ON COLUMN T_CNU.CNU_ESI IS 'Entidad Singular';
COMMENT ON COLUMN T_CNU.CNU_NUC IS 'Nucleo';
COMMENT ON COLUMN T_CNU.CNU_NOM IS 'Nombre';
COMMENT ON TABLE T_CNU IS 'NUCLEOS EXTERNOS';
 

CREATE TABLE T_CVE (	
	CVE_OEX VARCHAR2(2) NOT NULL, 
	CVE_COD VARCHAR2(15) NOT NULL, 
	CVE_PAI NUMBER(3,0) NOT NULL, 
	CVE_PRV NUMBER(2,0) NOT NULL, 
	CVE_MUN NUMBER(3,0) NOT NULL, 
	CVE_VIA NUMBER(12,0) NOT NULL, 
	CVE_NOM VARCHAR2(50) NOT NULL, 
	CONSTRAINT PK_T_CVE PRIMARY KEY (CVE_COD, CVE_OEX), 
	CONSTRAINT FK_T_CVE_REL_TT_30_T_OEX FOREIGN KEY (CVE_OEX)
	REFERENCES T_OEX (OEX_COD)
);

COMMENT ON COLUMN T_CVE.CVE_OEX IS 'Organismo Externo';
COMMENT ON COLUMN T_CVE.CVE_COD IS 'Codigo de Vial';
COMMENT ON COLUMN T_CVE.CVE_PAI IS 'Pais';
COMMENT ON COLUMN T_CVE.CVE_PRV IS 'Provincia';
COMMENT ON COLUMN T_CVE.CVE_MUN IS 'Municipio';
COMMENT ON COLUMN T_CVE.CVE_VIA IS 'Vial';
COMMENT ON COLUMN T_CVE.CVE_NOM IS 'Nombre';
COMMENT ON TABLE T_CVE IS 'VIALES EXTERNOS';


CREATE TABLE T_GRU (	
	GRU_COD NUMBER(2,0) NOT NULL, 
	GRU_DES VARCHAR2(50) NOT NULL, 
	CONSTRAINT PK_T_GRU PRIMARY KEY (GRU_COD)
);

COMMENT ON TABLE T_GRU  IS 'GRUPOS DE TERCEROS';


CREATE TABLE T_HDS (	
	HDS_DSU NUMBER(12,0) NOT NULL, 
	HDS_VER NUMBER(3,0) NOT NULL, 
	HDS_NUD NUMBER(4,0) NOT NULL, 
	HDS_LED VARCHAR2(1), 
	HDS_NUH NUMBER(4,0), 
	HDS_LEH VARCHAR2(1), 
	HDS_BLQ VARCHAR2(3), 
	HDS_POR VARCHAR2(2), 
	HDS_FIV DATE NOT NULL, 
	HDS_FFV DATE NOT NULL, 
	HDS_UOP NUMBER(4,0) NOT NULL, 
	CONSTRAINT PK_T_HDS PRIMARY KEY (HDS_VER, HDS_DSU)
);

COMMENT ON COLUMN T_HDS.HDS_DSU IS 'Codigo de Direccion Suelo';
COMMENT ON COLUMN T_HDS.HDS_VER IS 'Version';
COMMENT ON COLUMN T_HDS.HDS_NUD IS 'Numero de Gobierno Desde';
COMMENT ON COLUMN T_HDS.HDS_LED IS 'Letra Desde';
COMMENT ON COLUMN T_HDS.HDS_NUH IS 'Numero de Gobierno Hasta';
COMMENT ON COLUMN T_HDS.HDS_LEH IS 'Letra Hasta';
COMMENT ON COLUMN T_HDS.HDS_BLQ IS 'Bloque';
COMMENT ON COLUMN T_HDS.HDS_POR IS 'Portal';
COMMENT ON COLUMN T_HDS.HDS_FIV IS 'Fecha de Inicio de Vigencia';
COMMENT ON COLUMN T_HDS.HDS_FFV IS 'Fecha Fin de Vigencia';
COMMENT ON COLUMN T_HDS.HDS_UOP IS 'Usuario Operacion';
COMMENT ON TABLE T_HDS IS 'HISTORICO DE DIRECCIONES SUELO';


CREATE TABLE T_CBJ (	
	CBJ_COD NUMBER(3,0) NOT NULL, 
	CBJ_DES VARCHAR2(80), 
	CONSTRAINT PK_T_CBJ PRIMARY KEY (CBJ_COD)
);

COMMENT ON TABLE T_CBJ IS 'CAUSAS DE BAJA';


CREATE TABLE T_MNZ (	
	MNZ_HOJ VARCHAR2(7) NOT NULL, 
	MNZ_MNZ VARCHAR2(5) NOT NULL, 
	MNZ_CBJ NUMBER(3,0), 
	MNZ_CEX NUMBER(6,2), 
	MNZ_CEY NUMBER(7,2), 
	MNZ_CEZ NUMBER(4,2), 
	MNZ_FAL DATE NOT NULL, 
	MNZ_UAL NUMBER(4,0) NOT NULL, 
	MNZ_FBJ DATE, 
	MNZ_UBJ NUMBER(4,0), 
	MNZ_SIT VARCHAR2(1) NOT NULL, 
	CONSTRAINT PK_T_MNZ PRIMARY KEY (MNZ_HOJ, MNZ_MNZ), 
	CONSTRAINT FK_T_MNZ_REL_TT_33_T_CBJ FOREIGN KEY (MNZ_CBJ)
	REFERENCES T_CBJ (CBJ_COD)
);
 
COMMENT ON COLUMN T_MNZ.MNZ_HOJ IS 'Hoja';
COMMENT ON COLUMN T_MNZ.MNZ_MNZ IS 'Manzana';
COMMENT ON COLUMN T_MNZ.MNZ_CBJ IS 'Causas de Baja de la Manzana';
COMMENT ON COLUMN T_MNZ.MNZ_CEX IS 'Centro X';
COMMENT ON COLUMN T_MNZ.MNZ_CEY IS 'Centro Y';
COMMENT ON COLUMN T_MNZ.MNZ_CEZ IS 'Centro Z';
COMMENT ON COLUMN T_MNZ.MNZ_FAL IS 'Fecha de Alta';
COMMENT ON COLUMN T_MNZ.MNZ_UAL IS 'Usuario de Alta';
COMMENT ON COLUMN T_MNZ.MNZ_FBJ IS 'Fecha de Baja';
COMMENT ON COLUMN T_MNZ.MNZ_UBJ IS 'Usuario de Baja';
COMMENT ON COLUMN T_MNZ.MNZ_SIT IS 'Situacion';
COMMENT ON TABLE T_MNZ IS 'MANZANAS';

 
CREATE TABLE T_SEC (
	SEC_PAI NUMBER(3,0) NOT NULL, 
	SEC_PRV NUMBER(2,0) NOT NULL, 
	SEC_MUN NUMBER(3,0) NOT NULL, 
	SEC_DIS NUMBER(2,0) NOT NULL, 
	SEC_COD NUMBER(3,0) NOT NULL, 
	SEC_NOM VARCHAR2(25), 
	SEC_NOL VARCHAR2(50), 
	SEC_IDO VARCHAR2(14), 
	SEC_CHJ NUMBER(4,0), 
	SEC_LET VARCHAR2(1) NOT NULL, 
	CONSTRAINT PK_T_SEC PRIMARY KEY (SEC_PAI, SEC_PRV, SEC_MUN, SEC_DIS, SEC_COD, SEC_LET), 
	CONSTRAINT FK_T_SEC_REL_TT_55_T_DIS FOREIGN KEY (SEC_PAI, SEC_PRV, SEC_MUN, SEC_DIS)
	REFERENCES T_DIS (DIS_PAI, DIS_PRV, DIS_MUN, DIS_COD)
);
 
COMMENT ON COLUMN T_SEC.SEC_PAI IS 'Pais';
COMMENT ON COLUMN T_SEC.SEC_PRV IS 'Provincia';
COMMENT ON COLUMN T_SEC.SEC_MUN IS 'Municipio';
COMMENT ON COLUMN T_SEC.SEC_DIS IS 'Distrito';
COMMENT ON COLUMN T_SEC.SEC_COD IS 'Codigo de Seccion';
COMMENT ON COLUMN T_SEC.SEC_NOM IS 'Nombre Oficial';
COMMENT ON COLUMN T_SEC.SEC_NOL IS 'Nombre Largo';
COMMENT ON COLUMN T_SEC.SEC_IDO IS 'Identificador de Objeto Grafico';
COMMENT ON COLUMN T_SEC.SEC_CHJ IS 'Contador de Hojas';
COMMENT ON COLUMN T_SEC.SEC_LET IS 'Letra de seccion';
COMMENT ON TABLE T_SEC IS 'SECCIONES CENSALES (Una o varias Secciones Censales conforman un Distrito Censal)';

CREATE INDEX REL_TT_55_FK ON T_SEC (SEC_PAI, SEC_PRV, SEC_MUN, SEC_DIS);
 

CREATE TABLE T_MZI (	
	MZI_PAI NUMBER(3,0) NOT NULL, 
	MZI_PRV NUMBER(2,0) NOT NULL, 
	MZI_MUN NUMBER(3,0) NOT NULL, 
	MZI_DIS NUMBER(2,0) NOT NULL, 
	MZI_SEC NUMBER(3,0) NOT NULL, 
	MZI_LET VARCHAR2(1) NOT NULL, 
	MZI_COD VARCHAR2(3) NOT NULL, 
	MZI_NOM VARCHAR2(80), 
	CONSTRAINT PK_T_MZI PRIMARY KEY (MZI_PAI, MZI_PRV, MZI_MUN, MZI_DIS, MZI_SEC, MZI_LET, MZI_COD), 
	CONSTRAINT FK_T_MZI_REL_TT_48_T_SEC FOREIGN KEY (MZI_PAI, MZI_PRV, MZI_MUN, MZI_DIS, MZI_SEC, MZI_LET)
	REFERENCES T_SEC (SEC_PAI, SEC_PRV, SEC_MUN, SEC_DIS, SEC_COD, SEC_LET)
);
 
COMMENT ON TABLE T_MZI IS 'MANZANAS INE';
COMMENT ON COLUMN T_MZI.MZI_PAI IS 'Código de país';
COMMENT ON COLUMN T_MZI.MZI_PRV IS 'Código de provincia';
COMMENT ON COLUMN T_MZI.MZI_MUN IS 'Código del municipio';
COMMENT ON COLUMN T_MZI.MZI_DIS IS 'Código de distrito';
COMMENT ON COLUMN T_MZI.MZI_SEC IS 'Código de sección';
COMMENT ON COLUMN T_MZI.MZI_LET IS 'Letra de sección';
COMMENT ON COLUMN T_MZI.MZI_COD IS 'Código de manzana';
COMMENT ON COLUMN T_MZI.MZI_NOM IS 'Descripción';

CREATE INDEX REL_TT_48_FK ON T_MZI (MZI_PAI, MZI_PRV, MZI_MUN, MZI_DIS, MZI_SEC, MZI_LET);
  
  
CREATE TABLE T_SGT (	
	SGT_GRU NUMBER(2,0) NOT NULL, 
	SGT_COD NUMBER(2,0) NOT NULL, 
	SGT_DES VARCHAR2(50) NOT NULL, 
	CONSTRAINT PK_T_SGT PRIMARY KEY (SGT_GRU, SGT_COD), 
	CONSTRAINT FK_T_SGT_REL_TT_06_T_GRU FOREIGN KEY (SGT_GRU)
	REFERENCES T_GRU (GRU_COD)
);

COMMENT ON TABLE T_SGT  IS 'SUBGRUPOS DE TERCEROS';
 

CREATE TABLE T_SSC (	
	SSC_PAI NUMBER(3,0) NOT NULL, 
	SSC_PRV NUMBER(2,0) NOT NULL, 
	SSC_MUN NUMBER(3,0) NOT NULL, 
	SSC_DIS NUMBER(2,0) NOT NULL, 
	SSC_SEC NUMBER(3,0) NOT NULL, 
	SSC_COD VARCHAR2(2) NOT NULL, 
	SSC_NOM VARCHAR2(25), 
	SSC_NOL VARCHAR2(50), 
	SSC_LET VARCHAR2(1) NOT NULL, 
	CONSTRAINT PK_T_SSC PRIMARY KEY (SSC_PAI, SSC_PRV, SSC_MUN, SSC_DIS, SSC_SEC, SSC_LET, SSC_COD), 
	CONSTRAINT FK_T_SSC_REL_TT_49_T_SEC FOREIGN KEY (SSC_PAI, SSC_PRV, SSC_MUN, SSC_DIS, SSC_SEC, SSC_LET)
	REFERENCES T_SEC (SEC_PAI, SEC_PRV, SEC_MUN, SEC_DIS, SEC_COD, SEC_LET)
);

COMMENT ON COLUMN T_SSC.SSC_PAI IS 'Pais';
COMMENT ON COLUMN T_SSC.SSC_PRV IS 'Provincia';
COMMENT ON COLUMN T_SSC.SSC_MUN IS 'Municipio';
COMMENT ON COLUMN T_SSC.SSC_DIS IS 'Distrito Censal';
COMMENT ON COLUMN T_SSC.SSC_SEC IS 'Seccion Censal';
COMMENT ON COLUMN T_SSC.SSC_COD IS 'Codigo de Subseccion Censal';
COMMENT ON COLUMN T_SSC.SSC_NOM IS 'Nombre Oficial';
COMMENT ON COLUMN T_SSC.SSC_NOL IS 'Nombre Largo';
COMMENT ON TABLE T_SSC IS 'SUBSECCIONES CENSALES';

CREATE INDEX REL_TT_49_FK ON T_SSC (SSC_PAI, SSC_PRV, SSC_MUN, SSC_DIS, SSC_SEC, SSC_LET);
 
  
CREATE TABLE T_TNU (	
	TNU_COD VARCHAR2(1) NOT NULL, 
	TNU_DES VARCHAR2(30), 
	CONSTRAINT PK_T_TNU PRIMARY KEY (TNU_COD)
);

COMMENT ON TABLE T_TNU IS 'TIPO DE NUMERACION (0=Sin numeración,  1=Numeración Impar, 2=Numeración Par)';
 

CREATE TABLE T_TVI (	
	TVI_COD NUMBER(5,0) NOT NULL, 
	TVI_ABR VARCHAR2(5) NOT NULL, 
	TVI_DES VARCHAR2(60), 
	CONSTRAINT PK_T_TVI PRIMARY KEY (TVI_COD)
);

COMMENT ON COLUMN T_TVI.TVI_COD IS 'Codigo de Tipo de Via';
COMMENT ON COLUMN T_TVI.TVI_ABR IS 'Abreviatura';
COMMENT ON COLUMN T_TVI.TVI_DES IS 'Descripcion';
COMMENT ON TABLE T_TVI IS 'TIPOS DE VIAS';
  
  
CREATE TABLE T_VIA (	
	VIA_PAI NUMBER(3,0) NOT NULL, 
	VIA_PRV NUMBER(2,0) NOT NULL, 
	VIA_MUN NUMBER(4,0) NOT NULL, 
	VIA_COD NUMBER(12,0) NOT NULL, 
	VIA_TVI NUMBER(5,0) NOT NULL, 
	VIA_CBJ NUMBER(3,0), 
	VIA_CIN NUMBER(6,0) NOT NULL, 
	VIA_NOM VARCHAR2(50) NOT NULL, 
	VIA_NOC VARCHAR2(25), 
	VIA_NOA VARCHAR2(50), 
	VIA_CAT VARCHAR2(1), 
	VIA_FAP DATE, 
	VIA_EXP VARCHAR2(10), 
	VIA_LNG NUMBER(5,0), 
	VIA_AMX NUMBER(2,2), 
	VIA_AMI NUMBER(2,2), 
	VIA_TRF VARCHAR2(1), 
	VIA_STR VARCHAR2(1), 
	VIA_IDO VARCHAR2(14), 
	VIA_SIT VARCHAR2(1) NOT NULL, 
	VIA_FAL DATE NOT NULL, 
	VIA_UAL NUMBER(4,0) NOT NULL, 
	VIA_FBJ DATE, 
	VIA_UBJ NUMBER(4,0), 
	VIA_FIV DATE NOT NULL, 
	CONSTRAINT PK_T_VIA PRIMARY KEY (VIA_PAI, VIA_PRV, VIA_MUN, VIA_COD), 
	CONSTRAINT FK_T_VIA_REL_TT_32_T_CBJ FOREIGN KEY (VIA_CBJ) REFERENCES T_CBJ (CBJ_COD)
);

COMMENT ON TABLE T_VIA IS 'VIALES';
COMMENT ON COLUMN T_VIA.VIA_PAI IS 'Pais';
COMMENT ON COLUMN T_VIA.VIA_PRV IS 'Provincia';
COMMENT ON COLUMN T_VIA.VIA_MUN IS 'Municipio';
COMMENT ON COLUMN T_VIA.VIA_COD IS 'Codigo de  Vial';
COMMENT ON COLUMN T_VIA.VIA_TVI IS 'Tipo Via';
COMMENT ON COLUMN T_VIA.VIA_CBJ IS 'Codigo de Causa de Baja';
COMMENT ON COLUMN T_VIA.VIA_CIN IS 'Codigo INE';
COMMENT ON COLUMN T_VIA.VIA_NOM IS 'Nombre';
COMMENT ON COLUMN T_VIA.VIA_NOC IS 'Nombre Corto';
COMMENT ON COLUMN T_VIA.VIA_NOA IS 'Nombre Antiguo';
COMMENT ON COLUMN T_VIA.VIA_CAT IS 'Catalogación del vial (O -->Oficial, P -->Provisional, C -->Coyuntural, L -->Paraje o lugar rústico)';
COMMENT ON COLUMN T_VIA.VIA_FAP IS 'Fecha aprobación';
COMMENT ON COLUMN T_VIA.VIA_EXP IS 'Expte. aprobación';
COMMENT ON COLUMN T_VIA.VIA_LNG IS 'Longitud en metros';
COMMENT ON COLUMN T_VIA.VIA_AMX IS 'Anchura máxima';
COMMENT ON COLUMN T_VIA.VIA_AMI IS 'Anchura mínima';
COMMENT ON COLUMN T_VIA.VIA_TRF IS 'Tipo tráfico';
COMMENT ON COLUMN T_VIA.VIA_STR IS 'Sentido tráfico (A: Único ascendente,  B: Único descendente, D: Doble, O: Mixto,  X: Rotativo en sentido de las agujas del Reloj, Y: Rotativo en sentido Inverso de las agujas del Reloj, Z: Desconocido)';
COMMENT ON COLUMN T_VIA.VIA_IDO IS 'Identificación del objeto gráfico';
COMMENT ON COLUMN T_VIA.VIA_SIT IS 'Situación';
COMMENT ON COLUMN T_VIA.VIA_FAL IS 'Fecha alta';
COMMENT ON COLUMN T_VIA.VIA_UAL IS 'Usuario alta';
COMMENT ON COLUMN T_VIA.VIA_FBJ IS 'Fecha baja';
COMMENT ON COLUMN T_VIA.VIA_UBJ IS 'Usuario baja';
COMMENT ON COLUMN T_VIA.VIA_FIV IS 'Fecha inicio vigencia';

CREATE INDEX REL_TT_32_FK ON T_VIA (VIA_CBJ);
CREATE INDEX REL_TT_63_FK ON T_VIA (VIA_PAI, VIA_PRV, VIA_MUN);
CREATE INDEX REL_TT_68_FK ON T_VIA (VIA_TVI);
  
  
CREATE TABLE T_TRM (	
	TRM_TNU VARCHAR2(1) NOT NULL, 
	TRM_PAI NUMBER(3,0) NOT NULL, 
	TRM_PRV NUMBER(2,0) NOT NULL, 
	TRM_MUN NUMBER(3,0) NOT NULL, 
	TRM_VIA NUMBER(12,0) NOT NULL, 
	TRM_COD VARCHAR2(5) NOT NULL, 
	TRM_SPA NUMBER(3,0), 
	TRM_SPR NUMBER(2,0), 
	TRM_SMU NUMBER(3,0), 
	TRM_SDI NUMBER(2,0), 
	TRM_MZI VARCHAR2(3), 
	TRM_SSPA NUMBER(3,0), 
	TRM_SSPR NUMBER(2,0), 
	TRM_SSMU NUMBER(3,0), 
	TRM_SSDI NUMBER(2,0), 
	TRM_SSSE NUMBER(3,0), 
	TRM_SSC VARCHAR2(2), 
	TRM_CPO VARCHAR2(5) NOT NULL, 
	TRM_PNU NUMBER(4,0), 
	TRM_PLE VARCHAR2(1), 
	TRM_ULN NUMBER(4,0), 
	TRM_ULL VARCHAR2(1), 
	TRM_MPA NUMBER(3,0), 
	TRM_MPR NUMBER(2,0), 
	TRM_MMU NUMBER(3,0), 
	TRM_MDI NUMBER(2,0), 
	TRM_MSE NUMBER(3,0), 
	TRM_MLE VARCHAR2(1), 
	TRM_SSE NUMBER(3,0), 
	TRM_SLE VARCHAR2(1), 
	TRM_SSLE VARCHAR2(1), 
	TRM_NUC NUMBER(5,0), 
	TRM_NPA NUMBER(3,0), 
	TRM_NPR NUMBER(2,0), 
	TRM_NMU NUMBER(3,0), 
	TRM_NES NUMBER(5,0), 
	TRM_SIT CHAR(1) DEFAULT 'A' NOT NULL, 
	CONSTRAINT PK_T_TRM PRIMARY KEY (TRM_TNU, TRM_PAI, TRM_PRV, TRM_MUN, TRM_VIA, TRM_COD), 
	CONSTRAINT FK_T_TRM_REL_TT_67_T_MZI FOREIGN KEY (TRM_MPA, TRM_MPR, TRM_MMU, TRM_MDI, TRM_MSE, TRM_MLE, TRM_MZI)
	REFERENCES T_MZI (MZI_PAI, MZI_PRV, MZI_MUN, MZI_DIS, MZI_SEC, MZI_LET, MZI_COD), 
	CONSTRAINT FK_T_TRM_REL_TT_62_T_NUC FOREIGN KEY (TRM_NPA, TRM_NPR, TRM_NMU, TRM_NES, TRM_NUC)
	REFERENCES T_NUC (NUC_PAI, NUC_PRV, NUC_MUN, NUC_ESI, NUC_COD), 
	CONSTRAINT FK_T_TRM_REL_TT_65_T_SEC FOREIGN KEY (TRM_SPA, TRM_SPR, TRM_SMU, TRM_SDI, TRM_SSE, TRM_SLE)
	REFERENCES T_SEC (SEC_PAI, SEC_PRV, SEC_MUN, SEC_DIS, SEC_COD, SEC_LET), 
	CONSTRAINT FK_T_TRM_REL_TT_66_T_SSC FOREIGN KEY (TRM_SSPA, TRM_SSPR, TRM_SSMU, TRM_SSDI, TRM_SSSE, TRM_SSLE, TRM_SSC)
	REFERENCES T_SSC (SSC_PAI, SSC_PRV, SSC_MUN, SSC_DIS, SSC_SEC, SSC_LET, SSC_COD), 
	CONSTRAINT FK_T_TRM_REL_TT_60_T_TNU FOREIGN KEY (TRM_TNU)
	REFERENCES T_TNU (TNU_COD), 
	CONSTRAINT FK_T_TRM_REL_TT_69_T_VIA FOREIGN KEY (TRM_PAI, TRM_PRV, TRM_MUN, TRM_VIA)
	REFERENCES T_VIA (VIA_PAI, VIA_PRV, VIA_MUN, VIA_COD)
);
 
COMMENT ON TABLE T_TRM IS 'TRAMERO INE';
COMMENT ON COLUMN T_TRM.TRM_SMU IS 'Municipio Seccion';
COMMENT ON COLUMN T_TRM.TRM_SDI IS 'Distrito Seccion';
COMMENT ON COLUMN T_TRM.TRM_MZI IS 'Manzana INE';
COMMENT ON COLUMN T_TRM.TRM_SSPA IS 'Pais SubSeccion';
COMMENT ON COLUMN T_TRM.TRM_SSPR IS 'Provincia SubSeccion';
COMMENT ON COLUMN T_TRM.TRM_SSMU IS 'Municipio SubSeccion';
COMMENT ON COLUMN T_TRM.TRM_SSDI IS 'Distrito SubSeccion';
COMMENT ON COLUMN T_TRM.TRM_SSSE IS 'Seccion';
COMMENT ON COLUMN T_TRM.TRM_SSC IS 'Subseccion';
COMMENT ON COLUMN T_TRM.TRM_CPO IS 'Codigo Postal';
COMMENT ON COLUMN T_TRM.TRM_PNU IS 'Primer Numero';
COMMENT ON COLUMN T_TRM.TRM_PLE IS 'Primera Letra';
COMMENT ON COLUMN T_TRM.TRM_ULN IS 'Ultimo Numero';
COMMENT ON COLUMN T_TRM.TRM_ULL IS 'Ultima Letra';
COMMENT ON COLUMN T_TRM.TRM_SIT IS 'Situación Tramo (A-Alta/B-Baja)';
COMMENT ON COLUMN T_TRM.TRM_TNU IS 'Tipo de Numeracion del tramo';
COMMENT ON COLUMN T_TRM.TRM_PAI IS 'Pais';
COMMENT ON COLUMN T_TRM.TRM_PRV IS 'Provincia';
COMMENT ON COLUMN T_TRM.TRM_MUN IS 'Municipio';
COMMENT ON COLUMN T_TRM.TRM_VIA IS 'Via';
COMMENT ON COLUMN T_TRM.TRM_COD IS 'Codigo de Tramero';
COMMENT ON COLUMN T_TRM.TRM_SPA IS 'Pais Seccion';
COMMENT ON COLUMN T_TRM.TRM_SPR IS 'Provincia Seccion';

CREATE INDEX REL_TT_62_FK ON T_TRM (TRM_NPA, TRM_NPR, TRM_NMU, TRM_NES, TRM_NUC) ;
CREATE INDEX REL_TT_65_FK ON T_TRM (TRM_SPA, TRM_SPR, TRM_SMU, TRM_SDI, TRM_SSE, TRM_SLE);
CREATE INDEX REL_TT_66_FK ON T_TRM (TRM_SSPA, TRM_SSPR, TRM_SSMU, TRM_SSDI, TRM_SSSE, TRM_SSLE, TRM_SSC);
CREATE INDEX REL_TT_67_FK ON T_TRM (TRM_MPA, TRM_MPR, TRM_MMU, TRM_MDI, TRM_MSE, TRM_MLE, TRM_MZI);
CREATE INDEX REL_TT_69_FK ON T_TRM (TRM_PAI, TRM_PRV, TRM_MUN, TRM_VIA);
CREATE INDEX REL_TT_72_FK ON T_TRM (TRM_CPO);
CREATE INDEX REL_TT_60_FK ON T_TRM (TRM_TNU);
 

CREATE TABLE T_PRM (	
	PRM_COD NUMBER(3,0) NOT NULL, 
	PRM_PAI NUMBER(3,0), 
	PRM_PPA NUMBER(3,0), 
	PRM_PRV NUMBER(2,0), 
	PRM_MPA NUMBER(3,0), 
	PRM_MPR NUMBER(2,0), 
	PRM_MUN NUMBER(4,0), 
	PRM_TOC NUMBER(5,0), 
	PRM_TID NUMBER(2,0), 
	PRM_DOP NUMBER(5,0) NOT NULL, 
	PRM_IMT NUMBER(1,0) NOT NULL, 
	PRM_LUG VARCHAR2(2), 
	PRM_USU NUMBER(4,0) NOT NULL, 
	PRM_FEC DATE NOT NULL, 
	CONSTRAINT PK_T_PRM PRIMARY KEY (PRM_COD), 
	CONSTRAINT FK_T_PRM_REL_TT_17_T_TID FOREIGN KEY (PRM_TID)
	REFERENCES T_TID (TID_COD), 
	CONSTRAINT FK_T_PRM_REL_TT_16_T_TOC FOREIGN KEY (PRM_TOC)
	REFERENCES T_TOC (TOC_COD), 
	CONSTRAINT FK_T_PRM_REL_TT_19_T_TOC FOREIGN KEY (PRM_DOP)
	REFERENCES T_TOC (TOC_COD)
);

COMMENT ON TABLE T_PRM IS 'PARAMETROS DEL MODULO DE TERCEROS (valores por defecto)';
COMMENT ON COLUMN T_PRM.PRM_COD IS 'Codigo de Parametrizacion (0 => Parametrizacion activa)';
COMMENT ON COLUMN T_PRM.PRM_PAI IS 'Pais';
COMMENT ON COLUMN T_PRM.PRM_PPA IS 'Pais Provincia';
COMMENT ON COLUMN T_PRM.PRM_PRV IS 'Provincia';
COMMENT ON COLUMN T_PRM.PRM_MPA IS 'Pais Municipio';
COMMENT ON COLUMN T_PRM.PRM_MPR IS 'Provincia Municipio';
COMMENT ON COLUMN T_PRM.PRM_MUN IS 'Municipio';
COMMENT ON COLUMN T_PRM.PRM_TOC IS 'Tipo de Ocupacion para las altas';
COMMENT ON COLUMN T_PRM.PRM_TID IS 'Tipo de identificador';
COMMENT ON COLUMN T_PRM.PRM_DOP IS 'Código tipo ocupación que representa el domicilio principal';
COMMENT ON COLUMN T_PRM.PRM_IMT IS 'Utiliza identificadores múltiple';
COMMENT ON COLUMN T_PRM.PRM_LUG IS 'Tratamiento del atributo Lugar';
COMMENT ON COLUMN T_PRM.PRM_USU IS 'Usuario que genera los parámetros';
COMMENT ON COLUMN T_PRM.PRM_FEC IS 'Fecha de entrada en vigor de los parámetros';

CREATE INDEX REL_TT_13_FK ON T_PRM (PRM_PAI);
CREATE INDEX REL_TT_14_FK ON T_PRM (PRM_PPA, PRM_PRV);
CREATE INDEX REL_TT_15_FK ON T_PRM (PRM_MPA, PRM_MPR, PRM_MUN);
CREATE INDEX REL_TT_16_FK ON T_PRM (PRM_TOC);
CREATE INDEX REL_TT_17_FK ON T_PRM (PRM_TID);
CREATE INDEX REL_TT_19_FK ON T_PRM (PRM_DOP);


CREATE TABLE T_PAR (	
	PAR_HOJ VARCHAR2(7) NOT NULL, 
	PAR_MNZ VARCHAR2(5) NOT NULL, 
	PAR_PAR VARCHAR2(5) NOT NULL, 
	PAR_CLS VARCHAR2(3), 
	PAR_CSU VARCHAR2(2), 
	PAR_CBJ NUMBER(3,0), 
	PAR_NPA NUMBER(3,0), 
	PAR_NPR NUMBER(2,0), 
	PAR_NMU NUMBER(3,0), 
	PAR_NES NUMBER(5,0), 
	PAR_NUC NUMBER(5,0), 
	PAR_SPA NUMBER(3,0), 
	PAR_SPR NUMBER(2,0), 
	PAR_SMU NUMBER(3,0), 
	PAR_SDI NUMBER(2,0), 
	PAR_SEC NUMBER(3,0), 
	PAR_SSPA NUMBER(3,0), 
	PAR_SSPR NUMBER(2,0), 
	PAR_SSMU NUMBER(3,0), 
	PAR_SSDI NUMBER(2,0), 
	PAR_SSSE NUMBER(3,0), 
	PAR_SSC VARCHAR2(2), 
	PAR_MZI VARCHAR2(3), 
	PAR_PHOJ VARCHAR2(7), 
	PAR_PMNZ VARCHAR2(5), 
	PAR_PPAR VARCHAR2(5), 
	PAR_CPA NUMBER(3,0), 
	PAR_CPR NUMBER(2,0), 
	PAR_CMU NUMBER(3,0), 
	PAR_CPO VARCHAR2(5), 
	PAR_CEX NUMBER(6,2), 
	PAR_CEY NUMBER(7,2), 
	PAR_CEZ NUMBER(4,2), 
	PAR_SUP NUMBER(9,2), 
	PAR_VCS NUMBER(14,2), 
	PAR_VCC NUMBER(14,2), 
	PAR_TPA VARCHAR2(1), 
	PAR_TFI VARCHAR2(1), 
	PAR_EAG NUMBER(3,0), 
	PAR_SUE NUMBER(9,2), 
	PAR_SUC NUMBER(9,2), 
	PAR_SUR NUMBER(9,2), 
	PAR_IDO VARCHAR2(14), 
	PAR_REF VARCHAR2(60), 
	PAR_SIT VARCHAR2(1) NOT NULL, 
	PAR_FAL DATE NOT NULL, 
	PAR_UAL NUMBER(4,0) NOT NULL, 
	PAR_FBJ DATE, 
	PAR_UBJ NUMBER(4,0), 
	PAR_LET VARCHAR2(1), 
	PAR_SSLE VARCHAR2(1), 
	CONSTRAINT PK_T_PAR PRIMARY KEY (PAR_HOJ, PAR_MNZ, PAR_PAR), 
	CONSTRAINT FK_T_PAR_REL_T_57_T_MZI FOREIGN KEY (PAR_SPA, PAR_SPR, PAR_SMU, PAR_SDI, PAR_SEC, PAR_LET, PAR_MZI)
	REFERENCES T_MZI (MZI_PAI, MZI_PRV, MZI_MUN, MZI_DIS, MZI_SEC, MZI_LET, MZI_COD), 
	CONSTRAINT FK_T_PAR_REL_T_58_T_PAR FOREIGN KEY (PAR_PHOJ, PAR_PMNZ, PAR_PPAR) 
	REFERENCES T_PAR (PAR_HOJ, PAR_MNZ, PAR_PAR), 
	CONSTRAINT FK_T_PAR_REL_T_53_T_SEC FOREIGN KEY (PAR_SPA, PAR_SPR, PAR_SMU, PAR_SDI, PAR_SEC, PAR_LET)
	REFERENCES T_SEC (SEC_PAI, SEC_PRV, SEC_MUN, SEC_DIS, SEC_COD, SEC_LET), 
	CONSTRAINT FK_T_PAR_REL_T_54_T_SSC FOREIGN KEY (PAR_SSPA, PAR_SSPR, PAR_SSMU, PAR_SSDI, PAR_SSSE, PAR_SSLE, PAR_SSC)
	REFERENCES T_SSC (SSC_PAI, SSC_PRV, SSC_MUN, SSC_DIS, SSC_SEC, SSC_LET, SSC_COD), 
	CONSTRAINT FK_T_PAR_REL_T_51_T_CBJ FOREIGN KEY (PAR_CBJ)
	REFERENCES T_CBJ (CBJ_COD), 
	CONSTRAINT FK_T_PAR_REL_T_38_T_CLS FOREIGN KEY (PAR_CLS)
	REFERENCES T_CLS (CLS_COD), 
	CONSTRAINT FK_T_PAR_REL_T_59_T_CPO FOREIGN KEY (PAR_CPA, PAR_CPR, PAR_CMU, PAR_CPO)
	REFERENCES T_CPO (CPO_PAI, CPO_PRV, CPO_MUN, CPO_COD), 
	CONSTRAINT FK_T_PAR_REL_T_37_T_CSU FOREIGN KEY (PAR_CSU)
	REFERENCES T_CSU (CSU_COD)
);
 
COMMENT ON TABLE T_PAR IS 'PARCELAS';
COMMENT ON COLUMN T_PAR.PAR_HOJ IS 'Hoja';
COMMENT ON COLUMN T_PAR.PAR_MNZ IS 'Manzana';
COMMENT ON COLUMN T_PAR.PAR_PAR IS 'Codigo de Parcela';
COMMENT ON COLUMN T_PAR.PAR_CLS IS 'Clasificacion de Suelo';
COMMENT ON COLUMN T_PAR.PAR_CSU IS 'Calificacion de la Parcela';
COMMENT ON COLUMN T_PAR.PAR_CBJ IS 'Causa de Baja de la Parcela';
COMMENT ON COLUMN T_PAR.PAR_NPA IS 'Pais del Nucleo';
COMMENT ON COLUMN T_PAR.PAR_NPR IS 'Provincia del Nucleo';
COMMENT ON COLUMN T_PAR.PAR_NMU IS 'Municipio del Nucleo';
COMMENT ON COLUMN T_PAR.PAR_NES IS 'Entidad Singular del Nucleo';
COMMENT ON COLUMN T_PAR.PAR_NUC IS 'Nucleo';
COMMENT ON COLUMN T_PAR.PAR_SPA IS 'Pais de la Seccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SPR IS 'Provincia de la Seccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SMU IS 'Municipio de la Seccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SDI IS 'Distrito de la Seccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SEC IS 'Seccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SSPA IS 'Pais de la Subseccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SSPR IS 'Provincia de la Subseccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SSMU IS 'Municipio de la Subseccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SSDI IS 'Distrito de la Subseccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SSSE IS 'Seccion Censal de la Subseccion Censal';
COMMENT ON COLUMN T_PAR.PAR_SSC IS 'Subseccion Censal';
COMMENT ON COLUMN T_PAR.PAR_MZI IS 'Manzana INE';
COMMENT ON COLUMN T_PAR.PAR_PHOJ IS 'Hoja (redireccionamiento hacia una nueva parcela)';
COMMENT ON COLUMN T_PAR.PAR_PMNZ IS 'Manzana (redireccionamiento hacia una nueva parcela)';
COMMENT ON COLUMN T_PAR.PAR_PPAR IS 'Parcela (redireccionamiento hacia una nueva parcela)';
COMMENT ON COLUMN T_PAR.PAR_CPA IS 'Pais (Codigo Postal)';
COMMENT ON COLUMN T_PAR.PAR_CPR IS 'Provincia (Codigo Postal)';
COMMENT ON COLUMN T_PAR.PAR_CMU IS 'Municipio (Codigo Postal)';
COMMENT ON COLUMN T_PAR.PAR_CPO IS 'Codigo Postal';
COMMENT ON COLUMN T_PAR.PAR_CEX IS 'Centro X';
COMMENT ON COLUMN T_PAR.PAR_CEY IS 'Centro Y';
COMMENT ON COLUMN T_PAR.PAR_CEZ IS 'Centro Z';
COMMENT ON COLUMN T_PAR.PAR_SUP IS 'Superficie del Solar';
COMMENT ON COLUMN T_PAR.PAR_VCS IS 'Valor Catastral  del Suelo';
COMMENT ON COLUMN T_PAR.PAR_VCC IS 'Valor Catastral Construido';
COMMENT ON COLUMN T_PAR.PAR_TPA IS 'Tipo de Parcela';
COMMENT ON COLUMN T_PAR.PAR_TFI IS 'Tipo de Finca';
COMMENT ON COLUMN T_PAR.PAR_EAG IS 'Entidad Agregada';
COMMENT ON COLUMN T_PAR.PAR_SUE IS 'Superficie Escriturada';
COMMENT ON COLUMN T_PAR.PAR_SUC IS 'Superficie Construida';
COMMENT ON COLUMN T_PAR.PAR_SUR IS 'Superficie Restante';
COMMENT ON COLUMN T_PAR.PAR_IDO IS 'Identificador del Objeto Grafico';
COMMENT ON COLUMN T_PAR.PAR_REF IS 'Referencia';
COMMENT ON COLUMN T_PAR.PAR_SIT IS 'Situacion (A:ALTA, B:BAJA)';
COMMENT ON COLUMN T_PAR.PAR_FAL IS 'Fecha de Alta';
COMMENT ON COLUMN T_PAR.PAR_UAL IS 'Usuario de alta';
COMMENT ON COLUMN T_PAR.PAR_FBJ IS 'Fecha de Baja';
COMMENT ON COLUMN T_PAR.PAR_UBJ IS 'Usuario de baja';


CREATE TABLE T_NDC (	
	NDC_TER NUMBER(12,0) NOT NULL, 
	NDC_NID NUMBER(2,0) NOT NULL, 
	NDC_DOC VARCHAR2(25) NOT NULL, 
	NDC_FEX DATE, 
	NDC_FCD DATE, 
	NDC_SIT VARCHAR2(1) NOT NULL, 
	NDC_TID NUMBER(2,0) NOT NULL, 
	CONSTRAINT PK_T_NDC PRIMARY KEY (NDC_TER, NDC_NID), 
	CONSTRAINT FK_T_NDC_REL_TT_10_T_TER FOREIGN KEY (NDC_TER)
	REFERENCES  T_TER (TER_COD), 
	CONSTRAINT FK_T_NDC_REL_TT_18_T_TID FOREIGN KEY (NDC_TID)
	REFERENCES  T_TID (TID_COD)
);
 
COMMENT ON COLUMN T_NDC.NDC_TER IS 'Tercero';
COMMENT ON COLUMN T_NDC.NDC_NID IS 'Numero de Identificador';
COMMENT ON COLUMN T_NDC.NDC_DOC IS 'Documento';
COMMENT ON COLUMN T_NDC.NDC_FEX IS 'Fecha de Expedicion';
COMMENT ON COLUMN T_NDC.NDC_FCD IS 'Fecha de Caducidad';
COMMENT ON COLUMN T_NDC.NDC_SIT IS 'Situacion';
COMMENT ON TABLE T_NDC  IS 'NUMEROS DE DOCUMENTOS';


CREATE TABLE T_HVI (	
	HVI_PAI NUMBER(3,0) NOT NULL, 
	HVI_PRV NUMBER(2,0) NOT NULL, 
	HVI_MUN NUMBER(3,0) NOT NULL, 
	HVI_VIA NUMBER(12,0) NOT NULL, 
	HVI_VER NUMBER(3,0) NOT NULL, 
	HVI_TVI VARCHAR2(5) NOT NULL, 
	HVI_NHPA NUMBER(3,0), 
	HVI_NHPR NUMBER(2,0), 
	HVI_NHMU NUMBER(3,0), 
	HVI_NHES NUMBER(5,0), 
	HVI_HNUC NUMBER(5,0), 
	HVI_NAPA NUMBER(3,0), 
	HVI_NAPR NUMBER(2,0), 
	HVI_NAMU NUMBER(3,0), 
	HVI_NAES NUMBER(5,0), 
	HVI_NOM VARCHAR2(50) NOT NULL, 
	HVI_NOC VARCHAR2(25), 
	HVI_FIV CHAR(10) NOT NULL, 
	HVI_FFV CHAR(10) NOT NULL, 
	HVI_UOP CHAR(10) NOT NULL, 
	HVI_HVER NUMBER(3,0), 
	HVI_NANU NUMBER(5,0), 
	CONSTRAINT PK_T_HVI PRIMARY KEY (HVI_PAI, HVI_PRV, HVI_MUN, HVI_VIA, HVI_VER), 
	CONSTRAINT FK_T_HVI_REL_TT_95_T_NUC FOREIGN KEY (HVI_NAPA, HVI_NAPR, HVI_NAMU, HVI_NAES, HVI_NANU)
	REFERENCES T_NUC (NUC_PAI, NUC_PRV, NUC_MUN, NUC_ESI, NUC_COD)
);

COMMENT ON TABLE T_HVI IS 'HISTORICO DE VIALES';
COMMENT ON COLUMN T_HVI.HVI_PAI IS 'Pais';
COMMENT ON COLUMN T_HVI.HVI_PRV IS 'Provincia';
COMMENT ON COLUMN T_HVI.HVI_MUN IS 'Municipio';
COMMENT ON COLUMN T_HVI.HVI_VIA IS 'Identificador de Vial';
COMMENT ON COLUMN T_HVI.HVI_VER IS 'Numero de Version';
COMMENT ON COLUMN T_HVI.HVI_TVI IS 'Codigo de Vial';
COMMENT ON COLUMN T_HVI.HVI_NHPA IS 'Pais Nucleo (Historico)';
COMMENT ON COLUMN T_HVI.HVI_NHPR IS 'Provincia Nucleo (Historico)';
COMMENT ON COLUMN T_HVI.HVI_NHMU IS 'Municipio Nucleo (Historico)';
COMMENT ON COLUMN T_HVI.HVI_NHES IS 'Entidad Singular Nucleo (Historico)';
COMMENT ON COLUMN T_HVI.HVI_HNUC IS 'Codigo de Nucleo (Historico)';
COMMENT ON COLUMN T_HVI.HVI_NAPA IS 'Pais del Nucleo Actual';
COMMENT ON COLUMN T_HVI.HVI_NAPR IS 'Provincia del Nucleo Actual';
COMMENT ON COLUMN T_HVI.HVI_NAMU IS 'Municipio del Nucleo Actual';
COMMENT ON COLUMN T_HVI.HVI_NAES IS 'Entidad Singular del Nucleo Actual';
COMMENT ON COLUMN T_HVI.HVI_NOM IS 'Nombre';
COMMENT ON COLUMN T_HVI.HVI_NOC IS 'Nombre Corto';
COMMENT ON COLUMN T_HVI.HVI_FIV IS 'Fecha de Inicio de Vigencia';
COMMENT ON COLUMN T_HVI.HVI_FFV IS 'Fecha Fin de Vigencia';
COMMENT ON COLUMN T_HVI.HVI_UOP IS 'Usuario Operacion';


CREATE TABLE T_HNU (	
	HNU_PAI NUMBER(3,0) NOT NULL, 
	HNU_PRV NUMBER(2,0) NOT NULL, 
	HNU_MUN NUMBER(3,0) NOT NULL, 
	HNU_ESI NUMBER(5,0) NOT NULL, 
	HNU_NUC NUMBER(5,0) NOT NULL, 
	HNU_VER NUMBER(3,0) NOT NULL, 
	HNU_CIN NUMBER(2,0) NOT NULL, 
	HNU_NOM VARCHAR2(25) NOT NULL, 
	HNU_FIV DATE NOT NULL, 
	HNU_FFV DATE NOT NULL, 
	HNU_UOP NUMBER(4,0) NOT NULL, 
	CONSTRAINT PK_T_HNU PRIMARY KEY (HNU_PAI, HNU_PRV, HNU_MUN, HNU_ESI, HNU_NUC, HNU_VER), 
	CONSTRAINT FK_T_HNU_REL_TT_91_T_NUC FOREIGN KEY (HNU_PAI, HNU_PRV, HNU_MUN, HNU_ESI, HNU_NUC)
	REFERENCES T_NUC (NUC_PAI, NUC_PRV, NUC_MUN, NUC_ESI, NUC_COD)
);

COMMENT ON COLUMN T_HNU.HNU_PAI IS 'Pais';
COMMENT ON COLUMN T_HNU.HNU_PRV IS 'Provincia';
COMMENT ON COLUMN T_HNU.HNU_MUN IS 'Municipio';
COMMENT ON COLUMN T_HNU.HNU_ESI IS 'Entidad Singular';
COMMENT ON COLUMN T_HNU.HNU_NUC IS 'Nucleo';
COMMENT ON COLUMN T_HNU.HNU_VER IS 'Numero de Version';
COMMENT ON COLUMN T_HNU.HNU_CIN IS 'Codigo INE';
COMMENT ON COLUMN T_HNU.HNU_NOM IS 'Nombre Oficial';
COMMENT ON COLUMN T_HNU.HNU_FIV IS 'Fecha Inicio de Vigencia';
COMMENT ON COLUMN T_HNU.HNU_FFV IS 'Fecha Fin Vigencia';
COMMENT ON COLUMN T_HNU.HNU_UOP IS 'Usuario de la Operacion';
COMMENT ON TABLE T_HNU IS 'HISTORICO DE NUCLEOS';
 

CREATE TABLE T_GRT (	
	GRT_GRU NUMBER(2,0) NOT NULL, 
	GRT_SGT NUMBER(2,0) NOT NULL, 
	GRT_TER NUMBER(12,0) NOT NULL, 
	GRT_FEC DATE NOT NULL, 
	CONSTRAINT PK_T_GRT PRIMARY KEY (GRT_GRU, GRT_SGT, GRT_TER), 
	CONSTRAINT FK_T_GRT_REL_TT_05_T_SGT FOREIGN KEY (GRT_GRU, GRT_SGT)
	REFERENCES T_SGT (SGT_GRU, SGT_COD), 
	CONSTRAINT FK_T_GRT_REL_TT_04_T_TER FOREIGN KEY (GRT_TER)
	REFERENCES T_TER (TER_COD)
);

COMMENT ON COLUMN T_GRT.GRT_GRU IS 'Codigo de Grupo';
COMMENT ON COLUMN T_GRT.GRT_SGT IS 'Codigo de Subgrupo';
COMMENT ON COLUMN T_GRT.GRT_TER IS 'Codigo de Tercero';
COMMENT ON COLUMN T_GRT.GRT_FEC IS 'Fecha de la asociación';
COMMENT ON TABLE T_GRT  IS 'Relación GRUPOS/SUBGRUPOS y Terceros';
 

CREATE TABLE T_DSU (	
	DSU_COD NUMBER(12,0) NOT NULL, 
	DSU_PAI NUMBER(3,0) NOT NULL, 
	DSU_PRV NUMBER(2,0) NOT NULL, 
	DSU_MUN NUMBER(3,0) NOT NULL, 
	DSU_VIA NUMBER(12,0) NOT NULL, 
	DSU_TNU VARCHAR2(1), 
	DSU_PAC NUMBER(3,0), 
	DSU_PRC NUMBER(2,0), 
	DSU_MUC NUMBER(3,0), 
	DSU_CPO VARCHAR2(8), 
	DSU_PAE NUMBER(3,0), 
	DSU_PRE NUMBER(2,0), 
	DSU_MUE NUMBER(3,0), 
	DSU_ESI NUMBER(5,0), 
	DSU_PAM NUMBER(3,0), 
	DSU_PRM NUMBER(2,0), 
	DSU_MUM NUMBER(3,0), 
	DSU_DIS NUMBER(2,0), 
	DSU_SEC NUMBER(3,0), 
	DSU_LET VARCHAR2(1), 
	DSU_MZI VARCHAR2(3), 
	DSU_HOJ VARCHAR2(7), 
	DSU_MNZ VARCHAR2(5), 
	DSU_PAR VARCHAR2(5), 
	DSU_NUD NUMBER(4,0), 
	DSU_LED VARCHAR2(1), 
	DSU_NUH NUMBER(4,0), 
	DSU_LEH VARCHAR2(1), 
	DSU_BLQ VARCHAR2(3), 
	DSU_POR VARCHAR2(2), 
	DSU_LUG VARCHAR2(50), 
	DSU_ORX NUMBER(6,2), 
	DSU_ORY NUMBER(6,2), 
	DSU_FIX NUMBER(6,2), 
	DSU_FIY NUMBER(6,2), 
	DSU_VER VARCHAR2(1), 
	DSU_KMT NUMBER(3,0), 
	DSU_HMT NUMBER(1,0), 
	DSU_IDO VARCHAR2(14), 
	DSU_SIT VARCHAR2(1) NOT NULL, 
	DSU_FAL DATE NOT NULL, 
	DSU_UAL NUMBER(4,0) NOT NULL, 
	DSU_FBJ DATE, 
	DSU_UBJ NUMBER(4,0), 
	DSU_FIV DATE NOT NULL, 
	DSU_TTNU VARCHAR2(1), 
	DSU_TPAI NUMBER(3,0), 
	DSU_TPRV NUMBER(2,0), 
	DSU_TMUN NUMBER(3,0), 
	DSU_TVIA NUMBER(12,0), 
	DSU_TCOD VARCHAR2(5), 
	CONSTRAINT PK_T_DSU PRIMARY KEY (DSU_COD), 
	CONSTRAINT FK_T_DSU_REL_TT_81_T_ESI FOREIGN KEY (DSU_PAE, DSU_PRE, DSU_MUE, DSU_ESI)
	REFERENCES T_ESI (ESI_PAI, ESI_PRV, ESI_MUN, ESI_COD), 
	CONSTRAINT FK_T_DSU_REL_TT_73_T_MZI FOREIGN KEY (DSU_PAM, DSU_PRM, DSU_MUM, DSU_DIS, DSU_SEC, DSU_LET, DSU_MZI)
	REFERENCES T_MZI (MZI_PAI, MZI_PRV, MZI_MUN, MZI_DIS, MZI_SEC, MZI_LET, MZI_COD), 
	CONSTRAINT FK_T_DSU_REL_TT_27_T_TNU FOREIGN KEY (DSU_TNU)
	REFERENCES T_TNU (TNU_COD), 
	CONSTRAINT FK_T_DSU_REL_TT_103_T_TRM FOREIGN KEY (DSU_TTNU, DSU_TPAI, DSU_TPRV, DSU_TMUN, DSU_TVIA, DSU_TCOD)
	REFERENCES T_TRM (TRM_TNU, TRM_PAI, TRM_PRV, TRM_MUN, TRM_VIA, TRM_COD), 
	CONSTRAINT FK_T_DSU_REL_TT_71_T_CPO FOREIGN KEY (DSU_PAC, DSU_PRC, DSU_MUC, DSU_CPO)
	REFERENCES T_CPO (CPO_PAI, CPO_PRV, CPO_MUN, CPO_COD)
);
 
COMMENT ON TABLE T_DSU IS 'DIRECCIONES SUELO';
COMMENT ON COLUMN T_DSU.DSU_COD IS 'Código dirección suelo';
COMMENT ON COLUMN T_DSU.DSU_PAI IS 'Código de país';
COMMENT ON COLUMN T_DSU.DSU_PRV IS 'Código de provincia';
COMMENT ON COLUMN T_DSU.DSU_MUN IS 'Código del municipio';
COMMENT ON COLUMN T_DSU.DSU_VIA IS 'Código de vía';
COMMENT ON COLUMN T_DSU.DSU_TNU IS 'Tipo de numeración';
COMMENT ON COLUMN T_DSU.DSU_PAC IS 'Código de país - codigo postal';
COMMENT ON COLUMN T_DSU.DSU_PRC IS 'Código de provincia - codigo postal';
COMMENT ON COLUMN T_DSU.DSU_MUC IS 'Código del municipio - codigo postal';
COMMENT ON COLUMN T_DSU.DSU_CPO IS 'Código postal';
COMMENT ON COLUMN T_DSU.DSU_PAE IS 'Código de país - entidad singular';
COMMENT ON COLUMN T_DSU.DSU_PRE IS 'Código de provincia - entidad singular';
COMMENT ON COLUMN T_DSU.DSU_MUE IS 'Código del municipio . entidad singular';
COMMENT ON COLUMN T_DSU.DSU_ESI IS 'Código de entidad singular';
COMMENT ON COLUMN T_DSU.DSU_PAM IS 'Código de país - manzana';
COMMENT ON COLUMN T_DSU.DSU_PRM IS 'Código de provincia - manzana';
COMMENT ON COLUMN T_DSU.DSU_MUM IS 'Código del municipio - manzana';
COMMENT ON COLUMN T_DSU.DSU_DIS IS 'Código de distrito - entidad singular';
COMMENT ON COLUMN T_DSU.DSU_SEC IS 'Código de sección';
COMMENT ON COLUMN T_DSU.DSU_LET IS 'Letra de sección';
COMMENT ON COLUMN T_DSU.DSU_MZI IS 'Código de manzana';
COMMENT ON COLUMN T_DSU.DSU_HOJ IS 'Hoja';
COMMENT ON COLUMN T_DSU.DSU_MNZ IS 'Manzana';
COMMENT ON COLUMN T_DSU.DSU_PAR IS 'Código de parcela';
COMMENT ON COLUMN T_DSU.DSU_NUD IS 'Número de gobierno desde';
COMMENT ON COLUMN T_DSU.DSU_LED IS 'Letra desde';
COMMENT ON COLUMN T_DSU.DSU_NUH IS 'Número de gobierno hasta';
COMMENT ON COLUMN T_DSU.DSU_LEH IS 'Letra hasta';
COMMENT ON COLUMN T_DSU.DSU_BLQ IS 'Bloque';
COMMENT ON COLUMN T_DSU.DSU_POR IS 'Portal';
COMMENT ON COLUMN T_DSU.DSU_LUG IS 'Lugar';
COMMENT ON COLUMN T_DSU.DSU_ORX IS 'Origen X';
COMMENT ON COLUMN T_DSU.DSU_ORY IS 'Origen Y';
COMMENT ON COLUMN T_DSU.DSU_FIX IS 'Final X';
COMMENT ON COLUMN T_DSU.DSU_FIY IS 'Final Y';
COMMENT ON COLUMN T_DSU.DSU_VER IS 'Estado de verificación';
COMMENT ON COLUMN T_DSU.DSU_KMT IS 'Kilómetro';
COMMENT ON COLUMN T_DSU.DSU_HMT IS 'Hectómetro';
COMMENT ON COLUMN T_DSU.DSU_IDO IS 'Identificación del objeto gráfico';
COMMENT ON COLUMN T_DSU.DSU_SIT IS 'Situación';
COMMENT ON COLUMN T_DSU.DSU_FAL IS 'Fecha alta';
COMMENT ON COLUMN T_DSU.DSU_UAL IS 'Usuario alta';
COMMENT ON COLUMN T_DSU.DSU_FBJ IS 'Fecha baja';
COMMENT ON COLUMN T_DSU.DSU_UBJ IS 'Usuario baja';
COMMENT ON COLUMN T_DSU.DSU_FIV IS 'Fecha inicio vigencia';
COMMENT ON COLUMN T_DSU.DSU_TTNU IS 'Tramo-Tipo Numeracion';
COMMENT ON COLUMN T_DSU.DSU_TPAI IS 'Tramo-Pais';
COMMENT ON COLUMN T_DSU.DSU_TPRV IS 'Tramo-Provincia';
COMMENT ON COLUMN T_DSU.DSU_TMUN IS 'Tramo-Municipio';
COMMENT ON COLUMN T_DSU.DSU_TVIA IS 'Tramo-Via';
COMMENT ON COLUMN T_DSU.DSU_TCOD IS 'Tramo-Codigo';
CREATE INDEX REL_TT_71_FK ON T_DSU (DSU_PAC, DSU_PRC, DSU_MUC, DSU_CPO);
CREATE INDEX REL_TT_73_FK ON T_DSU (DSU_PAM, DSU_PRM, DSU_MUM, DSU_DIS, DSU_SEC, DSU_LET, DSU_MZI);
CREATE INDEX REL_TT_81_FK ON T_DSU (DSU_PAE, DSU_PRE, DSU_MUE, DSU_ESI);
CREATE INDEX REL_TT_103_FK ON T_DSU (DSU_TTNU, DSU_TPAI, DSU_TPRV, DSU_TMUN, DSU_TVIA, DSU_TCOD);
CREATE INDEX REL_TT_27_FK ON T_DSU (DSU_TNU) ;
CREATE INDEX REL_TT_28_FK ON T_DSU (DSU_PAI, DSU_PRV, DSU_MUN, DSU_VIA);
CREATE INDEX REL_TT_29_FK ON T_DSU (DSU_HOJ, DSU_MNZ, DSU_PAR);
 

CREATE TABLE T_DNN (	
	DNN_DOM NUMBER(12,0) NOT NULL, 
	DNN_TVI NUMBER(5,0), 
	DNN_PAI NUMBER(3,0) NOT NULL, 
	DNN_PRV NUMBER(2,0) NOT NULL, 
	DNN_MUN NUMBER(4,0) NOT NULL, 
	DNN_VPA NUMBER(3,0), 
	DNN_VPR NUMBER(2,0), 
	DNN_VMU NUMBER(3,0), 
	DNN_VIA NUMBER(12,0), 
	DNN_SPA NUMBER(3,0), 
	DNN_SPR NUMBER(2,0), 
	DNN_SMU NUMBER(3,0), 
	DNN_ESI NUMBER(5,0), 
	DNN_NUD NUMBER(5,0), 
	DNN_LED VARCHAR2(1), 
	DNN_NUH NUMBER(5,0), 
	DNN_LEH VARCHAR2(1), 
	DNN_BLQ VARCHAR2(3), 
	DNN_POR VARCHAR2(2), 
	DNN_ESC VARCHAR2(2), 
	DNN_PLT VARCHAR2(3), 
	DNN_PTA VARCHAR2(4), 
	DNN_DMC VARCHAR2(100), 
	DNN_CPO VARCHAR2(8), 
	DNN_SIT VARCHAR2(1) NOT NULL, 
	DNN_FAL DATE NOT NULL, 
	DNN_UAL NUMBER(4,0) NOT NULL, 
	DNN_FBJ DATE, 
	DNN_UBJ NUMBER(4,0), 
	DNN_LUG VARCHAR2(100), 
	DNN_RCA VARCHAR2(20), 
	CONSTRAINT PK_T_DNN PRIMARY KEY (DNN_DOM), 
	CONSTRAINT FK_T_DNN_REL_TT_80_T_ESI FOREIGN KEY (DNN_SPA, DNN_SPR, DNN_SMU, DNN_ESI)
	REFERENCES T_ESI (ESI_PAI, ESI_PRV, ESI_MUN, ESI_COD), 
	CONSTRAINT FK_T_DNN_REL_TT_22_T_DOM FOREIGN KEY (DNN_DOM)
	REFERENCES T_DOM (DOM_COD)
);
 
COMMENT ON TABLE T_DNN IS 'Domicilios no normalizados';
COMMENT ON COLUMN T_DNN.DNN_TVI IS 'Tipo de Via';
COMMENT ON COLUMN T_DNN.DNN_PAI IS 'Pais';
COMMENT ON COLUMN T_DNN.DNN_PRV IS 'Provincia';
COMMENT ON COLUMN T_DNN.DNN_MUN IS 'Municipio';
COMMENT ON COLUMN T_DNN.DNN_VPA IS 'Pais (Via)';
COMMENT ON COLUMN T_DNN.DNN_VPR IS 'Provincia (Via)';
COMMENT ON COLUMN T_DNN.DNN_VMU IS 'Municipio (Via)';
COMMENT ON COLUMN T_DNN.DNN_VIA IS 'Codigo de Via';
COMMENT ON COLUMN T_DNN.DNN_SPA IS 'Pais (Entidad Singular)';
COMMENT ON COLUMN T_DNN.DNN_SPR IS 'Provincia (Entidad Singular)';
COMMENT ON COLUMN T_DNN.DNN_SMU IS 'Municipio (Entidad Singular)';
COMMENT ON COLUMN T_DNN.DNN_ESI IS 'Entidad Singular';
COMMENT ON COLUMN T_DNN.DNN_NUD IS 'Numero desde';
COMMENT ON COLUMN T_DNN.DNN_LED IS 'Letra Desde';
COMMENT ON COLUMN T_DNN.DNN_NUH IS 'Numero Hasta';
COMMENT ON COLUMN T_DNN.DNN_LEH IS 'Letra Hasta';
COMMENT ON COLUMN T_DNN.DNN_BLQ IS 'Bloque';
COMMENT ON COLUMN T_DNN.DNN_POR IS 'Portal';
COMMENT ON COLUMN T_DNN.DNN_ESC IS 'Escalera';
COMMENT ON COLUMN T_DNN.DNN_PLT IS 'Planta';
COMMENT ON COLUMN T_DNN.DNN_PTA IS 'Puerta';
COMMENT ON COLUMN T_DNN.DNN_DMC IS 'Domicilio';
COMMENT ON COLUMN T_DNN.DNN_CPO IS 'Codigo Postal';
COMMENT ON COLUMN T_DNN.DNN_SIT IS 'Situacion';
COMMENT ON COLUMN T_DNN.DNN_FAL IS 'Fecha de Alta';
COMMENT ON COLUMN T_DNN.DNN_UAL IS 'Usuario de Alta';
COMMENT ON COLUMN T_DNN.DNN_FBJ IS 'Fecha de Baja';
COMMENT ON COLUMN T_DNN.DNN_UBJ IS 'Usuario de Baja';
COMMENT ON COLUMN T_DNN.DNN_RCA IS 'Referencia catastral';

CREATE INDEX REL_TT_25_FK ON T_DNN (DNN_TVI);  
CREATE INDEX REL_TT_80_FK ON T_DNN (DNN_SPA, DNN_SPR, DNN_SMU, DNN_ESI);
CREATE INDEX REL_TT_23_FK ON T_DNN (DNN_VPA, DNN_VPR, DNN_VMU, DNN_VIA) ;
CREATE INDEX REL_TT_24_FK ON T_DNN (DNN_PAI, DNN_PRV, DNN_MUN);
 
 
     
-- REGISTRO DE ENTRADA/SALIDA

CREATE TABLE R_TDO (	
	TDO_IDE NUMBER(5,0) NOT NULL, 
	TDO_COD VARCHAR2(5) NOT NULL, 
	TDO_DES VARCHAR2(50) NOT NULL,
	TDO_ACT VARCHAR2(3), 
	CONSTRAINT R_TDO_PK PRIMARY KEY (TDO_IDE)
);

COMMENT ON COLUMN R_TDO.TDO_IDE IS 'Identificador Unico de Tipo';
COMMENT ON COLUMN R_TDO.TDO_COD IS 'Codigo del Tipo de Documento';
COMMENT ON COLUMN R_TDO.TDO_DES IS 'Descripcion del Tipo de Documento';
COMMENT ON TABLE R_TDO  IS 'Tipo de Documentos';


CREATE TABLE R_TPE (	
	TPE_IDE NUMBER(3,0) NOT NULL, 
	TPE_COD VARCHAR2(2) NOT NULL, 
	TPE_DES VARCHAR2(45) NOT NULL,
	TPE_ACT VARCHAR2(3), 
	CONSTRAINT R_TPE_PK PRIMARY KEY (TPE_IDE)
);

COMMENT ON COLUMN R_TPE.TPE_IDE IS 'Identificador Unico del Tipo de Persona';
COMMENT ON COLUMN R_TPE.TPE_COD IS 'Codigo de Tipo de Persona';
COMMENT ON COLUMN R_TPE.TPE_DES IS 'Descripcion del Tipo de Persona';
COMMENT ON TABLE R_TPE  IS 'TIPO DE PERSONAS';


CREATE TABLE R_TTR (	
	TTR_IDE NUMBER(3,0) NOT NULL, 
	TTR_COD VARCHAR2(2) NOT NULL, 
	TTR_DES VARCHAR2(45) NOT NULL,
	TTR_ACT VARCHAR2(3), 
	CONSTRAINT R_TTR_PK PRIMARY KEY (TTR_IDE)
);

COMMENT ON COLUMN R_TTR.TTR_IDE IS 'Identificador Unico de Tipo de Transporte';
COMMENT ON COLUMN R_TTR.TTR_COD IS 'Codigo de Tipo de Transporte';
COMMENT ON COLUMN R_TTR.TTR_DES IS 'Descripcion del Tipo de Transporte';
COMMENT ON TABLE R_TTR  IS 'TIPOS DE TRANPORTE';


CREATE TABLE  R_ACT  (	
	ACT_IDE NUMBER(3,0) NOT NULL, 
	ACT_COD VARCHAR2(6) NOT NULL, 
	ACT_DES VARCHAR2(45) NOT NULL, 
	ACT_FDE DATE NOT NULL, 
	ACT_FHA DATE, 
	CONSTRAINT R_ACT_PK PRIMARY KEY (ACT_IDE)
);
 
COMMENT ON COLUMN R_ACT.ACT_IDE IS 'Identificador unico de la actuacion';
COMMENT ON COLUMN R_ACT.ACT_COD IS 'Codigo de la actuacion';
COMMENT ON COLUMN R_ACT.ACT_DES IS 'Descripcion de la actuacion';
COMMENT ON COLUMN R_ACT.ACT_FDE IS 'Fecha Desde de validez de la actuacion';
COMMENT ON COLUMN R_ACT.ACT_FHA IS 'Fecha Hasta de validez de la actuacion';
COMMENT ON TABLE R_ACT  IS 'ACTUACIONES';


CREATE TABLE R_RES (	
	RES_DEP NUMBER(3,0) DEFAULT 1 NOT NULL, 
	RES_UOR NUMBER(5,0) NOT NULL, 
	RES_TIP VARCHAR2(1) NOT NULL, 
	RES_EJE NUMBER(4,0) NOT NULL, 
	RES_NUM NUMBER(6,0) NOT NULL, 
	RES_FEC DATE NOT NULL, 
	RES_FED DATE NOT NULL, 
	RES_ASU VARCHAR2(4000) NOT NULL, 
	RES_MOD NUMBER(1,0) NOT NULL, 
	RES_OCD NUMBER(3,0), 
	RES_ECD NUMBER(3,0), 
	RES_DCD NUMBER(3,0), 
	RES_UCD NUMBER(5,0), 
	RES_DOD NUMBER(3,0), 
	RES_UOD NUMBER(5,0), 
	RES_OCO NUMBER(3,0), 
	RES_ECO NUMBER(3,0), 
	RES_DCO NUMBER(3,0), 
	RES_UCO NUMBER(5,0), 
	RES_TOR VARCHAR2(1), 
	RES_EOR NUMBER(4,0), 
	RES_NOR NUMBER(6,0), 
	RES_TTR NUMBER(3,0), 
	RES_NTR VARCHAR2(10), 
	RES_TDO NUMBER(5,0) NULL, 
	RES_TPE NUMBER(3,0), 
	RES_TER NUMBER(12,0) NOT NULL, 
	RES_DOM NUMBER(12,0) NOT NULL, 
	RES_TNV NUMBER(3,0) NOT NULL, 
	RES_ACT NUMBER(3,0), 
	RES_EST NUMBER(1,0), 
	RES_DIL VARCHAR2(4000), 
	RES_USU NUMBER(4,0) NOT NULL, 
	RES_DEU NUMBER(3,0) NOT NULL, 
	RES_UOU NUMBER(5,0) NOT NULL, 
	RES_DEC NUMBER(3,0), 
	RES_EJC NUMBER(4,0), 
	RES_TIC VARCHAR2(1), 
	RES_NUC NUMBER(6,0), 
	RES_UOC NUMBER(5,0), 
	RES_ENR VARCHAR2(40), 
	RES_OBS VARCHAR2(2000),
	RES_AUT VARCHAR2(200),
	PROCEDIMIENTO VARCHAR2(5),
	PROCMUN NUMBER(3,0) DEFAULT 0,
	ASUNTO VARCHAR2(10),
	RES_FEDOC DATE,
	RES_OFI NUMBER(5,0),
	CONSTRAINT R_RES_PK PRIMARY KEY (RES_UOR, RES_TIP, RES_EJE, RES_NUM, RES_DEP), 
	CONSTRAINT FK_R_RES_A_DEP FOREIGN KEY (RES_DOD)
		REFERENCES A_DEP (DEP_COD), 
	CONSTRAINT FK_R_RES_REL_R_RES FOREIGN KEY (RES_UOC, RES_TIC, RES_EJC, RES_NUC, RES_DEC)
		REFERENCES R_RES (RES_UOR, RES_TIP, RES_EJE, RES_NUM, RES_DEP), 
	CONSTRAINT FK_R_RES_R_TDO FOREIGN KEY (RES_TDO)
		REFERENCES R_TDO (TDO_IDE), 
	CONSTRAINT FK_R_RES_R_TPE FOREIGN KEY (RES_TPE)
		REFERENCES R_TPE (TPE_IDE), 
	CONSTRAINT FK_R_RES_R_TTR FOREIGN KEY (RES_TTR)
		REFERENCES R_TTR (TTR_IDE), 
	CONSTRAINT FK_R_RES_R_ACT FOREIGN KEY (RES_ACT)
		REFERENCES R_ACT (ACT_IDE)
);
   
COMMENT ON COLUMN R_RES.RES_DEP IS 'Codigo del departamento';
COMMENT ON COLUMN R_RES.RES_UOR IS 'Codigo de la Unidad de Registro';
COMMENT ON COLUMN R_RES.RES_TIP IS 'Tipo de Anotacion (E/S)';
COMMENT ON COLUMN R_RES.RES_EJE IS 'Año de la anotacion (Ejercicio)';
COMMENT ON COLUMN R_RES.RES_NUM IS 'Numero de registro asignado a la anotacion';
COMMENT ON COLUMN R_RES.RES_FEC IS 'Fecha sobre la que se realiza la anotacion';
COMMENT ON COLUMN R_RES.RES_FED IS 'Fecha y hora real del registro del documento (puede ser registro externo al ayuntamiento)';
COMMENT ON COLUMN R_RES.RES_ASU IS 'Asunto';
COMMENT ON COLUMN R_RES.RES_MOD IS 'Tipo: dirigido a otro Registro (del propio o de otro ayuntamiento) o Ordinario (unidad tramitadora del ayuntamiento)';
COMMENT ON COLUMN R_RES.RES_OCD IS 'Organizacion destino de la anotacion (a otro registro)';
COMMENT ON COLUMN R_RES.RES_ECD IS 'Entidad destino de la anotacion (a otro registro)';
COMMENT ON COLUMN R_RES.RES_DCD IS 'Departamento Destino (a otro registro)';
COMMENT ON COLUMN R_RES.RES_UCD IS 'Unidad destino (a otro registro)';
COMMENT ON COLUMN R_RES.RES_DOD IS 'Departamento Destino/Origen de la anotacion (Anotacion Ordinaria)';
COMMENT ON COLUMN R_RES.RES_UOD IS 'Unidad Tramitadora Destino/Origen de la anotacion (Anotacion Ordinaria)';
COMMENT ON COLUMN R_RES.RES_OCO IS 'Organizacion Origen de la Anotacion (otro Registro)';
COMMENT ON COLUMN R_RES.RES_ECO IS 'Entidad Origen de la Anotacion (otro Registro)';
COMMENT ON COLUMN R_RES.RES_DCO IS 'Departamento Origen de la Anotacion (otro Registro)';
COMMENT ON COLUMN R_RES.RES_UCO IS 'UnidadOrigen de la Anotacion (otro Registro)';
COMMENT ON COLUMN R_RES.RES_TOR IS 'Indica si el Origen es Entrada o Salida. Solo anotaciones con destino al registro actual';
COMMENT ON COLUMN R_RES.RES_EOR IS 'Ejercicio de origen. Solo anotaciones con destino al registro actual';
COMMENT ON COLUMN R_RES.RES_NOR IS 'Numero de entrada o salida de origen. Solo anotaciones con destino al registro actual';
COMMENT ON COLUMN R_RES.RES_TTR IS 'Tipo de Transporte';
COMMENT ON COLUMN R_RES.RES_NTR IS 'Numero de Transporte';
COMMENT ON COLUMN R_RES.RES_TDO IS 'Tipo de Documento';
COMMENT ON COLUMN R_RES.RES_TPE IS 'Tipo de Remitente';
COMMENT ON COLUMN R_RES.RES_TER IS 'Codigo del Interesado';
COMMENT ON COLUMN R_RES.RES_DOM IS 'Domicilio del Interesado';
COMMENT ON COLUMN R_RES.RES_TNV IS 'Numero de Modificacion de la informacion del Interesado';
COMMENT ON COLUMN R_RES.RES_ACT IS 'Actuacion';
COMMENT ON COLUMN R_RES.RES_EST IS 'Estado de la Anotacion ( 0 -Pendiente, 1 - Aceptada, 2 - Rechazada, En Reserva o 9 - Anulada)';
COMMENT ON COLUMN R_RES.RES_DIL IS 'Diligencia de anulacion';
COMMENT ON COLUMN R_RES.RES_USU IS 'Usuario que registra';
COMMENT ON COLUMN R_RES.RES_DEU IS 'Departamento del usuario de registro';
COMMENT ON COLUMN R_RES.RES_UOU IS 'Unidad Organica del usuario de registro';
COMMENT ON COLUMN R_RES.RES_DEC IS 'Departamento Contestada';
COMMENT ON COLUMN R_RES.RES_EJC IS 'Ejercicio Contestada';
COMMENT ON COLUMN R_RES.RES_TIC IS 'Tipo Contestada';
COMMENT ON COLUMN R_RES.RES_NUC IS 'Numero Contestada';
COMMENT ON COLUMN R_RES.RES_UOC IS 'Unidad Organica Contestada';
COMMENT ON COLUMN R_RES.RES_ENR IS '???';
COMMENT ON COLUMN R_RES.RES_AUT IS 'Autoridad a la que va dirigido el registro';
COMMENT ON COLUMN R_RES.PROCEDIMIENTO IS 'Código del procedimiento';
COMMENT ON COLUMN R_RES.PROCMUN IS 'Municipio del procedimiento';
COMMENT ON COLUMN R_RES.ASUNTO IS 'Código del asunto de esta anotación';
COMMENT ON TABLE R_RES  IS 'ANOTACIONES DEL REGISTRO DE ENTRADA/SALIDA';
  
CREATE INDEX REL_RES_HTE_FK ON R_RES (RES_TER, RES_TNV);
CREATE INDEX REL_RES_TDO_FK ON R_RES (RES_TDO);
CREATE INDEX REL_RES_TPE_FK ON R_RES (RES_TPE);
CREATE INDEX REL_RES_TTR_FK ON R_RES (RES_TTR);
CREATE INDEX REL_RES_UOR_FK ON R_RES (RES_UOR);
CREATE INDEX REL_RES_ACT_FK ON R_RES (RES_ACT);
CREATE INDEX REL_RES_DEP_FK ON R_RES (RES_DOD);
CREATE INDEX REL_RES_DOM_FK ON R_RES (RES_DOM);
 
  
CREATE TABLE R_RED (	
	RED_DEP NUMBER(3) NOT NULL,
	RED_UOR NUMBER(5) NOT NULL,
	RED_EJE NUMBER(4) NOT NULL,
	RED_NUM NUMBER(6) NOT NULL,
	RED_TIP VARCHAR2(1) NOT NULL,
	RED_NOM_DOC VARCHAR2(255) NOT NULL,
	RED_TIP_DOC VARCHAR2(80) NULL,
	RED_DOC LONG RAW NULL,
	RED_FEC_DOC DATE,
	RED_ENT VARCHAR2(1),
	PRIMARY KEY (RED_DEP,RED_UOR,RED_EJE,RED_NUM,RED_TIP,RED_NOM_DOC)
);


CREATE TABLE R_EXT (	
	EXT_UOR NUMBER(5,0) NOT NULL, 
	EXT_TIP VARCHAR2(1) NOT NULL, 
	EXT_EJE NUMBER(4,0) NOT NULL, 
	EXT_NUM NUMBER(6,0) NOT NULL, 
	EXT_DEP NUMBER(3,0) NOT NULL, 
	EXT_TER NUMBER(12,0) NOT NULL, 
	EXT_NVR NUMBER(3,0) NOT NULL, 
	EXT_DOT NUMBER(12,0) NOT NULL, 
	EXT_ROL NUMBER(2,0) NOT NULL, 
	CONSTRAINT PK_R_EXT PRIMARY KEY (EXT_UOR, EXT_TIP, EXT_EJE, EXT_NUM, EXT_DEP, EXT_TER, EXT_NVR), 
	CONSTRAINT R_EXT_TO_T_HTE_FK1 FOREIGN KEY (EXT_TER, EXT_NVR)
		REFERENCES T_HTE (HTE_TER, HTE_NVR)
);
   
COMMENT ON COLUMN R_EXT.EXT_UOR IS 'UOR de Registro';
COMMENT ON COLUMN R_EXT.EXT_TIP IS 'Tipo de Registro';
COMMENT ON COLUMN R_EXT.EXT_EJE IS 'Ejercicio de Registro';
COMMENT ON COLUMN R_EXT.EXT_NUM IS 'Numero de Registro';
COMMENT ON COLUMN R_EXT.EXT_DEP IS 'Departamento de Registro';
COMMENT ON COLUMN R_EXT.EXT_TER IS 'Codigo del Tercero asociado al Registro';
COMMENT ON COLUMN R_EXT.EXT_NVR IS 'Numero de Version del Tercero';
COMMENT ON COLUMN R_EXT.EXT_DOT IS 'Domicilio del Tercero';
COMMENT ON COLUMN R_EXT.EXT_ROL IS 'Rol del Tercero';
COMMENT ON TABLE R_EXT IS 'RELACION REGISTRO Y TERCEROS';

CREATE INDEX IND_RES ON R_EXT (EXT_EJE, EXT_NUM, EXT_UOR, EXT_TIP, EXT_DEP);
CREATE INDEX IND_HTE ON R_EXT (EXT_TER, EXT_NVR);
   

CREATE TABLE R_ROL (	
	ROL_COD NUMBER(3,0) NOT NULL, 
	ROL_DES VARCHAR2(1000) NOT NULL, 
	ROL_PDE VARCHAR(2) NOT NULL,
	GRUPO NUMBER(6,0) DEFAULT 1 NOT NULL, 
	ROL_ACT VARCHAR2(2) DEFAULT 'SI' NOT NULL,
	ROL_PCW VARCHAR2(2) DEFAULT 'NO' NOT NULL,
	CONSTRAINT PK_R_ROL PRIMARY KEY (GRUPO, ROL_COD)
);
   
COMMENT ON COLUMN R_ROL.GRUPO IS 'Código del grupo de roles al que pertenece este rol';
      
      
CREATE TABLE R_RER (	
	RER_DEP NUMBER(3,0) DEFAULT 1 NOT NULL, 
	RER_UOR NUMBER(5,0) NOT NULL, 
	RER_TIP VARCHAR2(1) NOT NULL, 
	RER_EJE NUMBER(4,0) NOT NULL, 
	RER_NUM NUMBER(6,0) NOT NULL, 
	RER_FEC DATE NOT NULL, 
	RER_USU NUMBER(4),
	CONSTRAINT R_RER_PK PRIMARY KEY (RER_DEP, RER_UOR, RER_TIP, RER_EJE, RER_NUM)
);

COMMENT ON COLUMN R_RER.RER_DEP IS 'Organizacion';
COMMENT ON COLUMN R_RER.RER_UOR IS 'Unidad Orgánica';
COMMENT ON COLUMN R_RER.RER_TIP IS 'Tipo de Registro (E/S)';
COMMENT ON COLUMN R_RER.RER_EJE IS 'Ejercicio';
COMMENT ON COLUMN R_RER.RER_NUM IS 'Numero de registro reservado';
COMMENT ON COLUMN R_RER.RER_FEC IS 'Fecha de registro';
COMMENT ON TABLE R_RER  IS 'RESERVA DE NUMEROS DE REGISTRO';
COMMENT ON COLUMN R_RER.RER_USU IS 'Codigo usuario alta reserva';


CREATE TABLE R_BWC (	
	BWC_EJE NUMBER(4,0) NOT NULL, 
	BWC_NUM NUMBER(6,0) NOT NULL, 
	BWC_FEC DATE NOT NULL, 
	BWC_NOM VARCHAR2(2000) NOT NULL, 
	BWC_XML LONG NOT NULL, 
	BWC_EST CHAR(1), 
	CONSTRAINT PK_R_BWC PRIMARY KEY (BWC_EJE, BWC_NUM)
);


CREATE TABLE R_DIL (	
	DIL_DEP NUMBER(3,0) DEFAULT 1 NOT NULL, 
	DIL_UOR NUMBER(5,0) NOT NULL, 
	DIL_FEC DATE NOT NULL, 
	DIL_TIR VARCHAR2(1) NOT NULL, 
	DIL_TXT VARCHAR2(4000) NOT NULL, 
	CONSTRAINT R_DIL_PK PRIMARY KEY (DIL_DEP, DIL_UOR, DIL_FEC, DIL_TIR)
);
 
COMMENT ON COLUMN R_DIL.DIL_DEP IS 'Codigo de departamento';
COMMENT ON COLUMN R_DIL.DIL_UOR IS 'Codigo de Unidad';
COMMENT ON COLUMN R_DIL.DIL_FEC IS 'Fecha de la diligencia';
COMMENT ON COLUMN R_DIL.DIL_TIR IS 'Tipo de Registro (E/S)';
COMMENT ON COLUMN R_DIL.DIL_TXT IS 'Texto de la diligencia';
COMMENT ON TABLE R_DIL  IS 'DILIGENCIAS';


CREATE TABLE R_NRE (	
	NRE_DEP NUMBER(3,0) DEFAULT 1 NOT NULL, 
	NRE_UOR NUMBER(5,0) NOT NULL, 
	NRE_TIP VARCHAR2(1) NOT NULL, 
	NRE_EJE NUMBER(4,0) NOT NULL, 
	NRE_NUM NUMBER(6,0) NOT NULL, 
	CONSTRAINT R_NRE_PK PRIMARY KEY (NRE_DEP, NRE_UOR, NRE_TIP, NRE_EJE)
);

COMMENT ON COLUMN R_NRE.NRE_DEP IS 'Codigo de Departamento';
COMMENT ON COLUMN R_NRE.NRE_UOR IS 'Codigo de Unidad';
COMMENT ON COLUMN R_NRE.NRE_TIP IS 'Tipo de Registro (E/S)';
COMMENT ON COLUMN R_NRE.NRE_EJE IS 'Ejercicio';
COMMENT ON COLUMN R_NRE.NRE_NUM IS 'Ultimo Numero Registrado de Entrada o Salida';
COMMENT ON TABLE R_NRE  IS 'NUMERO DE REGISTRO';

CREATE INDEX REL_NRE_DEP_FK ON R_NRE (NRE_DEP);


CREATE TABLE R_REG (	
	REG_DEP NUMBER(3,0) NOT NULL, 
	REG_UOR NUMBER(5,0) NOT NULL, 
	REG_UAE DATE, 
	REG_UAS DATE, 
	REG_UCE DATE, 
	REG_UCS DATE, 
	CONSTRAINT R_REG_PK PRIMARY KEY (REG_DEP, REG_UOR)
);

COMMENT ON COLUMN R_REG.REG_DEP IS 'Codigo de departamento';
COMMENT ON COLUMN R_REG.REG_UOR IS 'Codigo de Unidad';
COMMENT ON COLUMN R_REG.REG_UAE IS 'Ultima fecha de Apertura del registro de Entrada';
COMMENT ON COLUMN R_REG.REG_UAS IS 'Ultima fecha de Apertura del registro de Salida';
COMMENT ON COLUMN R_REG.REG_UCE IS 'Ultima fecha de Cierre del registro de Entrada';
COMMENT ON COLUMN R_REG.REG_UCS IS 'Ultima fecha de Cierre del registro de Salida';
COMMENT ON TABLE R_REG IS 'Entidad desde la que se verifican las fases de apertura y cierre del registro';
   

CREATE TABLE R_TEM (	
	TEM_IDE NUMBER(6,0) NOT NULL, 
	TEM_COD VARCHAR2(6) NOT NULL, 
	TEM_DES VARCHAR2(50) NOT NULL, 
	CONSTRAINT R_TEM_PK PRIMARY KEY (TEM_IDE)
);

COMMENT ON COLUMN R_TEM.TEM_IDE IS 'Identificador Unico de Tema';
COMMENT ON COLUMN R_TEM.TEM_COD IS 'Codigo de Tema';
COMMENT ON COLUMN R_TEM.TEM_DES IS 'Descripcion del Tema';
COMMENT ON TABLE R_TEM IS 'TEMAS';


CREATE TABLE R_RET (	
	RET_DEP NUMBER(3,0) NOT NULL, 
	RET_UOR NUMBER(5,0) NOT NULL, 
	RET_EJE NUMBER(4,0) NOT NULL, 
	RET_NUM NUMBER(6,0) NOT NULL, 
	RET_TIP VARCHAR2(1) NOT NULL, 
	RET_ORD NUMBER(2,0) NOT NULL, 
	RET_TEM NUMBER(6,0) NOT NULL, 
	CONSTRAINT R_RET_PK PRIMARY KEY (RET_DEP, RET_UOR, RET_EJE, RET_NUM, RET_TIP, RET_TEM), 
	CONSTRAINT FK_R_RET_R_TEM FOREIGN KEY (RET_TEM) 
		REFERENCES R_TEM (TEM_IDE)
);

COMMENT ON COLUMN R_RET.RET_DEP IS 'Codigo de Departamento';
COMMENT ON COLUMN R_RET.RET_UOR IS 'Codigo de Unidad';
COMMENT ON COLUMN R_RET.RET_EJE IS 'Ejercicio';
COMMENT ON COLUMN R_RET.RET_NUM IS 'Numero de Registro (E/S)'; 
COMMENT ON COLUMN R_RET.RET_TIP IS 'Tipo de Reistro (E/S)';
COMMENT ON COLUMN R_RET.RET_ORD IS 'Numero de orden del Tema';
COMMENT ON COLUMN R_RET.RET_TEM IS 'Identificador Unico del Tema';
COMMENT ON TABLE R_RET IS 'Temas relacionados con una Entrada/Salida del Registro';

CREATE INDEX REL_RET_TEM_FK ON R_RET (RET_TEM) ;
  

CREATE TABLE R_TIPOASUNTO (
	CODIGO VARCHAR2(10) NOT NULL,
	UNIDADREGISTRO NUMBER(5,0) NOT NULL,
	TIPOREGISTRO VARCHAR2(1) NOT NULL,
	DESCRIPCION VARCHAR2(100) NOT NULL, 
	EXTRACTO VARCHAR2(255) DEFAULT '', 
	UNIDADTRAM NUMBER(5,0) NOT NULL,
	PROCEDIMIENTO VARCHAR2(5) DEFAULT '',
	PROCMUN NUMBER(3,0) DEFAULT 0 NOT NULL,
  	UORSCORREO VARCHAR2(120) DEFAULT '',
  	NOTIFICAR NUMBER(1,0) DEFAULT 0 NOT NULL,
	ELIMINADO NUMBER(1,0) DEFAULT 0,
	FECHA_ELIMINACION DATE,
	USUARIO_BAJA NUMBER(4,0),
  	CONSTRAINT PK_R_TIPOASUNTO PRIMARY KEY (CODIGO,UNIDADREGISTRO,TIPOREGISTRO)
);

   
COMMENT ON COLUMN R_TIPOASUNTO.CODIGO IS 'Código visible del asunto';
COMMENT ON COLUMN R_TIPOASUNTO.UNIDADREGISTRO IS 'Código de la UOR para la que se da de alta el asunto (-1 si es para cualquiera)';
COMMENT ON COLUMN R_TIPOASUNTO.TIPOREGISTRO IS 'Tipo de registro (E o S)';
COMMENT ON COLUMN R_TIPOASUNTO.DESCRIPCION IS 'Descripción del asunto';
COMMENT ON COLUMN R_TIPOASUNTO.EXTRACTO IS 'Texto con el que se rellenará el asunto de una anotación';
COMMENT ON COLUMN R_TIPOASUNTO.UNIDADTRAM IS 'Unidad Tramitadora que recibirá la anotación';
COMMENT ON COLUMN R_TIPOASUNTO.PROCEDIMIENTO IS 'Procedimiento relacionado con el que se completará la anotación';
COMMENT ON COLUMN R_TIPOASUNTO.PROCMUN IS 'Código de municipio del procedimiento';
COMMENT ON COLUMN R_TIPOASUNTO.UORSCORREO IS 'Lista de uors a notificar al dar de alta en registro';
COMMENT ON TABLE R_TIPOASUNTO IS 'ASUNTOS CODIFICADOS';
    

CREATE TABLE R_DOCSASUNTO (
	CODIGOASUNTO   VARCHAR2(10) NOT NULL,
  	UNIDADREGISTRO NUMBER(5,0) NOT NULL,
  	TIPOREGISTRO   VARCHAR2(1) NOT NULL,
  	TITULODOC      VARCHAR2(255) NOT NULL,
   	CONSTRAINT PK_R_DOCSASUNTO PRIMARY KEY (CODIGOASUNTO,UNIDADREGISTRO,TIPOREGISTRO,TITULODOC),
   	FOREIGN KEY (CODIGOASUNTO,UNIDADREGISTRO,TIPOREGISTRO) 
   		REFERENCES R_TIPOASUNTO (CODIGO,UNIDADREGISTRO,TIPOREGISTRO)
);

COMMENT ON COLUMN R_DOCSASUNTO.CODIGOASUNTO IS 'Código visible del asunto';
COMMENT ON COLUMN R_DOCSASUNTO.UNIDADREGISTRO IS 'Código de la UOR para la que se da de alta el asunto';
COMMENT ON COLUMN R_DOCSASUNTO.TIPOREGISTRO IS 'Tipo de registro (E o S)';
COMMENT ON COLUMN R_DOCSASUNTO.TITULODOC IS 'Título del documento';
COMMENT ON TABLE R_DOCSASUNTO IS 'DOCUMENTOS DE ASUNTOS CODIFICADOS';


CREATE TABLE R_REL (    
    REL_DEP NUMBER(3,0) DEFAULT 1 NOT NULL, 
    REL_UOR NUMBER(5,0) NOT NULL, 
    REL_TIP_A VARCHAR2(1) NOT NULL, 
    REL_EJE_A NUMBER(4,0) NOT NULL, 
    REL_NUM_A NUMBER(8,0) NOT NULL,
    REL_TIP_B VARCHAR2(1) NOT NULL, 
    REL_EJE_B NUMBER(4,0) NOT NULL, 
    REL_NUM_B NUMBER(8,0) NOT NULL,
    CONSTRAINT R_REL_PK PRIMARY KEY (REL_UOR, REL_DEP, REL_TIP_A, REL_TIP_B, REL_EJE_A, REL_EJE_B, REL_NUM_A, REL_NUM_B)
);

COMMENT ON COLUMN  R_REL.REL_DEP IS 'Código de departamento.';
COMMENT ON COLUMN  R_REL.REL_UOR IS 'Código de unidad de registro';
COMMENT ON COLUMN  R_REL.REL_TIP_A IS 'Tipo del primer registro';
COMMENT ON COLUMN  R_REL.REL_EJE_A IS 'Ejercicio del primer registro';
COMMENT ON COLUMN  R_REL.REL_NUM_A IS 'Número del primer registro';
COMMENT ON COLUMN  R_REL.REL_TIP_B IS 'Tipo del segundo registro';
COMMENT ON COLUMN  R_REL.REL_EJE_B IS 'Ejercicio del segundo registro';
COMMENT ON COLUMN  R_REL.REL_NUM_B IS 'Número del segundo registro';


CREATE TABLE  R_HISTORICO(
  CODIGO         NUMBER(10,0)  NOT NULL,
  USUARIO        NUMBER(4,0)   NOT NULL,
  FECHA          DATE          NOT NULL,
  TIPOENTIDAD    VARCHAR2(12)  DEFAULT 'ANOTACION' NOT NULL, 
  CODENTIDAD     VARCHAR2(30)  NOT NULL,
  TIPOMOV        NUMBER(2,0),
  DETALLES       CLOB,
  CONSTRAINT PK_R_HISTORICO PRIMARY KEY (CODIGO)
);

 CREATE INDEX INDEX_R_HISTORICO_ENTIDAD ON R_HISTORICO(CODENTIDAD);

COMMENT ON COLUMN  R_HISTORICO.CODIGO IS 'Código interno del movimiento';
COMMENT ON COLUMN  R_HISTORICO.USUARIO IS 'Código del usuario que realiza el movimiento';
COMMENT ON COLUMN  R_HISTORICO.FECHA IS 'Fecha y hora en que se realiza el movimiento';
COMMENT ON COLUMN  R_HISTORICO.TIPOENTIDAD IS 'Tipo de entidad sobre la que realiza el movimiento';
COMMENT ON COLUMN  R_HISTORICO.CODENTIDAD IS 'Código de la entidad';
COMMENT ON COLUMN  R_HISTORICO.TIPOMOV IS 'Tipo del movimiento';
COMMENT ON COLUMN  R_HISTORICO.DETALLES IS 'Detalles del movimiento en formato XML';
COMMENT ON TABLE   R_HISTORICO IS 'HISTORICO DE MOVIMIENTOS';

-- GESTIÓN DE EXPEDIENTES

CREATE TABLE E_TDA (	
	TDA_COD NUMBER(2,0) NOT NULL, 
	TDA_DES VARCHAR2(20) NOT NULL, 
	TDA_TAB VARCHAR2(20) NOT NULL, 
	CONSTRAINT PK_E_TDA PRIMARY KEY (TDA_COD)
);


CREATE TABLE E_EXP_BLOQ (	
	BLQ_EXP_MUN NUMBER(4,0) NOT NULL, 
	BLQ_EXP_EJE NUMBER(4,0) NOT NULL, 
	BLQ_EXP_NUM VARCHAR2(30) NOT NULL, 
	BLQ_EXP_PRO VARCHAR2(5) NOT NULL, 
	BLQ_TRA_COD NUMBER(4,0) NOT NULL, 
	BLQ_TRA_OCU NUMBER(4,0) NOT NULL, 
	BLQ_USUARIO NUMBER(4,0) NOT NULL, 
	CONSTRAINT E_EXP_BLOQ_PK PRIMARY KEY (BLQ_EXP_MUN, BLQ_EXP_EJE, BLQ_EXP_NUM, BLQ_EXP_PRO, BLQ_TRA_COD, BLQ_TRA_OCU, BLQ_USUARIO)
);


CREATE TABLE E_FLS (	
	FLS_MUN NUMBER(3,0) NOT NULL, 
	FLS_PRO VARCHAR2(5) NOT NULL, 
	FLS_TRA NUMBER(4,0) NOT NULL, 
	FLS_NUC NUMBER(1,0) NOT NULL, 
	FLS_NUS NUMBER(4,0) NOT NULL, 
	FLS_CTS NUMBER(4,0) NOT NULL, 
	PRIMARY KEY (FLS_MUN, FLS_PRO, FLS_TRA, FLS_NUC, FLS_NUS)
);

COMMENT ON TABLE E_FLS IS 'Flujo de Salida';
COMMENT ON COLUMN E_FLS.FLS_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_FLS.FLS_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_FLS.FLS_TRA IS 'Codigo de Tramite';
COMMENT ON COLUMN E_FLS.FLS_NUC IS 'Numero de Condicion de Salida';
COMMENT ON COLUMN E_FLS.FLS_NUS IS 'Número de secuencia';
COMMENT ON COLUMN E_FLS.FLS_CTS IS 'Codigo de Tramite a Iniciar';
   
   
CREATE TABLE E_CAR (	
	CAR_COD NUMBER(3,0) NOT NULL, 
	CAR_DES VARCHAR2(60) NOT NULL, 
	CAR_CAR VARCHAR2(60) NOT NULL, 
	CAR_TRA VARCHAR2(15) NOT NULL, 
	CAR_SIT VARCHAR2(1) NOT NULL, 
	CONSTRAINT PK_E_CAR PRIMARY KEY (CAR_COD)
);

CREATE TABLE E_TRASIT(	
	TRASIT_COD NUMBER(4,0) NOT NULL ENABLE, 
	TRASIT_SITUACION NUMBER(1,0) NOT NULL ENABLE, 
	TRASIT_PRO VARCHAR2(5 BYTE) NOT NULL ENABLE, 
	TRASIT_EJE NUMBER(4,0) NOT NULL ENABLE, 
	TRASIT_MUN NUMBER(3,0), 
	TRASIT_NUM VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	CONSTRAINT E_TRASIT_PK PRIMARY KEY (TRASIT_COD, TRASIT_PRO, TRASIT_EJE, TRASIT_NUM)
);

COMMENT ON COLUMN "E_TRASIT"."TRASIT_COD" IS 'Codigo del tramite';
COMMENT ON COLUMN "E_TRASIT"."TRASIT_SITUACION" IS 'Estado del tramite,0 abierto,9 finalizado,1 finalizado de modo no convecional';

CREATE TABLE E_EXPSIT(	
	EXPSIT_NUM VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	EXPSIT_JUST VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	EXPSIT_USUARIO VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	EXPSIT_AUTORIZA VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	EXPSIT_MUN NUMBER(3,0) NOT NULL ENABLE, 
	EXPSIT_EJE NUMBER(4,0) NOT NULL ENABLE, 
	CONSTRAINT E_EXTSIT_PK PRIMARY KEY (EXPSIT_NUM, EXPSIT_MUN, EXPSIT_EJE)
);

CREATE TABLE E_CRD (	
	CRD_MUN NUMBER(3,0) NOT NULL, 
	CRD_PRO VARCHAR2(5) NOT NULL, 
	CRD_EJE NUMBER(4,0) NOT NULL, 
	CRD_NUM VARCHAR2(30) NOT NULL, 
	CRD_TRA NUMBER(4,0) NOT NULL, 
	CRD_OCU NUMBER(4,0) NOT NULL, 
	CRD_NUD NUMBER(4,0) NOT NULL, 
	CRD_FAL DATE NOT NULL, 
	CRD_FMO DATE, 
	CRD_USC NUMBER(4,0) NOT NULL, 
	CRD_USM NUMBER(4,0), 
	CRD_FIL LONG RAW, 
	CRD_DES VARCHAR2(255) NOT NULL, 
	CRD_DOT NUMBER(2,0) NOT NULL, 
	CRD_FIR_EST CHAR(1) DEFAULT NULL, 
	CRD_EXP_FD VARCHAR2(30), 
	CRD_DOC_FD VARCHAR2(30), 
	CRD_FIR_FD NUMBER(1,0), 
	CRD_FINF DATE,
	CONSTRAINT PK_E_CRD PRIMARY KEY (CRD_MUN, CRD_PRO, CRD_EJE, CRD_NUM, CRD_TRA, CRD_OCU, CRD_NUD)
);

 
CREATE TABLE E_CRD_FIR (
	CRD_MUN NUMBER(3,0) NOT NULL, 
	CRD_PRO VARCHAR2(5) NOT NULL, 
	CRD_EJE NUMBER(4,0) NOT NULL, 
	CRD_NUM VARCHAR2(30) NOT NULL, 
	CRD_TRA NUMBER(4,0) NOT NULL, 
	CRD_OCU NUMBER(4,0) NOT NULL, 
	CRD_NUD NUMBER(4,0) NOT NULL, 
	USU_COD NUMBER(4,0) NOT NULL, 
	FIR_EST CHAR(1) DEFAULT 'O' NOT NULL, 
	FIR LONG RAW, 
	FX_FIRMA DATE, 
	OBSERV VARCHAR2(160), 
	USU_FIR NUMBER(4,0), 
	CRD_COD_PF_EXT VARCHAR2(100 BYTE),
	CRD_ID_SOL_PF_EXT VARCHAR2(100 BYTE),
	CONSTRAINT CRD_FIR_PK PRIMARY KEY (CRD_MUN, CRD_PRO, CRD_EJE, CRD_NUM, CRD_TRA, CRD_OCU, CRD_NUD, USU_COD), 
	CONSTRAINT CRDFIR_CRD FOREIGN KEY (CRD_MUN, CRD_PRO, CRD_EJE, CRD_NUM, CRD_TRA, CRD_OCU, CRD_NUD)
		REFERENCES E_CRD (CRD_MUN, CRD_PRO, CRD_EJE, CRD_NUM, CRD_TRA, CRD_OCU, CRD_NUD) ON DELETE CASCADE
);


ALTER TABLE E_CRD_FIR ADD CRD_COD_PF_EXT VARCHAR2(100 BYTE);
ALTER TABLE E_CRD_FIR ADD CRD_ID_SOL_PF_EXT VARCHAR2(100 BYTE);

CREATE TABLE E_CRO (	
	CRO_PRO VARCHAR2(5) NOT NULL, 
	CRO_EJE NUMBER(4,0) NOT NULL, 
	CRO_NUM VARCHAR2(30) NOT NULL, 
	CRO_TRA NUMBER(4,0) NOT NULL, 
	CRO_FEI DATE NOT NULL, 
	CRO_FEF DATE, 
	CRO_USU NUMBER(4,0) NOT NULL, 
	CRO_UTR NUMBER(5,0) NOT NULL, 
	CRO_MUN NUMBER(3,0) NOT NULL, 
	CRO_OCU NUMBER(4,0) NOT NULL, 
	CRO_FIP DATE, 
	CRO_FLI DATE, 
	CRO_FFP DATE, 
	CRO_RES NUMBER, 
	CRO_OBS VARCHAR2(1000), 
	CRO_USF NUMBER(4,0),
	CRO_AVISADOCFP NUMBER(1) DEFAULT(0),
	CRO_AVISADOFDP NUMBER(1) DEFAULT(0), 
	PRIMARY KEY (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU)
);

COMMENT ON COLUMN E_CRO.CRO_AVISADOCFP IS '1 INDICA SI SE HA NOTIFICADO EL TRAMITE CERCANO A FIN';
COMMENT ON COLUMN E_CRO.CRO_AVISADOFDP IS '1 INDICA SI SE HA NOTIFICADO EL TRAMITE QUE HA SOBREPASADO LA FECHA';           

  
CREATE TABLE E_TDET (	
	TDET_MUN NUMBER(3,0) NOT NULL, 
	TDET_PRO VARCHAR2(5) NOT NULL, 
	TDET_EJE NUMBER(4,0) NOT NULL, 
	TDET_NUM VARCHAR2(30) NOT NULL, 
	TDET_TRA NUMBER(4,0) NOT NULL, 
	TDET_OCU NUMBER(4,0) NOT NULL, 
	TDET_COD VARCHAR2(20) NOT NULL, 
	TDET_VALOR VARCHAR2(4000) NOT NULL, 
	CONSTRAINT PK_E_TDET PRIMARY KEY (TDET_MUN, TDET_PRO, TDET_EJE, TDET_NUM, TDET_TRA, TDET_OCU, TDET_COD), 
	CONSTRAINT E_TDET_FK1 FOREIGN KEY (TDET_MUN, TDET_PRO, TDET_EJE, TDET_NUM, TDET_TRA, TDET_OCU)
		REFERENCES E_CRO (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU) ON DELETE CASCADE
);


CREATE TABLE E_TFET (	
	TFET_MUN NUMBER(3,0) NOT NULL, 
	TFET_PRO VARCHAR2(5) NOT NULL, 
	TFET_EJE NUMBER(4,0) NOT NULL, 
	TFET_NUM VARCHAR2(30) NOT NULL, 
	TFET_TRA NUMBER(4,0) NOT NULL, 
	TFET_OCU NUMBER(4,0) NOT NULL, 
	TFET_COD VARCHAR2(20) NOT NULL, 
	TFET_VALOR DATE NOT NULL, 
	TFET_FEC_VENCIMIENTO DATE,
    PLAZO_ACTIVADO NUMBER(1,0),
	CONSTRAINT PK_E_TFET PRIMARY KEY (TFET_MUN, TFET_PRO, TFET_EJE, TFET_NUM, TFET_TRA, TFET_OCU, TFET_COD), 
	CONSTRAINT E_TFET_FK1 FOREIGN KEY (TFET_MUN, TFET_PRO, TFET_EJE, TFET_NUM, TFET_TRA, TFET_OCU)
		REFERENCES E_CRO (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU) ON DELETE CASCADE
);


CREATE TABLE E_TFIT (	
	TFIT_MUN NUMBER(3,0) NOT NULL, 
	TFIT_PRO VARCHAR2(5) NOT NULL, 
	TFIT_EJE NUMBER(4,0) NOT NULL, 
	TFIT_NUM VARCHAR2(30) NOT NULL, 
	TFIT_TRA NUMBER(4,0) NOT NULL, 
	TFIT_OCU NUMBER(4,0) NOT NULL, 
	TFIT_COD VARCHAR2(20) NOT NULL, 
	TFIT_VALOR LONG RAW NOT NULL, 
	TFIT_MIME VARCHAR2(80), 
	TFIT_NOMFICH VARCHAR2(50), 
	CONSTRAINT PK_E_TFIT PRIMARY KEY (TFIT_MUN, TFIT_PRO, TFIT_EJE, TFIT_NUM, TFIT_TRA, TFIT_OCU, TFIT_COD), 
	CONSTRAINT E_TFIT_FK1 FOREIGN KEY (TFIT_MUN, TFIT_PRO, TFIT_EJE, TFIT_NUM, TFIT_TRA, TFIT_OCU)
		REFERENCES E_CRO (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU) ON DELETE CASCADE
);


CREATE TABLE E_TNUT (	
	TNUT_MUN NUMBER(3,0) NOT NULL, 
	TNUT_PRO VARCHAR2(5) NOT NULL, 
	TNUT_EJE NUMBER(4,0) NOT NULL, 
	TNUT_NUM VARCHAR2(30) NOT NULL, 
	TNUT_TRA NUMBER(4,0) NOT NULL, 
	TNUT_OCU NUMBER(4,0) NOT NULL, 
	TNUT_COD VARCHAR2(20) NOT NULL, 
	TNUT_VALOR NUMBER(10,2) NOT NULL, 
	CONSTRAINT PK_E_TNUT PRIMARY KEY (TNUT_MUN, TNUT_PRO, TNUT_EJE, TNUT_NUM, TNUT_TRA, TNUT_OCU, TNUT_COD), 
	CONSTRAINT E_TNUT_FK1 FOREIGN KEY (TNUT_MUN, TNUT_PRO, TNUT_EJE, TNUT_NUM, TNUT_TRA, TNUT_OCU)
		REFERENCES E_CRO (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU) ON DELETE CASCADE
);


CREATE TABLE E_TTLT (	
	TTLT_MUN NUMBER(3,0) NOT NULL, 
	TTLT_PRO VARCHAR2(5) NOT NULL, 
	TTLT_EJE NUMBER(4,0) NOT NULL, 
	TTLT_NUM VARCHAR2(30) NOT NULL, 
	TTLT_TRA NUMBER(4,0) NOT NULL, 
	TTLT_OCU NUMBER(4,0) NOT NULL, 
	TTLT_COD VARCHAR2(20) NOT NULL, 
	TTLT_VALOR CLOB NOT NULL, 
	CONSTRAINT PK_E_TTLT PRIMARY KEY (TTLT_MUN, TTLT_PRO, TTLT_EJE, TTLT_NUM, TTLT_TRA, TTLT_OCU, TTLT_COD), 
	CONSTRAINT E_TTLT_FK1 FOREIGN KEY (TTLT_MUN, TTLT_PRO, TTLT_EJE, TTLT_NUM, TTLT_TRA, TTLT_OCU)
	REFERENCES E_CRO (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU) ON DELETE CASCADE
);   


CREATE TABLE E_TXTT (	
	TXTT_MUN NUMBER(3,0) NOT NULL, 
	TXTT_PRO VARCHAR2(5) NOT NULL, 
	TXTT_EJE NUMBER(4,0) NOT NULL, 
	TXTT_NUM VARCHAR2(30) NOT NULL, 
	TXTT_TRA NUMBER(4,0) NOT NULL, 
	TXTT_OCU NUMBER(4,0) NOT NULL, 
	TXTT_COD VARCHAR2(20) NOT NULL, 
	TXTT_VALOR VARCHAR2(4000) NOT NULL, 
	CONSTRAINT PK_E_TXTT PRIMARY KEY (TXTT_MUN, TXTT_PRO, TXTT_EJE, TXTT_NUM, TXTT_TRA, TXTT_OCU, TXTT_COD), 
	CONSTRAINT E_TXTT_FK1 FOREIGN KEY (TXTT_MUN, TXTT_PRO, TXTT_EJE, TXTT_NUM, TXTT_TRA, TXTT_OCU)
		REFERENCES E_CRO (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU) ON DELETE CASCADE
);


CREATE TABLE E_DES (	
	DES_COD VARCHAR2(4) NOT NULL, 
	DES_NOM VARCHAR2(75) NOT NULL, 
	CONSTRAINT E_DES_PK PRIMARY KEY (DES_COD)
);

COMMENT ON TABLE E_DES IS 'Campo suplementario tipo DESPLEGABLE a nivel de procedimiento y/o trámite.';
COMMENT ON COLUMN E_DES.DES_COD IS 'Código del desplegable';
COMMENT ON COLUMN E_DES.DES_NOM IS 'Descripción del desplegable';


CREATE TABLE E_DES_VAL (	
	DES_COD VARCHAR2(8) NOT NULL, 
	DES_VAL_COD VARCHAR2(8) NOT NULL, 
	DES_NOM VARCHAR2(100) NOT NULL, 
	CONSTRAINT E_DES_VAL_PK PRIMARY KEY (DES_COD, DES_VAL_COD)
);


CREATE TABLE E_DOT_FIR (	
	DOT_MUN NUMBER(3,0) NOT NULL, 
	DOT_PRO VARCHAR2(5) NOT NULL, 
	DOT_TRA NUMBER(4,0) NOT NULL, 
	DOT_COD NUMBER(3,0) NOT NULL, 
	USU_COD NUMBER(4,0) NOT NULL, 
	CONSTRAINT E_DOT_PK PRIMARY KEY (DOT_MUN, DOT_PRO, DOT_TRA, DOT_COD, USU_COD)
);


CREATE TABLE E_DPML (
	DPML_MUN NUMBER(3,0) NOT NULL, 
	DPML_PRO VARCHAR2(5) NOT NULL, 
	DPML_DOP NUMBER(3,0) NOT NULL, 
	DPML_CMP VARCHAR2(3) NOT NULL, 
	DPML_LENG VARCHAR2(1) NOT NULL, 
	DPML_VALOR VARCHAR2(255), 
	PRIMARY KEY (DPML_MUN, DPML_PRO, DPML_DOP, DPML_CMP, DPML_LENG)
);
 
COMMENT ON TABLE E_DPML IS 'Multilenguaje de los Documentos de Procedimiento.';
COMMENT ON COLUMN E_DPML.DPML_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_DPML.DPML_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_DPML.DPML_DOP IS 'Código del Documento';
COMMENT ON COLUMN E_DPML.DPML_CMP IS 'Codigo del Campo Multilenguaje. (NOM = Nombre ) (CON = Condición)';
COMMENT ON COLUMN E_DPML.DPML_LENG IS 'Idioma del contenido del Campo';
COMMENT ON COLUMN E_DPML.DPML_VALOR IS 'Valor del contenido del campo';

 
CREATE TABLE E_ENP (	
	ENP_MUN NUMBER(3,0) NOT NULL, 
	ENP_PRO VARCHAR2(5) NOT NULL, 
	ENP_COD NUMBER(3,0) NOT NULL, 
	ENP_DES VARCHAR2(1000) NOT NULL, 
	ENP_URL VARCHAR2(1000) NOT NULL, 
	ENP_EST NUMBER(1,0) NOT NULL, 
	CONSTRAINT PK_E_ENP PRIMARY KEY (ENP_MUN, ENP_PRO, ENP_COD)
);
 

CREATE TABLE E_ENT (	
	ENT_MUN NUMBER(3,0) NOT NULL, 
	ENT_PRO VARCHAR2(5) NOT NULL, 
	ENT_TRA NUMBER(4,0) NOT NULL, 
	ENT_COD NUMBER(3,0) NOT NULL, 
	ENT_CTR NUMBER(4,0) NOT NULL, 
	ENT_EST CHAR(1) NOT NULL, 
	ENT_TIPO CHAR(1), 
	ENT_EXP VARCHAR2(2000), 
	ENT_DOC  NUMBER(6, 0),
	PRIMARY KEY (ENT_MUN, ENT_PRO, ENT_TRA, ENT_COD));

COMMENT ON TABLE E_ENT IS 'Condiciones de Entrada del trámite';
COMMENT ON COLUMN E_ENT.ENT_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_ENT.ENT_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_ENT.ENT_TRA IS 'Codigo de Tramite';
COMMENT ON COLUMN E_ENT.ENT_COD IS 'Codigo de la condicion de Entrada';
COMMENT ON COLUMN E_ENT.ENT_CTR IS 'Codigo del tramite';
COMMENT ON COLUMN E_ENT.ENT_EST IS 'Estado del tramite (Iniciado-I / Finalizado-F / No Iniciado-O / Desfavorable-N / Favorble-S)';
COMMENT ON COLUMN E_ENT.ENT_TIPO IS 'Tipo de trámite (E-expresion / T - tramite)';
COMMENT ON COLUMN E_ENT.ENT_EXP IS 'Expresión si el tipo=E';


CREATE TABLE E_EXP (	
	EXP_PRO VARCHAR2(5) NOT NULL, 
	EXP_EJE NUMBER(4,0) NOT NULL, 
	EXP_NUM VARCHAR2(30) NOT NULL, 
	EXP_FEI DATE NOT NULL, 
	EXP_FEF DATE, 
	EXP_EST NUMBER(2,0) NOT NULL, 
	EXP_MUN NUMBER(3,0) NOT NULL, 
	EXP_USU NUMBER(4,0), 
	EXP_UOR NUMBER(5,0), 
	EXP_PEND DATE, 
	EXP_TRA NUMBER(4,0), 
	EXP_TOCU NUMBER(4,0), 
	EXP_LOC VARCHAR2(405), 
	EXP_CLO NUMBER(12,0), 
	EXP_OBS VARCHAR2(1000), 
	EXP_ASU VARCHAR2(2000), 
	EXP_REF VARCHAR2(20), 
	EXP_IMP  VARCHAR(1) DEFAULT 'N',	
	PRIMARY KEY (EXP_MUN, EXP_EJE, EXP_NUM)
);

COMMENT ON TABLE E_EXP IS 'EXPEDIENTES';
COMMENT ON COLUMN E_EXP.EXP_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_EXP.EXP_EJE IS 'Año de creación del Expediente';
COMMENT ON COLUMN E_EXP.EXP_NUM IS 'Numero de expediente';
COMMENT ON COLUMN E_EXP.EXP_FEI IS 'Fecha de Inicio';
COMMENT ON COLUMN E_EXP.EXP_FEF IS 'Fecha Fin';
COMMENT ON COLUMN E_EXP.EXP_EST IS 'Estado en que se encuentra el expediente';
COMMENT ON COLUMN E_EXP.EXP_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_EXP.EXP_PEND IS 'Para saber si el expediente no tiene ningun tramite abierto';
COMMENT ON COLUMN E_EXP.EXP_LOC IS 'Localización';
COMMENT ON COLUMN E_EXP.EXP_CLO IS 'Código de localización';
COMMENT ON COLUMN E_EXP.EXP_OBS IS 'Observaciones';
COMMENT ON COLUMN E_EXP.EXP_ASU IS 'Asunto';
CREATE INDEX IX_EXPED ON E_EXP (EXP_MUN, EXP_PRO, EXP_PEND);
 

CREATE TABLE E_TDE (	
	TDE_MUN NUMBER(3,0) NOT NULL, 
	TDE_EJE NUMBER(4,0) NOT NULL, 
	TDE_NUM VARCHAR2(30) NOT NULL, 
	TDE_COD VARCHAR2(20) NOT NULL, 
	TDE_VALOR VARCHAR2(4000) NOT NULL, 
	CONSTRAINT PK_E_TDE PRIMARY KEY (TDE_MUN, TDE_EJE, TDE_NUM, TDE_COD), 
	CONSTRAINT E_TDE_FK1 FOREIGN KEY (TDE_MUN, TDE_EJE, TDE_NUM)
		REFERENCES E_EXP (EXP_MUN, EXP_EJE, EXP_NUM) ON DELETE CASCADE
);


CREATE TABLE E_TFE (	
	TFE_MUN NUMBER(3,0) NOT NULL, 
	TFE_EJE NUMBER(4,0) NOT NULL, 
	TFE_NUM VARCHAR2(30) NOT NULL, 
	TFE_COD VARCHAR2(20) NOT NULL, 
	TFE_VALOR DATE NOT NULL, 
	TFE_FEC_VENCIMIENTO DATE,
    PLAZO_ACTIVADO NUMBER(1,0),
	CONSTRAINT PK_E_TFE PRIMARY KEY (TFE_MUN, TFE_EJE, TFE_NUM, TFE_COD), 
	CONSTRAINT E_TFE_FK1 FOREIGN KEY (TFE_MUN, TFE_EJE, TFE_NUM)
		REFERENCES E_EXP (EXP_MUN, EXP_EJE, EXP_NUM) ON DELETE CASCADE
);


CREATE TABLE E_TFI (	
	TFI_MUN NUMBER(3,0) NOT NULL, 
	TFI_EJE NUMBER(4,0) NOT NULL, 
	TFI_NUM VARCHAR2(30) NOT NULL, 
	TFI_COD VARCHAR2(20) NOT NULL, 
	TFI_VALOR LONG RAW NOT NULL, 
	TFI_MIME VARCHAR2(80), 
	TFI_NOMFICH VARCHAR2(50), 
	CONSTRAINT PK_E_TFI PRIMARY KEY (TFI_MUN, TFI_EJE, TFI_NUM, TFI_COD), 
	CONSTRAINT E_TFI_FK1 FOREIGN KEY (TFI_MUN, TFI_EJE, TFI_NUM)
		REFERENCES E_EXP (EXP_MUN, EXP_EJE, EXP_NUM) ON DELETE CASCADE
);


CREATE TABLE E_TNU (	
	TNU_MUN NUMBER(3,0) NOT NULL, 
	TNU_EJE NUMBER(4,0) NOT NULL, 
	TNU_NUM VARCHAR2(30) NOT NULL, 
	TNU_COD VARCHAR2(20) NOT NULL, 
	TNU_VALOR NUMBER(10,2) NOT NULL, 
	CONSTRAINT PK_E_TNU PRIMARY KEY (TNU_MUN, TNU_EJE, TNU_NUM, TNU_COD), 
	CONSTRAINT E_TNU_FK1 FOREIGN KEY (TNU_MUN, TNU_EJE, TNU_NUM)
		REFERENCES E_EXP (EXP_MUN, EXP_EJE, EXP_NUM) ON DELETE CASCADE
);


CREATE TABLE E_TXT (	
	TXT_MUN NUMBER(3,0) NOT NULL, 
	TXT_EJE NUMBER(4,0) NOT NULL, 
	TXT_NUM VARCHAR2(30) NOT NULL, 
	TXT_COD VARCHAR2(20) NOT NULL, 
	TXT_VALOR VARCHAR2(4000) NOT NULL, 
	CONSTRAINT PK_E_TXT PRIMARY KEY (TXT_MUN, TXT_EJE, TXT_NUM, TXT_COD), 
	CONSTRAINT E_TXT_FK1 FOREIGN KEY (TXT_MUN, TXT_EJE, TXT_NUM)
		REFERENCES E_EXP (EXP_MUN, EXP_EJE, EXP_NUM) ON DELETE CASCADE
);


CREATE TABLE E_TTL (
	TTL_MUN NUMBER(3,0) NOT NULL, 
	TTL_EJE NUMBER(4,0) NOT NULL, 
	TTL_NUM VARCHAR2(30) NOT NULL, 
	TTL_COD VARCHAR2(20) NOT NULL, 
	TTL_VALOR CLOB NOT NULL, 
	CONSTRAINT PK_E_TTL PRIMARY KEY (TTL_MUN, TTL_EJE, TTL_NUM, TTL_COD), 
	CONSTRAINT E_TTL_FK1 FOREIGN KEY (TTL_MUN, TTL_EJE, TTL_NUM)
		REFERENCES E_EXP (EXP_MUN, EXP_EJE, EXP_NUM) ON DELETE CASCADE
);
 

CREATE TABLE E_EXR (	
	EXR_DEP NUMBER(3,0) DEFAULT 1 NOT NULL, 
	EXR_UOR NUMBER(5,0) NOT NULL, 
	EXR_TIP VARCHAR2(1) NOT NULL, 
	EXR_EJR NUMBER(4,0) NOT NULL, 
	EXR_NRE NUMBER(6,0) NOT NULL, 
	EXR_ORI NUMBER(1,0) NOT NULL, 
	EXR_EJE NUMBER(4,0) NOT NULL, 
	EXR_NUM VARCHAR2(30) NOT NULL, 
	EXR_TOP VARCHAR2(1) NOT NULL, 
	EXR_MUN NUMBER(3,0) NOT NULL, 
	EXR_PRO VARCHAR2(5) NOT NULL,
	EXR_ORIGEN VARCHAR2(50 BYTE) DEFAULT 'FLEXIA',	
	PRIMARY KEY (EXR_MUN, EXR_EJE, EXR_NUM, EXR_DEP, EXR_UOR, EXR_TIP, EXR_EJR, EXR_NRE)
);
COMMENT ON COLUMN E_EXR.EXR_ORIGEN IS 'Origen del expediente relacionado';
COMMENT ON TABLE E_EXR IS 'RELACION EXPEDIENTE REGISTRO';
COMMENT ON COLUMN E_EXR.EXR_DEP IS 'Codigo del departamento';
COMMENT ON COLUMN E_EXR.EXR_UOR IS 'Codigo de la Unidad de Registro';
COMMENT ON COLUMN E_EXR.EXR_TIP IS 'Tipo de Anotacion (E/S)';
COMMENT ON COLUMN E_EXR.EXR_EJR IS 'Año de la anotacion (Ejercicio)';
COMMENT ON COLUMN E_EXR.EXR_NRE IS 'Numero de registro asignado a la anotacion';
COMMENT ON COLUMN E_EXR.EXR_ORI IS 'Origen de la relación (Unidad de Registro / Unidad Tramitadora)';
COMMENT ON COLUMN E_EXR.EXR_EJE IS 'Año de creación del Expediente';
COMMENT ON COLUMN E_EXR.EXR_NUM IS 'Numero de expediente';
COMMENT ON COLUMN E_EXR.EXR_TOP IS 'Tipo de Operación';
COMMENT ON COLUMN E_EXR.EXR_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_EXR.EXR_PRO IS 'Codigo del Procedimiento';


CREATE TABLE E_MAS (	
	MAS_COD NUMBER(2,0) NOT NULL, 
	MAS_DES VARCHAR2(1000) NOT NULL, 
	CONSTRAINT PK_E_MAS PRIMARY KEY (MAS_COD)
);
 

CREATE TABLE E_NEX (	
	NEX_PRO VARCHAR2(5) NOT NULL, 
	NEX_EJE NUMBER(4,0) NOT NULL, 
	NEX_NUM VARCHAR2(6) NOT NULL, 
	NEX_MUN NUMBER(3,0) NOT NULL, 
	NEX_UOR NUMBER(5,0) NOT NULL, 
	PRIMARY KEY (NEX_MUN, NEX_EJE, NEX_PRO, NEX_UOR)
);
 
COMMENT ON TABLE E_NEX IS 'NUMERO EXPEDIENTE';
COMMENT ON COLUMN E_NEX.NEX_PRO IS 'Codigo de Procedimiento';
COMMENT ON COLUMN E_NEX.NEX_EJE IS 'Ejercicio';
COMMENT ON COLUMN E_NEX.NEX_NUM IS 'Ultimo numero de expediente asignado';
COMMENT ON COLUMN E_NEX.NEX_MUN IS 'Codigo de Municipio';
COMMENT ON COLUMN E_NEX.NEX_UOR IS 'Codigo Unidad Organizativa';


CREATE TABLE E_PCA(	
	PCA_MUN NUMBER(3,0) NOT NULL, 
	PCA_PRO VARCHAR2(5) NOT NULL, 
	PCA_COD VARCHAR2(20) NOT NULL, 
	PCA_DES VARCHAR2(2000) NOT NULL, 
	PCA_PLT NUMBER(3,0) NOT NULL, 
	PCA_TDA VARCHAR2(2) NOT NULL, 
	PCA_TAM NUMBER(4,0) NOT NULL, 
	PCA_MAS VARCHAR2(1000), 
	PCA_OBL NUMBER(1,0) NOT NULL, 
	PCA_NOR NUMBER(3,0) NOT NULL, 
	PCA_ROT VARCHAR2(2000) NOT NULL, 
	PCA_ACTIVO VARCHAR2(2), 
	PCA_DESPLEGABLE VARCHAR2(4), 
	PCA_OCULTO VARCHAR2(2) DEFAULT 'NO',
	PCA_BLOQ VARCHAR2(2) DEFAULT 'NO',
	PLAZO_AVISO NUMBER(10,0) DEFAULT NULL,
    PERIODO_PLAZO VARCHAR2(2 BYTE) DEFAULT NULL,
	CONSTRAINT PK_E_PCA PRIMARY KEY (PCA_MUN, PCA_PRO, PCA_COD));


COMMENT ON COLUMN E_PCA.PCA_BLOQ IS 'bloqueado';
COMMENT ON COLUMN E_PCA.PCA_ACTIVO IS 'Indica si se realiza un borrado lógico (SI = activo; NO = Borrado Lógico)';
COMMENT ON COLUMN E_PCA.PCA_OCULTO IS 'Oculto';
COMMENT ON TABLE E_PCA IS 'Campos de los procedimientos)';


CREATE TABLE E_EXREXT (	
	EXREXT_UOR NUMBER(5,0) NOT NULL, 
	EXREXT_TIP VARCHAR2(1) NOT NULL, 
	EXREXT_EJR NUMBER(4,0) NOT NULL, 
	EXREXT_NRE NUMBER(19,0) NOT NULL, 
	EXREXT_MUN NUMBER(3,0) NOT NULL, 
	EXREXT_NUM VARCHAR2(30) NOT NULL, 
	EXREXT_ORI NUMBER(1,0) NOT NULL, 
	EXREXT_TOP VARCHAR2(1) NOT NULL, 
	EXREXT_SER VARCHAR2(10) NOT NULL, 
	EXREXT_PRO VARCHAR2(5) NOT NULL, 
	EXREXT_FECALTA DATE,
	PRIMARY KEY (EXREXT_UOR, EXREXT_TIP, EXREXT_EJR, EXREXT_NRE, EXREXT_MUN, EXREXT_NUM, EXREXT_SER));
 

CREATE TABLE E_PLT (	
	PLT_COD NUMBER(3,0) NOT NULL, 
	PLT_DES VARCHAR2(100) NOT NULL, 
	PLT_URL VARCHAR2(500) NOT NULL, 
	CONSTRAINT PK_E_PLT PRIMARY KEY (PLT_COD)
);


CREATE TABLE E_PRO (	
	PRO_COD VARCHAR2(5) NOT NULL, 
	PRO_PLZ NUMBER(2,0), 
	PRO_SIL NUMBER(1,0), 
	PRO_TIP NUMBER(3,0), 
	PRO_DIN NUMBER(1,0) NOT NULL, 
	PRO_UND VARCHAR2(1), 
	PRO_INI NUMBER(1,0) NOT NULL, 
	PRO_EST NUMBER(1,0) NOT NULL, 
	PRO_TIN NUMBER(1,0) NOT NULL, 
	PRO_MUN NUMBER(3,0) NOT NULL, 
	PRO_FLH DATE, 
	PRO_FLD DATE NOT NULL, 
	PRO_ARE NUMBER(3,0) NOT NULL, 
	PRO_LOC NUMBER(1,0), 
	PRO_FBA DATE, 
	PRO_TRI NUMBER(4,0), 
	PRO_DES VARCHAR2(75) DEFAULT ' ' NOT NULL, 
	PRO_PORCENTAJE NUMBER(3,0) NULL,
	PRO_RESTRINGIDO NUMBER(1,0) DEFAULT 0 NOT NULL,
	PLUGIN_ANULACION_NOMBRE VARCHAR2(200BYTE),
	PLUGIN_ANULACION_IMPLCLASS VARCHAR2(2000BYTE),
	PRIMARY KEY (PRO_MUN, PRO_COD)
);


COMMENT ON TABLE E_PRO IS 'Tabla de Procedimientos';
COMMENT ON COLUMN E_PRO.PRO_COD IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_PRO.PRO_PLZ IS 'Plazo máximo de Notificación';
COMMENT ON COLUMN E_PRO.PRO_SIL IS 'Tipo de Silencio ( 1 - Positivo / 0 - Negativo/ 2 - No Procede)';
COMMENT ON COLUMN E_PRO.PRO_TIP IS 'Identificador Unico de Tipo de Procedimiento';
COMMENT ON COLUMN E_PRO.PRO_DIN IS 'Disponible en Internet';
COMMENT ON COLUMN E_PRO.PRO_UND IS 'Unidad de Notificacion (Dia,Mes Año)';
COMMENT ON COLUMN E_PRO.PRO_INI IS 'Tipo Inicio (1-Oficio, 2-Instancia de Parte)';
COMMENT ON COLUMN E_PRO.PRO_EST IS 'Estado Procedimiento (0-Provisional/1-Definitivo)';
COMMENT ON COLUMN E_PRO.PRO_TIN IS 'Tramitacion Internet (s/n)';
COMMENT ON COLUMN E_PRO.PRO_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_PRO.PRO_FLH IS 'Fecha Vigencia Hasta';
COMMENT ON COLUMN E_PRO.PRO_FLD IS 'Fecha Vigencia Desde';
COMMENT ON COLUMN E_PRO.PRO_ARE IS 'Código área';
COMMENT ON COLUMN E_PRO.PRO_LOC IS 'Posee localización(0-SI,1-NO)';
COMMENT ON COLUMN E_PRO.PRO_FBA IS 'Fecha de baja del procedimiento';
COMMENT ON COLUMN E_PRO.PRO_TRI IS 'Código del trámite de inicio';


CREATE TABLE E_PML (	
	PML_MUN NUMBER(3,0) NOT NULL, 
	PML_COD VARCHAR2(5) NOT NULL, 
	PML_CMP VARCHAR2(3) NOT NULL, 
	PML_LENG VARCHAR2(1) NOT NULL, 
	PML_VALOR VARCHAR2(255), 
	PRIMARY KEY (PML_MUN, PML_COD, PML_CMP, PML_LENG),
	CONSTRAINT E_PML_FK1 FOREIGN KEY (PML_MUN, PML_COD)
		REFERENCES  E_PRO (PRO_MUN, PRO_COD)
);
 
COMMENT ON TABLE E_PML IS 'MultiLenguaje de Procedimiento';
COMMENT ON COLUMN E_PML.PML_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_PML.PML_COD IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_PML.PML_CMP IS 'Codigo del Campo Multilenguaje. (NOM = Nombre), (NOR = Normativa)';
COMMENT ON COLUMN E_PML.PML_LENG IS 'Idioma del Campo';
COMMENT ON COLUMN E_PML.PML_VALOR IS 'Contenido del Campo';


CREATE TABLE E_PUI (	
	PUI_MUN NUMBER(3,0) NOT NULL, 
	PUI_PRO VARCHAR2(5) NOT NULL, 
	PUI_COD NUMBER(5,0) NOT NULL, 
	CONSTRAINT PK_E_PUI PRIMARY KEY (PUI_MUN, PUI_PRO, PUI_COD)
);

COMMENT ON TABLE E_PUI IS 'Unidades de Inicio del Procedimiento';
COMMENT ON COLUMN E_PUI.PUI_MUN IS 'Código del municipio';
COMMENT ON COLUMN E_PUI.PUI_PRO IS 'Código del procedimiento';
COMMENT ON COLUMN E_PUI.PUI_COD IS 'Código de la Unidad de Inicio';


CREATE TABLE E_REX (	
	REX_MUN NUMBER(3,0) NOT NULL, 
	REX_EJE NUMBER(4,0) NOT NULL, 
	REX_NUM VARCHAR2(30) NOT NULL, 
	REX_MUNR NUMBER(3,0) NOT NULL, 
	REX_EJER NUMBER(4,0) NOT NULL, 
	REX_NUMR VARCHAR2(30) NOT NULL, 
	CONSTRAINT PK_E_REX PRIMARY KEY (REX_MUN, REX_EJE, REX_NUM, REX_MUNR, REX_EJER, REX_NUMR)
);

COMMENT ON TABLE E_REX IS 'TABLA EXPEDIENTES RELACIONADOS';
COMMENT ON COLUMN E_REX.REX_MUN IS 'Municipio del Expendiente';
COMMENT ON COLUMN E_REX.REX_EJE IS 'Ejercicio del Expediente';
COMMENT ON COLUMN E_REX.REX_NUM IS 'Numero de Expediente';
COMMENT ON COLUMN E_REX.REX_MUNR IS 'Municipio del Expendiente Relacionado';
COMMENT ON COLUMN E_REX.REX_EJER IS 'Ejercicio del Expediente Relacionado';
COMMENT ON COLUMN E_REX.REX_NUMR IS 'Numero de Expediente Relacionado';


CREATE TABLE E_ROL (	
	ROL_MUN NUMBER(3,0) NOT NULL, 
	ROL_PRO VARCHAR2(5) NOT NULL, 
	ROL_COD NUMBER(2,0) NOT NULL, 
	ROL_DES VARCHAR2(1000) NOT NULL, 
	ROL_PDE NUMBER(1,0) NOT NULL, 
	ROL_PCW NUMBER(1,0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_E_ROL PRIMARY KEY (ROL_MUN, ROL_PRO, ROL_COD)
);


CREATE TABLE E_RTDM (	
	RTDM_TDA NUMBER(2,0) NOT NULL, 
	RTDM_MAS NUMBER(2,0) NOT NULL, 
	CONSTRAINT PK_E_RTDM PRIMARY KEY (RTDM_TDA, RTDM_MAS)
); 


CREATE TABLE E_RTDP (
	RTDP_TDA NUMBER(2,0) NOT NULL, 
	RTDP_PLT NUMBER(3,0) NOT NULL, 
	CONSTRAINT PK_E_RTDP PRIMARY KEY (RTDP_TDA, RTDP_PLT)
);


CREATE TABLE E_SAL (	
	SAL_MUN NUMBER(3,0) NOT NULL, 
	SAL_PRO VARCHAR2(5) NOT NULL, 
	SAL_TRA NUMBER(4,0) NOT NULL, 
	SAL_TAC CHAR(1), 
	SAL_TAA CHAR(1), 
	SAL_TAN CHAR(1), 
	SAL_OBL NUMBER(1,0), 
	SAL_OBLD NUMBER(1,0), 
	PRIMARY KEY (SAL_MUN, SAL_PRO, SAL_TRA)
);

COMMENT ON TABLE E_SAL IS 'Condiciones de Salida del trámite';
COMMENT ON COLUMN E_SAL.SAL_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_SAL.SAL_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_SAL.SAL_TRA IS 'Codigo de Tramite';
COMMENT ON COLUMN E_SAL.SAL_TAC IS 'Tipo Accion (Finalizar Expediente, Iniciar Tramites,Pregunta o Resolucion)';
COMMENT ON COLUMN E_SAL.SAL_TAA IS 'Tipo accion Afirmativa (Finalizar Expediente, Iniciar Tramites)';
COMMENT ON COLUMN E_SAL.SAL_TAN IS 'Tipo Accion Negativa (Finalizar Expediente, Iniciar Tramites)';
COMMENT ON COLUMN E_SAL.SAL_OBL IS '(0-Opcional,1-Obligatorio,2-Excluyente)';
COMMENT ON COLUMN E_SAL.SAL_OBLD IS '(0-Opcional,1-Obligatorio,2-Excluyente) Caso Desfavorable';


CREATE TABLE E_SML (	
	SML_TRA NUMBER(4,0) NOT NULL, 
	SML_MUN NUMBER(3,0) NOT NULL, 
	SML_PRO VARCHAR2(5) NOT NULL, 
	SML_CMP VARCHAR2(3) NOT NULL, 
	SML_LENG VARCHAR2(1) NOT NULL, 
	SML_VALOR VARCHAR2(255), 
	PRIMARY KEY (SML_TRA, SML_MUN, SML_PRO, SML_CMP, SML_LENG)
);

COMMENT ON TABLE E_SML IS 'MultiLenguaje de Condiciones de Salida';
COMMENT ON COLUMN E_SML.SML_TRA IS 'Codigo de Tramite';
COMMENT ON COLUMN E_SML.SML_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_SML.SML_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_SML.SML_CMP IS 'Codigo del campo MultiLenguaje (TXT = Texto de la Pregunta)';
COMMENT ON COLUMN E_SML.SML_LENG IS 'Idioma del campo';
COMMENT ON COLUMN E_SML.SML_VALOR IS 'Contenido del Campo';


CREATE TABLE E_TCA (	
	TCA_MUN NUMBER(3,0) NOT NULL, 
	TCA_PRO VARCHAR2(5) NOT NULL, 
	TCA_TRA NUMBER(4,0) NOT NULL, 
	TCA_COD VARCHAR2(20) NOT NULL, 
	TCA_DES VARCHAR2(2000) NOT NULL, 
	TCA_PLT NUMBER(3,0) NOT NULL, 
	TCA_TDA VARCHAR2(2) NOT NULL, 
	TCA_TAM NUMBER(4,0) NOT NULL, 
	TCA_MAS VARCHAR2(1000), 
	TCA_OBL NUMBER(1,0) NOT NULL, 
	TCA_NOR NUMBER(2,0) NOT NULL, 
	TCA_ROT VARCHAR2(2000) NOT NULL, 
	TCA_VIS CHAR(1) NOT NULL, 
	TCA_ACTIVO VARCHAR2(2), 
	TCA_DESPLEGABLE VARCHAR2(4), 
	TCA_OCULTO VARCHAR2(2) DEFAULT 'NO',
	TCA_BLOQ Varchar2(2) DEFAULT 'NO',
	PLAZO_AVISO NUMBER(10,0) DEFAULT NULL,
    PERIODO_PLAZO VARCHAR2(2 BYTE) DEFAULT NULL,
	CONSTRAINT PK_E_TCA PRIMARY KEY (TCA_MUN, TCA_PRO, TCA_TRA, TCA_COD)
);


COMMENT ON COLUMN E_TCA.TCA_BLOQ IS 'Bloqueado';
COMMENT ON COLUMN E_TCA.TCA_ACTIVO IS 'Indica si se realiza un borrado lógico (SI = activo; NO = Borrado Lógico)';
COMMENT ON COLUMN E_TCA.TCA_OCULTO IS 'Oculto';
COMMENT ON TABLE E_TCA IS 'Campos de los trámites';


CREATE TABLE E_TDO (	
	TDO_COD NUMBER(3,0) NOT NULL, 
	PRIMARY KEY (TDO_COD)
);

COMMENT ON TABLE E_TDO IS 'Tipo de Documento';
COMMENT ON COLUMN E_TDO.TDO_COD IS 'Codigo del Tipo de Documento';


CREATE TABLE E_DOT (	
	DOT_MUN NUMBER(3,0) NOT NULL, 
	DOT_PRO VARCHAR2(5) NOT NULL, 
	DOT_TRA NUMBER(4,0) NOT NULL, 
	DOT_COD NUMBER(3,0) NOT NULL, 
	DOT_TDO NUMBER(3,0), 
	DOT_VIS CHAR(1) NOT NULL, 
	DOT_FRM CHAR(1), 
	DOT_PLT NUMBER(6,0), 
	DOT_ACTIVO VARCHAR2(2), 
	PRIMARY KEY (DOT_MUN, DOT_PRO, DOT_TRA, DOT_COD), 
	FOREIGN KEY (DOT_TDO)
		REFERENCES E_TDO (TDO_COD)
);

COMMENT ON TABLE E_DOT IS 'Definición de Documentos';
COMMENT ON COLUMN E_DOT.DOT_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_DOT.DOT_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_DOT.DOT_TRA IS 'Codigo de Tramite';
COMMENT ON COLUMN E_DOT.DOT_COD IS 'Codigo del Documento';
COMMENT ON COLUMN E_DOT.DOT_TDO IS 'Codigo del Tipo de Documento';
COMMENT ON COLUMN E_DOT.DOT_VIS IS 'Visible Internet (s/n)';
COMMENT ON COLUMN E_DOT.DOT_FRM IS 'Firma Digital (s/n)';
COMMENT ON COLUMN E_DOT.DOT_PLT IS 'Código de la plantilla';
COMMENT ON COLUMN E_DOT.DOT_ACTIVO IS 'Indica si se realiza un borrado lógico (SI = activo; NO = Borrado Lógico)';


CREATE TABLE E_DOP (	
	DOP_MUN NUMBER(3,0) NOT NULL, 
	DOP_PRO VARCHAR2(5) NOT NULL, 
	DOP_COD NUMBER(6,0) NOT NULL, 
	DOP_OBL CHAR(1), 
	DOP_TDO NUMBER(3,0), 
	PRIMARY KEY (DOP_MUN, DOP_PRO, DOP_COD), 
	FOREIGN KEY (DOP_TDO)
		REFERENCES E_TDO (TDO_COD)
);

COMMENT ON COLUMN E_DOP.DOP_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_DOP.DOP_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_DOP.DOP_COD IS 'Codigo del Documento';
COMMENT ON COLUMN E_DOP.DOP_OBL IS 'Obligatorio (S/N)';
COMMENT ON COLUMN E_DOP.DOP_TDO IS 'Codigo del Tipo de Documento';
COMMENT ON TABLE E_DOP  IS 'Documentos de Procedimiento';


CREATE TABLE E_DOE (	
	DOE_MUN NUMBER(3,0) NOT NULL, 
	DOE_EJE NUMBER(4,0) NOT NULL, 
	DOE_NUM VARCHAR2(30) NOT NULL, 
	DOE_PRO VARCHAR2(5) NOT NULL, 
	DOE_COD NUMBER(3,0) NOT NULL, 
	DOE_FEC DATE, 
	PRIMARY KEY (DOE_MUN, DOE_EJE, DOE_NUM, DOE_PRO, DOE_COD), 
	FOREIGN KEY (DOE_MUN, DOE_PRO, DOE_COD)
		REFERENCES  E_DOP (DOP_MUN, DOP_PRO, DOP_COD)
);

COMMENT ON COLUMN E_DOE.DOE_MUN IS 'Municipio del expediente y del documento';
COMMENT ON COLUMN E_DOE.DOE_EJE IS 'Año de creacion del expediente';
COMMENT ON COLUMN E_DOE.DOE_NUM IS 'Numero de expediente';
COMMENT ON COLUMN E_DOE.DOE_PRO IS 'Codigo del procedimiento del documento';
COMMENT ON COLUMN E_DOE.DOE_COD IS 'Codigo del documento';
COMMENT ON COLUMN E_DOE.DOE_FEC IS 'Fecha de entrega del documento (sistema)';
COMMENT ON TABLE E_DOE  IS 'RELACION DOCUMENTOS ENTREGADOS Y EXPEDIENTES';
 

CREATE TABLE E_TDML (
	TDML_COD NUMBER(3,0) NOT NULL, 
	TDML_CMP VARCHAR2(3) NOT NULL, 
	TDML_LENG VARCHAR2(1) NOT NULL, 
	TDML_VALOR VARCHAR2(255), 
	PRIMARY KEY (TDML_COD, TDML_CMP, TDML_LENG), 
	FOREIGN KEY (TDML_COD)
		REFERENCES  E_TDO (TDO_COD)
);

COMMENT ON COLUMN  E_TDML.TDML_COD IS 'Codigo del Tipo de Documento';
COMMENT ON COLUMN  E_TDML.TDML_CMP IS 'Codigo del campo multilenguaje. (NOM = Nombre)';
COMMENT ON COLUMN  E_TDML.TDML_LENG IS 'Idioma del campo';
COMMENT ON COLUMN  E_TDML.TDML_VALOR IS 'Contenido del campo';
COMMENT ON TABLE  E_TDML  IS 'MultiLenguaje para Tipos de Documento';


CREATE TABLE E_TEN (
	TEN_MUN NUMBER(3,0) NOT NULL, 
	TEN_PRO VARCHAR2(5) NOT NULL, 
	TEN_TRA NUMBER(4,0) NOT NULL, 
	TEN_COD NUMBER(3,0) NOT NULL, 
	TEN_DES VARCHAR2(1000) NOT NULL, 
	TEN_URL VARCHAR2(1000) NOT NULL, 
	TEN_EST NUMBER(1,0) NOT NULL, 
	CONSTRAINT PK_E_TEN PRIMARY KEY (TEN_MUN, TEN_PRO, TEN_TRA, TEN_COD)
);


CREATE TABLE E_EXT (	
	EXT_MUN NUMBER(3,0) NOT NULL, 
	EXT_EJE NUMBER(4,0) NOT NULL, 
	EXT_NUM VARCHAR2(30) NOT NULL, 
	EXT_TER NUMBER(12,0) NOT NULL, 
	EXT_NVR NUMBER(3,0) NOT NULL, 
	EXT_DOT NUMBER(12,0) NOT NULL, 
	EXT_ROL NUMBER(2,0) NOT NULL, 
	EXT_PRO VARCHAR2(5) NOT NULL, 
	MOSTRAR NUMBER(1,0) DEFAULT 0 NOT NULL,
	EXT_NOTIFICACION_ELECTRONICA VARCHAR2(1 BYTE),
	CONSTRAINT PK_E_EXT PRIMARY KEY (EXT_MUN, EXT_EJE, EXT_NUM, EXT_TER, EXT_NVR), 
	FOREIGN KEY (EXT_TER, EXT_NVR)
		REFERENCES T_HTE (HTE_TER, HTE_NVR)
);
 
COMMENT ON COLUMN E_EXT.EXT_MUN IS 'Municipio del Expediente';
COMMENT ON COLUMN E_EXT.EXT_EJE IS 'Ejercicio del Expediente';
COMMENT ON COLUMN E_EXT.EXT_NUM IS 'Numero del Expediente';
COMMENT ON COLUMN E_EXT.EXT_TER IS 'Codigo del Tercero asociado al Expediente';
COMMENT ON COLUMN E_EXT.EXT_NVR IS 'Numero de Version del Tercero';
COMMENT ON COLUMN E_EXT.EXT_DOT IS 'Domicilio del Tercero';
COMMENT ON COLUMN E_EXT.EXT_ROL IS 'Rol del Tercero';
COMMENT ON COLUMN E_EXT.EXT_PRO IS 'Codigo procedimiento';
COMMENT ON TABLE  E_EXT  IS 'RELACION EXPEDIENTES Y TERCEROS';


CREATE TABLE E_TML (	
	TML_MUN NUMBER(3,0) NOT NULL, 
	TML_PRO VARCHAR2(5) NOT NULL, 
	TML_TRA NUMBER(4,0) NOT NULL, 
	TML_CMP VARCHAR2(3) NOT NULL, 
	TML_LENG VARCHAR2(1) NOT NULL, 
	TML_VALOR VARCHAR2(4000), 
	PRIMARY KEY (TML_MUN, TML_PRO, TML_TRA, TML_CMP, TML_LENG)
);

COMMENT ON TABLE E_TML IS 'MultiLenguaje de Trámite';
COMMENT ON COLUMN E_TML.TML_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_TML.TML_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_TML.TML_TRA IS 'Codigo de Tramite';
COMMENT ON COLUMN E_TML.TML_CMP IS 'Codigo del Campo MultiLenguaje. (NOM=Nombre)';
COMMENT ON COLUMN E_TML.TML_LENG IS 'Idioma del Campo';
COMMENT ON COLUMN E_TML.TML_VALOR IS 'Contenido del Campo';



CREATE TABLE DEPTO_NOTIFICACION_SNE (CODIGO VARCHAR2(25BYTE) NOT NULL,
	DESCRIPCION VARCHAR2(200BYTE) NOT NULL,
	PRIMARY KEY(CODIGO));


CREATE TABLE E_TRA (	
	TRA_PRO VARCHAR2(5) NOT NULL, 
	TRA_COD NUMBER(4,0) NOT NULL, 
	TRA_PLZ NUMBER(3,0), 
	TRA_UND CHAR(1), 
	TRA_OCU NUMBER(2,0), 
	TRA_MUN NUMBER(3,0) NOT NULL, 
	TRA_VIS NUMBER(1,0) NOT NULL, 
	TRA_UIN NUMBER(5,0), 
	TRA_UTR NUMBER(5,0), 
	TRA_CLS NUMBER(3,0), 
	TRA_ARE NUMBER(3,0), 
	TRA_FBA DATE, 
	TRA_COU NUMBER(4,0), 
	TRA_PRE NUMBER(1,0) NOT NULL, 
	TRA_INS VARCHAR2(4000), 
	TRA_WS_COD VARCHAR2(30), 
	TRA_WS_OB CHAR(1), 
	TRA_UTI CHAR(1) DEFAULT 'N', 
	TRA_UTF CHAR(1) DEFAULT 'N', 
	TRA_USI CHAR(1) DEFAULT 'N', 
	TRA_USF CHAR(1) DEFAULT 'N', 
	TRA_INI CHAR(1) DEFAULT 'N', 
	TRA_INF CHAR(1) DEFAULT 'N', 
	TRA_WST_COD VARCHAR2(30), 
	TRA_WST_OB CHAR(1), 
	TRA_WSR_COD VARCHAR2(30), 
	TRA_WSR_OB CHAR(1), 
	TRA_PRR VARCHAR2(5), 
	TRA_CAR NUMBER(3,0),
	TRA_FIN NUMBER(3,0) DEFAULT 0,
	TRA_GENERARPLZ NUMBER(1) DEFAULT 0 NOT NULL,
	TRA_NOTCERCAFP NUMBER(1) DEFAULT(0),
	TRA_NOTFUERADP NUMBER(1) DEFAULT(0),
	TRA_TIPNOTCFP NUMBER(1) DEFAULT(1),
	TRA_TIPNOTFDP NUMBER(1) DEFAULT(1), 
	TRA_NOTIFICACION_ELECTRONICA VARCHAR2(1 BYTE) DEFAULT '0',
	TRA_COD_TIPO_NOTIFICACION NUMBER(4),
	TRA_TIPO_USUARIO_FIRMA VARCHAR2(1 BYTE),
	TRA_OTRO_COD_USUARIO_FIRMA NUMBER(4),
	TRA_TRAM_EXT_PLUGIN VARCHAR2(200 BYTE),
	TRA_TRAM_ID_ENLACE_PLUGIN VARCHAR2(200 BYTE),
	TRA_TRAM_EXT_URL VARCHAR2(2000 BYTE),
	TRA_TRAM_EXT_IMPLCLASS VARCHAR2(2000 BYTE),
	TRA_NOTIF_ELECT_OBLIG NUMBER(1,0),
	TRA_NOTIF_FIRMA_CERT_ORG NUMBER(1,0),
	COD_DEPTO_NOTIFICACION VARCHAR2(25BYTE) DEFAULT NULL,
	CONSTRAINT E_TRA_PK PRIMARY KEY (TRA_MUN, TRA_PRO, TRA_COD),
	CONSTRAINT FK_DEPTO_NOTIF FOREIGN KEY(COD_DEPTO_NOTIFICACION) REFERENCES DEPTO_NOTIFICACION_SNE(CODIGO));


COMMENT ON TABLE E_TRA IS 'Tabla de Trámites';
COMMENT ON COLUMN E_TRA.TRA_PRO IS 'Codigo del Procedimiento';
COMMENT ON COLUMN E_TRA.TRA_COD IS 'Codigo de Tramite';
COMMENT ON COLUMN E_TRA.TRA_PLZ IS 'Plazo Resolución Trámite';
COMMENT ON COLUMN E_TRA.TRA_UND IS 'Unidades del Plazo (Dia,Mes,Año)';
COMMENT ON COLUMN E_TRA.TRA_OCU IS 'Nº de Veces que se puede ejecutar un tramite';
COMMENT ON COLUMN E_TRA.TRA_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN E_TRA.TRA_VIS IS 'Visible en Internet';
COMMENT ON COLUMN E_TRA.TRA_UIN IS 'Codigo unidad Inicio Manual (-99999=La del expediente, -99998=Cualquiera, null=sin unidad, otra unidad=uor_cod)';
COMMENT ON COLUMN E_TRA.TRA_UTR IS 'Codigo unidad tramitadora. 4=La del expediente, 3=La que lo inicia, 2=La del tramite anterior, 1=Cualquiera, 0=Otras (una de las indicadas en E_TRA_UTR)';
COMMENT ON COLUMN E_TRA.TRA_CLS IS 'Clasificación del tramite';
COMMENT ON COLUMN E_TRA.TRA_ARE IS 'Código área';
COMMENT ON COLUMN E_TRA.TRA_FBA IS 'Fecha de Baja';
COMMENT ON COLUMN E_TRA.TRA_COU IS 'Codigo tramite usuario(el que se visualiza)';
COMMENT ON COLUMN E_TRA.TRA_PRE IS 'Trámite tipo pregunta';
COMMENT ON COLUMN E_TRA.TRA_INS IS 'Instrucciones del tramite';
COMMENT ON COLUMN E_TRA.TRA_NOTCERCAFP IS '1 NOTIFICAR CERCA FN DE PLAZO';
COMMENT ON COLUMN E_TRA.TRA_NOTFUERADP IS '1 NOTIFICAR SOBREPASA FIN  DE PLAZO';
COMMENT ON COLUMN E_TRA.TRA_TIPNOTCFP IS '1 SE ENVIA(NOTIFICACION CERCA FIN PLAZO) UNA VEZ 2 SE ENVIA DIARIAMENTE';
COMMENT ON COLUMN E_TRA.TRA_TIPNOTFDP IS '1 SE ENVIA(NOTIFICACION SOBREPASA FIN PLAZO) UNA VEZ 2 SE ENVIA DIARIAMENTE';
COMMENT ON COLUMN E_TRA.TRA_TIPO_USUARIO_FIRMA IS 'Tipo del usuario que firma';
COMMENT ON COLUMN E_TRA.TRA_OTRO_COD_USUARIO_FIRMA IS 'Código del usuario al que va dirigida la firma de la notificación';
COMMENT ON COLUMN E_TRA.TRA_COD_TIPO_NOTIFICACION IS 'Código del tipo de notificación elegido';
COMMENT ON COLUMN E_TRA.TRA_NOTIFICACION_ELECTRONICA IS 'Indica si para el tramite se activan las notificaciones electronicas (0-no, 1-si)';
COMMENT ON COLUMN E_TRA.TRA_NOTIF_ELECT_OBLIG IS 'Indicador de si la notificacion electronica es obligatoria';
COMMENT ON COLUMN E_TRA.TRA_NOTIF_FIRMA_CERT_ORG IS 'Indicador de si se va a firmar la notificación con certificado de organismo';

CREATE TABLE E_TRA_UTR (	
	TRA_MUN NUMBER(3,0) NOT NULL, 
	TRA_PRO VARCHAR2(5 BYTE) NOT NULL, 
	TRA_COD NUMBER(4,0) NOT NULL,
	TRA_UTR_COD NUMBER(5,0) NOT NULL,
	CONSTRAINT E_TRA_UTR_PK PRIMARY KEY (TRA_MUN, TRA_PRO, TRA_COD, TRA_UTR_COD),
	CONSTRAINT E_TRA_UTR_FK_TRA FOREIGN KEY (TRA_MUN, TRA_PRO, TRA_COD)
		REFERENCES E_TRA (TRA_MUN, TRA_PRO, TRA_COD),
	CONSTRAINT E_TRA_UTR_FK_UTR FOREIGN KEY (TRA_UTR_COD)
		REFERENCES A_UOR (UOR_COD)
);


CREATE TABLE E_TRP (	
	TRP_MUN NUMBER(3,0) NOT NULL, 
	TRP_EJE NUMBER(4,0) NOT NULL, 
	TRP_EXP VARCHAR2(30) NOT NULL, 
	TRP_PRO VARCHAR2(5) NOT NULL, 
	TRP_TRA NUMBER(4,0) NOT NULL, 
	TRP_ENT NUMBER(3,0) NOT NULL, 
	TRP_CTR NUMBER(4,0) NOT NULL, 
	TRP_EST CHAR(1) NOT NULL, 
	TRP_FEF DATE, 
	TRP_UOR NUMBER(5,0), 
	TRP_FEI DATE NOT NULL, 
	CONSTRAINT PK_E_TRP PRIMARY KEY (TRP_MUN, TRP_EJE, TRP_EXP, TRP_PRO, TRP_TRA, TRP_ENT, TRP_CTR)
);

COMMENT ON COLUMN E_TRP.TRP_EJE IS 'Ejercicio del expediente';
COMMENT ON COLUMN E_TRP.TRP_EXP IS 'Número expediente';
COMMENT ON COLUMN E_TRP.TRP_PRO IS 'Código procedimiento';
COMMENT ON COLUMN E_TRP.TRP_TRA IS 'Código trámite';
COMMENT ON COLUMN E_TRP.TRP_ENT IS 'Código de condición de entrada';
COMMENT ON COLUMN E_TRP.TRP_CTR IS 'Trámite de la condición';
COMMENT ON COLUMN E_TRP.TRP_EST IS 'Estado del trámite';
COMMENT ON COLUMN E_TRP.TRP_MUN IS 'Código del municipio';


CREATE TABLE E_DOC_EXT(
	DOC_EXT_NUM  VARCHAR2(30) NOT NULL,
	DOC_EXT_MUN  NUMBER(3) NOT NULL,
	DOC_EXT_EJE  NUMBER(4) NOT NULL,
	DOC_EXT_COD  NUMBER(10) NOT NULL,
	DOC_EXT_NOM  VARCHAR2(255),
	DOC_EXT_FAL  DATE,
	DOC_EXT_FIL  LONG RAW,
	DOC_EXT_TIP  VARCHAR2(80),
	DOC_EXT_EXT  VARCHAR2(30) NOT NULL,
	CONSTRAINT E_DOC_EXT_PK PRIMARY KEY (DOC_EXT_COD),
	FOREIGN KEY (DOC_EXT_MUN, DOC_EXT_EJE, DOC_EXT_NUM)
 		REFERENCES E_EXP (EXP_MUN, EXP_EJE, EXP_NUM)
);

COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_NUM IS 'Numero del Expediente';
COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_MUN IS 'Municipio del Expediente';
COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_EJE IS 'Ejercicio del Expediente';
COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_COD IS 'Codigo del documento externo';
COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_NOM IS 'Nombre del documento externo';
COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_FAL IS 'Fecha de alta del documento externo';
COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_FIL IS 'Contenido del documento externo';
COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_TIP IS 'Mimetipe del documento externo';
COMMENT ON COLUMN E_DOC_EXT.DOC_EXT_EXT IS 'Extension del documento externo';

CREATE TABLE E_DOCS_PRESENTADOS 
(
 PRESENTADO_COD NUMBER(15, 0) NOT NULL, 
 PRESENTADO_MUN NUMBER(3, 0) NOT NULL, 
 PRESENTADO_EJE NUMBER(4, 0) NOT NULL, 
 PRESENTADO_NUM VARCHAR2(30 BYTE) NOT NULL, 
 PRESENTADO_PRO VARCHAR2(5 BYTE) NOT NULL, 
 PRESENTADO_COD_DOC NUMBER(6, 0) NOT NULL, 
 PRESENTADO_CONTENIDO LONG RAW, 
 PRESENTADO_TIPO VARCHAR2(80 BYTE) NOT NULL, 
 PRESENTADO_EXTENSION VARCHAR2(30 BYTE) NOT NULL, 
 PRESENTADO_ORIGEN VARCHAR2(50 BYTE) NOT NULL, 
 PRESENTADO_FECHA_ALTA TIMESTAMP(6) NOT NULL, 
 PRESENTADO_NOMBRE VARCHAR2(255 BYTE) NOT NULL, 
 PRESENTADO_COD_USU_ALTA NUMBER(4, 0) NOT NULL, 
 PRESENTADO_COD_USU_MOD NUMBER(4, 0), 
 PRESENTADO_FECHA_MOD TIMESTAMP(6), 
 CONSTRAINT E_DOCS_PRESENTADOS_PK PRIMARY KEY(PRESENTADO_COD),  
CONSTRAINT E_DOCS_PRESENTADOS_E_CRO_FK1 FOREIGN KEY(PRESENTADO_MUN,PRESENTADO_EJE,PRESENTADO_NUM,PRESENTADO_PRO,PRESENTADO_COD_DOC)
REFERENCES E_DOE(DOE_MUN,DOE_EJE,DOE_NUM,DOE_PRO,DOE_COD) ON DELETE CASCADE ENABLE);

COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_COD IS 'Código identificador del documento';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_MUN IS 'Código de municipio';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_EJE IS 'Ejercicio';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_NUM IS 'Número de expediente';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_PRO IS 'Código de procedimiento';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_COD_DOC IS 'Código del documento de procedimiento';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_CONTENIDO IS 'Contenido del documento';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_TIPO IS 'Tipo MIME del documento';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_EXTENSION IS 'Extensión del documento';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_ORIGEN IS 'Origen del documento';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_FECHA_ALTA IS 'Fecha de alta del adjunto';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_NOMBRE IS 'Nombre del fichero';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_COD_USU_ALTA IS 'Código del usuario que da de alta el adjunto';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_COD_USU_MOD IS 'Código del usuario que ha modificado el contenido del adjunto';
COMMENT ON COLUMN E_DOCS_PRESENTADOS.PRESENTADO_FECHA_MOD IS 'Fecha de modificación del contenido del adjunto';
commit;

CREATE TABLE E_DOC_EXT_PORTAFIRMAS(
	PORTAFIRMAS_COD NUMBER(5, 0) NOT NULL,
	PORTAFIRMAS_EJERCICIO NUMBER(4, 0) NOT NULL,	
	PORTAFIRMAS_FECALTA DATE NOT NULL,
	PORTAFIRMAS_CONTENIDO BLOB NULL,
	PORTAFIRMAS_FIRMA BLOB NULL,
	PORTAFIRMAS_ESTADOFIRMA CHAR(1 BYTE) NOT NULL,
	PORTAFIRMAS_DESCRIPCION VARCHAR2(255) NOT NULL,
	PORTAFIRMAS_EXTENSION VARCHAR2(50) NOT NULL,
	PORTAFIRMAS_TIPOMIME VARCHAR2(80) NOT NULL,
	PORTAFIRMAS_DOCUMENTO_USUARIO VARCHAR2(50) NOT NULL,
	PORTAFIRMAS_CODUSU_MOD NUMBER(4, 0) NULL,
	PORTAFIRMAS_FEC_MODIFICACION DATE NULL,
	PORTAFIRMAS_OBSERVACIONES VARCHAR2(225) NULL,
	CONSTRAINT PK_E_DOC_EXT_PORTAFIRMAS PRIMARY KEY (PORTAFIRMAS_COD));
COMMIT;

-- GESTIÓN DE EXPEDIENTES (RELACIONES).

CREATE TABLE G_CRD (	
	CRD_MUN NUMBER(3,0) NOT NULL, 
	CRD_PRO VARCHAR2(5) NOT NULL, 
	CRD_EJE NUMBER(4,0) NOT NULL, 
	CRD_NUM VARCHAR2(30) NOT NULL, 
	CRD_TRA NUMBER(4,0) NOT NULL, 
	CRD_OCU NUMBER(4,0) NOT NULL, 
	CRD_NUD NUMBER(4,0) NOT NULL, 
	CRD_FAL DATE NOT NULL, 
	CRD_FMO DATE, 
	CRD_USC NUMBER(4,0) NOT NULL, 
	CRD_USM NUMBER(4,0), 
	CRD_FIL LONG RAW NOT NULL, 
	CRD_DES VARCHAR2(255) NOT NULL, 
	CRD_DOT NUMBER(2,0) NOT NULL, 
	CRD_FIR_EST CHAR(1), 
	CRD_EXP_FD VARCHAR2(30), 
	CRD_DOC_FD VARCHAR2(30), 
	CRD_FIR_FD NUMBER(1,0), 
	CRD_EXP CHAR(1), 
	CONSTRAINT PK_G_CRD PRIMARY KEY (CRD_MUN, CRD_PRO, CRD_EJE, CRD_NUM, CRD_TRA, CRD_OCU, CRD_NUD)
 );
 
 
CREATE TABLE G_CRO (	
	CRO_PRO VARCHAR2(5) NOT NULL, 
	CRO_EJE NUMBER(4,0) NOT NULL, 
	CRO_NUM VARCHAR2(30) NOT NULL, 
	CRO_TRA NUMBER(4,0) NOT NULL, 
	CRO_FEI DATE NOT NULL, 
	CRO_FEF DATE, 
	CRO_USU NUMBER(4,0) NOT NULL, 
	CRO_UTR NUMBER(5,0) NOT NULL, 
	CRO_MUN NUMBER(3,0) NOT NULL, 
	CRO_OCU NUMBER(4,0) NOT NULL, 
	CRO_FIP DATE, 
	CRO_FLI DATE, 
	CRO_FFP DATE, 
	CRO_RES NUMBER, 
	CRO_OBS VARCHAR2(1000), 
	CRO_USF NUMBER(4,0), 
	PRIMARY KEY (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU)
);

COMMENT ON TABLE G_CRO IS 'CRONOGRAMA DE LAS RELACIONES';
COMMENT ON COLUMN G_CRO.CRO_PRO IS 'Código del procedimiento';
COMMENT ON COLUMN G_CRO.CRO_EJE IS 'Año de creación de la relacion';
COMMENT ON COLUMN G_CRO.CRO_NUM IS 'Numero de relacion';
COMMENT ON COLUMN G_CRO.CRO_TRA IS 'Codigo de Tramite';
COMMENT ON COLUMN G_CRO.CRO_FEI IS 'Fecha de Inicio del tramite';
COMMENT ON COLUMN G_CRO.CRO_FEF IS 'Fecha fin del tramite';
COMMENT ON COLUMN G_CRO.CRO_USU IS 'Usuario que ejecuta el tramite';
COMMENT ON COLUMN G_CRO.CRO_UTR IS 'Unidad que realizo el tramite';
COMMENT ON COLUMN G_CRO.CRO_MUN IS 'Municipio del Procedimiento';
COMMENT ON COLUMN G_CRO.CRO_FIP IS 'Fecha Inicio Plazo';
COMMENT ON COLUMN G_CRO.CRO_FLI IS 'Fecha Limite';
COMMENT ON COLUMN G_CRO.CRO_FFP IS 'Fecha fin plazo';
COMMENT ON COLUMN G_CRO.CRO_RES IS 'Respuesta';
COMMENT ON COLUMN G_CRO.CRO_OBS IS 'Observaciones';
COMMENT ON COLUMN G_CRO.CRO_USF IS 'Usuario que finaliza';


CREATE TABLE G_EXP (	
	REL_MUN NUMBER(3,0) NOT NULL, 
	REL_PRO VARCHAR2(5) NOT NULL, 
	REL_EJE NUMBER(4,0) NOT NULL, 
	REL_NUM VARCHAR2(30) NOT NULL, 
	EXP_MUN NUMBER(3,0) NOT NULL, 
	EXP_PRO VARCHAR2(5) NOT NULL, 
	EXP_EJE NUMBER(4,0) NOT NULL, 
	EXP_NUM VARCHAR2(30) NOT NULL, 
	CONSTRAINT PK_E_REE PRIMARY KEY (REL_MUN, REL_PRO, REL_EJE, REL_NUM, EXP_MUN, EXP_PRO, EXP_EJE, EXP_NUM)
);

COMMENT ON TABLE G_EXP IS 'EXPEDIENTES DE LAS RELACIONES';
COMMENT ON COLUMN G_EXP.REL_MUN IS 'Municipio de la relación';
COMMENT ON COLUMN G_EXP.REL_PRO IS 'Procedimiento de la relación';
COMMENT ON COLUMN G_EXP.REL_EJE IS 'Ejercicio de la relación';
COMMENT ON COLUMN G_EXP.REL_NUM IS 'Número de la relación';
COMMENT ON COLUMN G_EXP.EXP_MUN IS 'Municipio del expediente';
COMMENT ON COLUMN G_EXP.EXP_PRO IS 'Procedimiento del expediente';
COMMENT ON COLUMN G_EXP.EXP_EJE IS 'Ejercicio del expediente';
COMMENT ON COLUMN G_EXP.EXP_NUM IS 'Número del expediente';


CREATE TABLE G_NEX (
	NEX_MUN NUMBER(3,0) NOT NULL, 
	NEX_PRO VARCHAR2(5) NOT NULL, 
	NEX_EJE NUMBER(4,0) NOT NULL, 
	NEX_NUM VARCHAR2(30) NOT NULL, 
	PRIMARY KEY (NEX_MUN, NEX_EJE, NEX_PRO)
);
 
COMMENT ON TABLE G_NEX IS 'CONTADOR DE LAS RELACIONES';
COMMENT ON COLUMN G_NEX.NEX_MUN IS 'Codigo de Municipio';
COMMENT ON COLUMN G_NEX.NEX_PRO IS 'Codigo de Procedimiento';
COMMENT ON COLUMN G_NEX.NEX_EJE IS 'Ejercicio';
COMMENT ON COLUMN G_NEX.NEX_NUM IS 'Ultimo numero de expediente asignado';


CREATE TABLE G_REL (	
	REL_MUN NUMBER(3,0) NOT NULL, 
	REL_PRO VARCHAR2(5) NOT NULL, 
	REL_EJE NUMBER(4,0) NOT NULL, 
	REL_NUM VARCHAR2(30) NOT NULL, 
	REL_EST NUMBER(2,0) NOT NULL, 
	REL_FIN DATE NOT NULL, 
	REL_USI NUMBER(4,0), 
	REL_UOI VARCHAR2(6), 
	REL_FFI DATE, 
	REL_USF NUMBER(4,0), 
	REL_UOF VARCHAR2(6), 
	REL_TRI NUMBER(4,0), 
	REL_TRAI NUMBER(4,0), 
	REL_ASU VARCHAR2(2000), 
	REL_OBS VARCHAR2(1000), 
	PRIMARY KEY (REL_MUN, REL_EJE, REL_NUM)
);

COMMENT ON TABLE G_REL IS 'Relaciones de los expedientes';
COMMENT ON COLUMN G_REL.REL_MUN IS 'Municipio';
COMMENT ON COLUMN G_REL.REL_PRO IS 'Procedimiento';
COMMENT ON COLUMN G_REL.REL_EJE IS 'Año';
COMMENT ON COLUMN G_REL.REL_NUM IS 'Número';
COMMENT ON COLUMN G_REL.REL_EST IS '0 (abierta)';
COMMENT ON COLUMN G_REL.REL_FIN IS 'Fecha de inicio';
COMMENT ON COLUMN G_REL.REL_USI IS 'Usuario que crea la relación';
COMMENT ON COLUMN G_REL.REL_UOI IS 'UOR que crea la relación';
COMMENT ON COLUMN G_REL.REL_FFI IS 'Fecha de finalización';
COMMENT ON COLUMN G_REL.REL_USF IS 'Usuario que finaliza la relación';
COMMENT ON COLUMN G_REL.REL_UOF IS 'UOR que cierra la relación';
COMMENT ON COLUMN G_REL.REL_TRI IS 'Trámite en que se crea la relación';
COMMENT ON COLUMN G_REL.REL_TRAI IS 'Trámite actual de la relación';
COMMENT ON COLUMN G_REL.REL_ASU IS 'Asunto';
COMMENT ON COLUMN G_REL.REL_OBS IS 'Observaciones';


CREATE TABLE G_CRD_FIR (	
	CRD_MUN NUMBER(3,0) NOT NULL, 
	CRD_PRO VARCHAR2(5) NOT NULL, 
	CRD_EJE NUMBER(4,0) NOT NULL, 
	CRD_NUM VARCHAR2(30) NOT NULL, 
	CRD_TRA NUMBER(4,0) NOT NULL, 
	CRD_OCU NUMBER(4,0) NOT NULL, 
	CRD_NUD NUMBER(4,0) NOT NULL, 
	USU_COD NUMBER(4,0) NOT NULL, 
	FIR_EST CHAR(1) DEFAULT 'O' NOT NULL, 
	FIR LONG RAW, 
	FX_FIRMA DATE, 
	OBSERV VARCHAR2(160), 
	USU_FIR NUMBER(4,0),
	CONSTRAINT G_CRD_FIR_PK PRIMARY KEY (CRD_MUN, CRD_PRO, CRD_EJE, CRD_NUM, CRD_TRA, CRD_OCU, CRD_NUD, USU_COD),
	CONSTRAINT G_CRDFIR_CRD FOREIGN KEY (CRD_MUN, CRD_PRO, CRD_EJE, CRD_NUM, CRD_TRA, CRD_OCU, CRD_NUD)
		REFERENCES G_CRD (CRD_MUN, CRD_PRO, CRD_EJE, CRD_NUM, CRD_TRA, CRD_OCU, CRD_NUD) ON DELETE CASCADE);
		
		
		
-- GESTIÓN DE INFORMES

CREATE TABLE CONDICION_CRITERIOS_INFORMES (	
	COD_CONDICION NUMBER(3,0) NOT NULL, 
	DESC_CONDICION VARCHAR2(50), 
	CONSTRAINT PK_CCI PRIMARY KEY (COD_CONDICION)
);


CREATE TABLE INF_ORIGEN (	
	ID_ORIGEN NUMBER(3,0) NOT NULL, 
	DESC_ORIGEN VARCHAR2(100) NOT NULL, 
	TAB_ORIGEN VARCHAR2(100) NOT NULL, 
	MOD_ORIGEN VARCHAR2(50), 
	CONSTRAINT INF_ORIGEN_PK PRIMARY KEY (ID_ORIGEN)
);


CREATE TABLE PLANT_INFORMES (	
	PLANT_PLANTILLA NUMBER NOT NULL, 
	PLANT_TITULO VARCHAR2(100) NOT NULL, 
	PLANT_PROCED VARCHAR2(5), 
	PLANT_FECHA DATE NOT NULL, 
	PLANT_PUBLICADO NUMBER, 
	PLANT_PAPEL VARCHAR2(50), 
	PLANT_ORIENTACION VARCHAR2(50), 
	PLANT_MARGEN_SUP NUMBER(5,0), 
	PLANT_MARGEN_INF NUMBER(5,0), 
	PLANT_MARGEN_IZQ NUMBER(5,0), 
	PLANT_MARGEN_DER NUMBER(5,0), 
	PLANT_ORIGEN NUMBER(3,0), 
	CONSTRAINT PK_PI PRIMARY KEY (PLANT_PLANTILLA), 
	CONSTRAINT PLANT_INFORMES_INF_ORIGEN_FK1 FOREIGN KEY (PLANT_ORIGEN)
		REFERENCES INF_ORIGEN (ID_ORIGEN)
);


CREATE TABLE TIPO_CAMPOS_INFORMES (	
	TIPO_CAMPOS_INFORMES_ID NUMBER(*,0) NOT NULL, 
	TIPO_CAMPOS_INFORMES_DESC VARCHAR2(100) NOT NULL, 
	TIPO_CAMPOS_INFORMES_TIT VARCHAR2(100), 
	CONSTRAINT PK_TCI PRIMARY KEY (TIPO_CAMPOS_INFORMES_ID)
);


CREATE TABLE PLANT_INF_CAB_I (	
	PLANT_INF_CAB_I_PLANTILLA NUMBER(*,0) NOT NULL, 
	PLANT_INF_CAB_I_IDCAMPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_CAB_I_POSX NUMBER(*,0), 
	PLANT_INF_CAB_I_POSY NUMBER(*,0), 
	PLANT_INF_CAB_I_TIPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_CAB_I_INF VARCHAR2(200), 
	CONSTRAINT PLANT_INF_CAB_I_PK PRIMARY KEY (PLANT_INF_CAB_I_PLANTILLA, PLANT_INF_CAB_I_IDCAMPO), 
	CONSTRAINT PICITCI_FK FOREIGN KEY (PLANT_INF_CAB_I_TIPO)
		REFERENCES TIPO_CAMPOS_INFORMES (TIPO_CAMPOS_INFORMES_ID) ON DELETE CASCADE, 
	CONSTRAINT PLANT_INF_CAB_I_FK FOREIGN KEY (PLANT_INF_CAB_I_PLANTILLA)
		REFERENCES  PLANT_INFORMES (PLANT_PLANTILLA) ON DELETE CASCADE
);


CREATE TABLE PLANT_INF_CAB_P (	
	PLANT_INF_CAB_P_PLANTILLA NUMBER(*,0) NOT NULL, 
	PLANT_INF_CAB_P_IDCAMPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_CAB_P_POSX NUMBER(*,0), 
	PLANT_INF_CAB_P_POSY NUMBER(*,0), 
	PLANT_INF_CAB_P_TIPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_CAB_P_INF VARCHAR2(200), 
	CONSTRAINT PLANT_INF_CAB_P_PK PRIMARY KEY (PLANT_INF_CAB_P_PLANTILLA, PLANT_INF_CAB_P_IDCAMPO), 
	CONSTRAINT PICPTCI_FK FOREIGN KEY (PLANT_INF_CAB_P_TIPO)
		REFERENCES  TIPO_CAMPOS_INFORMES (TIPO_CAMPOS_INFORMES_ID) ON DELETE CASCADE, 
	CONSTRAINT PLANT_INF_CAB_P_FK FOREIGN KEY (PLANT_INF_CAB_P_PLANTILLA)
		REFERENCES  PLANT_INFORMES (PLANT_PLANTILLA) ON DELETE CASCADE
);


CREATE TABLE PLANT_INF_COL (	
	PLANT_INF_COL_PLANTILLA NUMBER(*,0) NOT NULL, 
	PLANT_INF_COL_IDCAMPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_COL_POSX NUMBER(*,0), 
	PLANT_INF_COL_POSY NUMBER(*,0), 
	PLANT_INF_COL_TITULO VARCHAR2(100) NOT NULL, 
	PLANT_INF_COL_ORIGEN VARCHAR2(50) NOT NULL, 
	PLANT_INF_COL_ALIGN VARCHAR2(10), 
	PLANT_INF_COL_TABLA VARCHAR2(50), 
	PLANT_INF_COL_ANCHO NUMBER(*,0), 
	PLANT_INF_COL_ELIPSIS NUMBER(*,0),
	PLANT_INF_COL_ORD NUMBER(1,0),
	CONSTRAINT PLANT_INF_COL_PK PRIMARY KEY (PLANT_INF_COL_PLANTILLA, PLANT_INF_COL_IDCAMPO), 
	CONSTRAINT PLANT_INF_COL_FK1 FOREIGN KEY (PLANT_INF_COL_PLANTILLA)
		REFERENCES  PLANT_INFORMES (PLANT_PLANTILLA) ON DELETE CASCADE
);


CREATE TABLE PLANT_INF_CRI (	
	PLANT_INF_CRI_PLANTILLA NUMBER(*,0) NOT NULL, 
	PLANT_INF_CRI_ID NUMBER(*,0) NOT NULL, 
	PLANT_INF_CRI_CAMPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_CRI_CONDICION NUMBER(*,0), 
	PLANT_INF_CRI_VALOR1 VARCHAR2(50), 
	PLANT_INF_CRI_VALOR2 VARCHAR2(50), 
	PLANT_INF_CRI_TITULO VARCHAR2(100), 
	PLANT_INF_CRI_ORIGEN VARCHAR2(50), 
	PLANT_INF_CRI_TABLA VARCHAR2(50), 
	CONSTRAINT PLANT_INF_CRI_PK PRIMARY KEY (PLANT_INF_CRI_PLANTILLA, PLANT_INF_CRI_CAMPO, PLANT_INF_CRI_ID), 
	CONSTRAINT PLANT_INF_CRI_PLANT_INFOR_FK1 FOREIGN KEY (PLANT_INF_CRI_PLANTILLA)
		REFERENCES PLANT_INFORMES (PLANT_PLANTILLA) ON DELETE CASCADE, 
	CONSTRAINT PICCCI_FK FOREIGN KEY (PLANT_INF_CRI_CONDICION)
		REFERENCES CONDICION_CRITERIOS_INFORMES (COD_CONDICION) ON DELETE CASCADE
);


CREATE TABLE PLANT_INF_PIE_I (	
	PLANT_INF_PIE_I_PLANTILLA NUMBER(5,0) NOT NULL, 
	PLANT_INF_PIE_I_IDCAMPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_PIE_I_TIPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_PIE_I_INF VARCHAR2(200), 
	CONSTRAINT PLANT_INF_PIE_I_PK PRIMARY KEY (PLANT_INF_PIE_I_PLANTILLA, PLANT_INF_PIE_I_IDCAMPO), 
	CONSTRAINT PIPITCI_FK FOREIGN KEY (PLANT_INF_PIE_I_TIPO)
		REFERENCES TIPO_CAMPOS_INFORMES (TIPO_CAMPOS_INFORMES_ID) ON DELETE CASCADE, 
	CONSTRAINT PLANT_INF_PIE_I_FK FOREIGN KEY (PLANT_INF_PIE_I_PLANTILLA)
		REFERENCES PLANT_INFORMES (PLANT_PLANTILLA) ON DELETE CASCADE
);


CREATE TABLE PLANT_INF_PIE_P (	
	PLANT_INF_PIE_P_PLANTILLA NUMBER(5,0) NOT NULL, 
	PLANT_INF_PIE_P_IDCAMPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_PIE_P_TIPO NUMBER(*,0) NOT NULL, 
	PLANT_INF_PIE_P_INF VARCHAR2(200), 
	CONSTRAINT PLANT_INF_PIE_P_PK PRIMARY KEY (PLANT_INF_PIE_P_PLANTILLA, PLANT_INF_PIE_P_IDCAMPO), 
	CONSTRAINT PIPPTCIS_FK FOREIGN KEY (PLANT_INF_PIE_P_TIPO)
		REFERENCES TIPO_CAMPOS_INFORMES (TIPO_CAMPOS_INFORMES_ID) ON DELETE CASCADE, 
	CONSTRAINT PLANT_INF_PIE_P_FK FOREIGN KEY (PLANT_INF_PIE_P_PLANTILLA)
		REFERENCES PLANT_INFORMES (PLANT_PLANTILLA) ON DELETE CASCADE
);


CREATE TABLE TIPO_CAMPOS_MODULOS_INFORMES (	
	TIPO_CAMPO_INF_MOD_CAMPO NUMBER(*,0) NOT NULL, 
	TIPO_CAMPO_INF_MOD_MODULO NUMBER(*,0) NOT NULL, 
	CONSTRAINT TCMI_PK PRIMARY KEY (TIPO_CAMPO_INF_MOD_CAMPO, TIPO_CAMPO_INF_MOD_MODULO)
);


CREATE TABLE TIPO_MODULOS_INFORMES (	
	TIPO_MODULOS_ID NUMBER(*,0) NOT NULL, 
	TIPO_MODULOS_NOMBRE VARCHAR2(15) NOT NULL, 
	CONSTRAINT TMI_PK PRIMARY KEY (TIPO_MODULOS_ID)
);


CREATE TABLE INF_SOLICITUD (	
	COD_SOLICITUD NUMBER(*,0) NOT NULL, 
	COD_USU NUMBER(*,0) NOT NULL, 
	COD_PLANTILLA NUMBER(*,0) NOT NULL, 
	DESCRIPCION VARCHAR2(50) NOT NULL, 
	FECHA_SOL DATE NOT NULL, 
	FECHA_GEN DATE, 
	TIEMPO NUMBER(*,0) NOT NULL, 
	ESTADO NUMBER(*,0) NOT NULL, 
	FORMATO NUMBER(*,0) NOT NULL, 
	FICHERO VARCHAR2(100), 
	CONSTRAINT IS_PK PRIMARY KEY (COD_SOLICITUD)
);


CREATE TABLE INF_CRITERIOS (	
	COD_SOLICITUD NUMBER(*,0) NOT NULL, 
	COD_CRITERIO NUMBER(*,0) NOT NULL, 
	COD_TIPO NUMBER(*,0) NOT NULL, 
	CONDICION NUMBER(*,0) NOT NULL, 
	VALOR1 VARCHAR2(100), 
	VALOR2 VARCHAR2(100), 
	TITULO VARCHAR2(100), 
	ORIGEN VARCHAR2(50), 
	TABLA VARCHAR2(50), 
	CONSTRAINT INF_CRITERIOS_PK PRIMARY KEY (COD_SOLICITUD, COD_CRITERIO), 
	CONSTRAINT INF_CRITERIOS_INF_SOLICITUD_FK FOREIGN KEY (COD_SOLICITUD)
		REFERENCES INF_SOLICITUD (COD_SOLICITUD) ON DELETE CASCADE
);


CREATE TABLE PLANT_INF_UOR (
	PLANT_INF_UOR_PLANTILLA NUMBER(5, 0) NOT NULL,
	PLANT_INF_UOR_ID NUMBER(5, 0) NOT NULL, 
	CONSTRAINT PLANT_INF_UOR_PK PRIMARY KEY (PLANT_INF_UOR_PLANTILLA,PLANT_INF_UOR_ID),
	CONSTRAINT PLANT_INF_UOR_PLANT_INFOR_FK1 FOREIGN KEY (PLANT_INF_UOR_PLANTILLA)
		REFERENCES PLANT_INFORMES (PLANT_PLANTILLA) ON DELETE CASCADE,
	CONSTRAINT PLANT_INF_UOR_A_UOR_FK1 FOREIGN KEY (PLANT_INF_UOR_ID)
		REFERENCES A_UOR (UOR_COD) ON DELETE CASCADE
);


CREATE TABLE INF_MODOORIGEN (	
	ID_MODOORIGEN NUMBER NOT NULL, 
	DESC_MODOORIGEN VARCHAR2(100) NOT NULL, 
	CONSTRAINT INF_MODOORIGEN_PK PRIMARY KEY (ID_MODOORIGEN), 
	CONSTRAINT INF_MODOORIGEN_UK1 UNIQUE (DESC_MODOORIGEN)
); 


CREATE TABLE INF_CAMPOS (	
	CODIGO NUMBER(*,0) NOT NULL, 
	NOME VARCHAR2(50) NOT NULL, 
	CAMPO VARCHAR2(255) NOT NULL, 
	TIPO VARCHAR2(1) NOT NULL, 
	LONXITUDE NUMBER(4,0) NOT NULL, 
	ORIGEN NUMBER(3,0), 
	NOMEAS VARCHAR2(255), 
	CRITERIO NUMBER(1,0), 
	CONSTRAINT PK_INF_CAMPOS PRIMARY KEY (CODIGO), 
	CONSTRAINT INF_CAMPOS_INF_ORIGEN_FK1 FOREIGN KEY (ORIGEN) 
		REFERENCES INF_ORIGEN (ID_ORIGEN)
);

COMMENT ON COLUMN INF_CAMPOS.CODIGO IS 'Código identificador del campo.';
COMMENT ON COLUMN INF_CAMPOS.NOME IS 'Nombre descriptivo del campo.';
COMMENT ON COLUMN INF_CAMPOS.CAMPO IS 'Campo correspondiente dentro de la base de datos.';
COMMENT ON COLUMN INF_CAMPOS.TIPO IS 'Tipo del campo (N-numérico, A-alfanumérico, D-fecha; S-desplegable, P-suplemtentario,I interesado).';
COMMENT ON COLUMN INF_CAMPOS.LONXITUDE IS 'Número máximo de caracteres/dígitos del campo';
COMMENT ON TABLE INF_CAMPOS IS 'Campos disponibles para la definición de informes.';  



-- INTEGRACIÓN DE SERVICIOS WEB

CREATE TABLE SW_INFO (
  	SW_COD DECIMAL(3) NOT NULL,
  	SW_TIT VARCHAR(60) NOT NULL,
  	SW_URL VARCHAR(120) NOT NULL,
  	SW_WSDL VARCHAR(120) NOT NULL,
  	SW_PUB DECIMAL(1) NOT NULL,
  	CONSTRAINT PK_SW_INFO PRIMARY KEY (SW_COD)
);


CREATE TABLE SW_OPS (
  	OPS_SW_COD DECIMAL(3) NOT NULL,
  	OPS_SW_NOM VARCHAR(50) NOT NULL,
  	OPS_SW_NS VARCHAR(70) NOT NULL,
  	OPS_SW_SAU VARCHAR2(100),
  	OPS_SW_STY VARCHAR2(10),
	CONSTRAINT PK_SW_OPS PRIMARY KEY (OPS_SW_COD, OPS_SW_NOM)
);


CREATE TABLE SW_PARAMS (
	PRM_SW_COD DECIMAL(3) NOT NULL,
	PRM_SW_OP VARCHAR(50) NOT NULL,
	PRM_ORD DECIMAL(2) NOT NULL,
	PRM_NOM VARCHAR(40),
	PRM_IN_OUT DECIMAL(1) NOT NULL,
	PRM_CLASS DECIMAL(1) NOT NULL,
	PRM_TIP_COD DECIMAL(4),
	CONSTRAINT PK_SW_PARAMS PRIMARY KEY (PRM_SW_COD, PRM_SW_OP, PRM_ORD)
);


CREATE TABLE SW_TIPO (
	TIP_COD DECIMAL(4) NOT NULL,
	TIP_CLASE DECIMAL(1) NOT NULL,
	TIP_NOM VARCHAR(60) NOT NULL,
	TIP_SW_COD DECIMAL(3),
	TIP_NS VARCHAR(70),
	TIP_CONT_CLASS DECIMAL(1),
	TIP_CONT_TIPO DECIMAL(4),
	CONSTRAINT PK_SW_TIPO PRIMARY KEY (TIP_COD, TIP_CLASE)
);


CREATE TABLE SW_CAMPO_TIPO (
	CAMPO_TIP_COD DECIMAL(4) NOT NULL,
	CAMPO_NOM VARCHAR(40) NOT NULL,
	CAMPO_CLASE DECIMAL(1) NOT NULL,
	CAMPO_TIPO DECIMAL(4),
	CAMPO_ORD NUMBER(2, 0) DEFAULT 0 NOT NULL,
	CONSTRAINT PK_SW_CAMPO_TIPO PRIMARY KEY (CAMPO_TIP_COD, CAMPO_NOM)
);


CREATE TABLE SW_OPS_DEF (
	OPS_DEF_COD DECIMAL(4) NOT NULL,
	OPS_SW_NOM VARCHAR(50) NOT NULL,
	OPS_SW_COD DECIMAL(3) NOT NULL,
	OPS_DEF_TIT VARCHAR(100) NOT NULL,
	OPS_DEF_PUB DECIMAL(1) NOT NULL,
	OPS_DEF_EST DECIMAL(1) NOT NULL,
	CONSTRAINT PK_SW_OPS_DEF PRIMARY KEY (OPS_DEF_COD, OPS_SW_COD, OPS_SW_NOM)
);


CREATE TABLE SW_PARAMS_IN_DEF (
	ORD_PRM_SW DECIMAL(2) NOT NULL,
	OPS_DEF_COD DECIMAL(4) NOT NULL,
	PRM_DEF_NOM VARCHAR(150) NOT NULL,
	PRM_DEF_TIT VARCHAR(150),
	PRM_DEF_OBL DECIMAL(1) NOT NULL,
	PRM_DEF_TIP DECIMAL(1) NOT NULL,
	PRM_DEF_VAL VARCHAR(100),
	CONSTRAINT PK_SW_PARAMS_IN_DEF PRIMARY KEY (ORD_PRM_SW, OPS_DEF_COD, PRM_DEF_NOM)
);


CREATE TABLE SW_PARAMS_OUT_DEF (
	OPS_DEF_COD DECIMAL(4) NOT NULL,
	PRM_DEF_NOM VARCHAR(150) NOT NULL,
	PRM_DEF_TIT VARCHAR(150),
	PRM_TIP_DAT DECIMAL(1) NOT NULL,
	PRM_VAL_OK VARCHAR(50),
	CONSTRAINT PK_SW_PARAMS_OUT_DEF PRIMARY KEY (OPS_DEF_COD, PRM_DEF_NOM)
);


CREATE TABLE SW_ARRAY_DEF (
	ORD_PRM_SW DECIMAL(3) NOT NULL,
	OPS_DEF_COD DECIMAL(4) NOT NULL,
	DEF_ARR_DES VARCHAR(200) NOT NULL,
	DEF_ARR_IO DECIMAL(1) NOT NULL,
	DEF_ARR_VAL DECIMAL(2) NOT NULL,
	CONSTRAINT PK_SW_ARRAY_DEF PRIMARY KEY (ORD_PRM_SW, OPS_DEF_COD, DEF_ARR_DES)
);


CREATE TABLE DEF_TRA_SW (
	DEF_TRA_CFO DECIMAL(30,0) NOT NULL,
	DEF_TRA_ORD DECIMAL(3,0) NOT NULL,
  	DEF_TRA_MUN DECIMAL(3,0) NOT NULL,
  	DEF_TRA_PRO VARCHAR(5) NOT NULL,
  	DEF_COD_TRA DECIMAL(4,0) NOT NULL,
  	DEF_TRA_AVZ DECIMAL(1,0) NOT NULL,
  	DEF_TRA_OBL DECIMAL(1,0) NOT NULL,
  	DEF_TRA_OP DECIMAL(4,0) NOT NULL,
	DEF_TRA_TIPO_ORIGEN_OPERACION VARCHAR2(10) DEFAULT 'WS' NOT NULL,
	DEF_TRA_NOMBRE_MODULO VARCHAR2(200),
	DEF_TRA_NOMBRE_OPERACION VARCHAR(50),
	TIPO_OP_RETROCESO NUMBER(1,0) DEFAULT -1,
  	CONSTRAINT PK_DEF_TRA_SW PRIMARY KEY (DEF_TRA_CFO));

ALTER TABLE DEF_TRA_SW ADD TIPO_OP_RETROCESO NUMBER(1,0) DEFAULT -1;


CREATE TABLE CONF_TRA_SW (
	DEF_CFO_CONF DECIMAL(30,0) NOT NULL,
	COD_ORD_CONF DECIMAL(2,0) NOT NULL,
	DEF_PRM_CONF VARCHAR(150) NOT NULL,
	TIP_DAT_CONF DECIMAL(1) NOT NULL,
	COD_DAT_CONF VARCHAR(150),
	VAL_DAT_CONF VARCHAR(100),
	CONSTRAINT PK_CONF_TRA_SW PRIMARY KEY (DEF_CFO_CONF, COD_ORD_CONF, DEF_PRM_CONF)
);


-- GESTIÓN DE FORMULARIOS

CREATE TABLE F_DEF_FORM (	
	FDF_CODIGO NUMBER(6,0) NOT NULL, 
	FDF_COD_VIS VARCHAR2(6) NOT NULL, 
	FDF_VERSION NUMBER(3,0) NOT NULL, 
	FDF_NOMBRE VARCHAR2(200), 
	FDF_COD_REL NUMBER(6,0), 
	FTF_COD VARCHAR2(3) NOT NULL, 
	FDF_FALTA DATE NOT NULL, 
	FDF_FBAJA DATE, 
	FDF_UNIDADES CHAR(1) DEFAULT 0, 
	FDF_DMTE CHAR(1), 
	PRO_COD VARCHAR2(5) NOT NULL, 
	FDF_REGISTRO CHAR(1) DEFAULT 0 NOT NULL, 
	FDF_INSTANCIA CHAR(1) DEFAULT 0 NOT NULL, 
	FDF_GTRAMITE CHAR(1) DEFAULT 0 NOT NULL, 
	FDF_DTRAMITE CHAR(1) DEFAULT 0 NOT NULL, 
	FDF_INSTRUC VARCHAR2(1000), 
	FDF_VISIBLE CHAR(1) DEFAULT 0, 
	FDF_PLANTILLA LONG RAW, 
	FDF_ARE NUMBER(3,0), 
	FDF_CERRART1 CHAR(1) DEFAULT '0' NOT NULL, 
	FDF_TIPO_FIRMA CHAR(1) DEFAULT '0' NOT NULL, 
	CONSTRAINT F_DEF_FORM_PK PRIMARY KEY (FDF_CODIGO)
);

COMMENT ON COLUMN F_DEF_FORM.FDF_PLANTILLA IS 'Como localizar el lugar de la firma de los formularios: Secuencial (0) Por tramite (1)';
COMMENT ON COLUMN F_DEF_FORM.FDF_CERRART1 IS 'Si se cierra (1) o no (0) el tramite de inicio del expediente';


CREATE TABLE F_PRECARGA_XML (	
	FPX_COD NUMBER(3,0) NOT NULL, 
	FPX_FORM NUMBER(6,0) NOT NULL, 
	FPX_IDENTIFICADOR VARCHAR2(50) NOT NULL, 
	CONSTRAINT F_PRECARGA_XML_PK PRIMARY KEY (FPX_COD), 
	CONSTRAINT F_PRECARGA_XML_F_DEF_FORM_FK1 FOREIGN KEY (FPX_FORM)
		REFERENCES F_DEF_FORM (FDF_CODIGO)
);

COMMENT ON TABLE F_PRECARGA_XML  IS 'Relación entre las plantillas de formularios y las precargas de datos XML que se realizarán';
COMMENT ON COLUMN F_PRECARGA_XML.FPX_FORM IS 'Código del formulario';
COMMENT ON COLUMN F_PRECARGA_XML.FPX_IDENTIFICADOR IS 'Identificador de la precarga que se realizará';


CREATE TABLE F_EST_FORM (	
	FEF_COD VARCHAR2(3) NOT NULL, 
	FEF_NOM VARCHAR2(100) NOT NULL, 
	CONSTRAINT PK_DEP_1_1 PRIMARY KEY (FEF_COD)  
);


CREATE TABLE F_TIPO_FORM (	
	FTF_COD VARCHAR2(3) NOT NULL, 
	FTF_NOM VARCHAR2(100) NOT NULL, 
	CONSTRAINT PK_DEP_1 PRIMARY KEY (FTF_COD)
);
    

CREATE TABLE F_TRA_FORM (	
	FT_COD VARCHAR2(20) NOT NULL, 
	FT_FDF NUMBER(6,0) NOT NULL, 
	FT_DMTE NUMBER(5,0) NOT NULL, 
	FT_NUM NUMBER(6,0) NOT NULL, 
	FT_FALTA DATE NOT NULL, 
	FT_FBAJA DATE, 
	FT_FMOD DATE, 
	FT_DATOS LONG, 
	FT_ESTADO VARCHAR2(3) NOT NULL, 
	FT_TIPO VARCHAR2(3) NOT NULL, 
	FT_RAIZ VARCHAR2(20), 
	FT_ENT_DEP NUMBER(3,0), 
	FT_ENT_UOR NUMBER(3,0), 
	FT_ENT_TIP VARCHAR2(1), 
	FT_ENT_EJE NUMBER(4,0), 
	FT_ENT_NUM NUMBER(6,0), 
	FT_INST_MUN NUMBER(3,0), 
	FT_INST_EJE NUMBER(4,0), 
	FT_INST_NUM VARCHAR2(30), 
	FT_DESCRIPCION VARCHAR2(200), 
	FT_USU VARCHAR2(255) NOT NULL, 
	FT_ASUNTO VARCHAR2(50), 
	DATOS2 BLOB, 
	CONSTRAINT PK_F_TRA_FORM PRIMARY KEY (FT_COD), 
	CONSTRAINT FK_FTRAFORM_FDEFFORM FOREIGN KEY (FT_FDF)
		REFERENCES F_DEF_FORM (FDF_CODIGO), 
	CONSTRAINT FK_FTRAFORM_FESTFORM FOREIGN KEY (FT_ESTADO)
		REFERENCES F_EST_FORM (FEF_COD), 
	CONSTRAINT FK_FTRAFORM_FTIPOFORM FOREIGN KEY (FT_TIPO)
		REFERENCES F_TIPO_FORM (FTF_COD), 
	CONSTRAINT FK_RAIZ FOREIGN KEY (FT_RAIZ)
		REFERENCES F_TRA_FORM (FT_COD), 
	CONSTRAINT FK_FTRAFORM_AUOR FOREIGN KEY (FT_DMTE)
		REFERENCES A_UOR (UOR_COD)
);


COMMENT ON COLUMN F_TRA_FORM.FT_COD IS 'Codigo del formulario. Concatenacion de FT_FDF-FT_DMTE-FT_NUM';
COMMENT ON COLUMN F_TRA_FORM.FT_FDF IS 'Def-form que lo define (F_DEF_FORM)';
COMMENT ON COLUMN F_TRA_FORM.FT_DMTE IS 'UOR que demanda';
COMMENT ON COLUMN F_TRA_FORM.FT_NUM IS 'Número secuencial para formularios del mismo FDF_COD_VIS';
COMMENT ON COLUMN F_TRA_FORM.FT_FMOD IS 'Fecha de la última modificación del formulario';
COMMENT ON COLUMN F_TRA_FORM.FT_ESTADO IS 'Estado del formulario (F_EST_FORM)';
COMMENT ON COLUMN F_TRA_FORM.FT_RAIZ IS 'Si es formulario anexo de modificacion, formulario al que modifica, sino null';
COMMENT ON COLUMN F_TRA_FORM.FT_USU IS 'Usuario que rellena el formulario (login ldap)';


CREATE TABLE F_FIRMA (	
	FF_FORM VARCHAR2(20) NOT NULL, 
	FF_USU VARCHAR2(255) NOT NULL, 
	FF_UOR_FIRMA NUMBER(5,0), 
	FF_TRAFIRMA_MUN NUMBER(3,0), 
	FF_TRAFIRMA_PRO VARCHAR2(5), 
	FF_TRAFIRMA_EJE NUMBER(4,0), 
	FF_TRAFIRMA_NUM VARCHAR2(30), 
	FF_TRAFIRMA_TRA NUMBER(4,0), 
	FF_TRAFIRMA_OCU NUMBER(4,0), 
	FF_FECHA DATE NOT NULL, 
	FF_ESTADO CHAR(1) DEFAULT 'A' NOT NULL, 
	FF_MOTIVO_RECHAZO VARCHAR2(400),
	FF_NOM_USU VARCHAR2(50),
	FF_DNI_USU VARCHAR2(9),
	FF_PERFIL_USU VARCHAR2(6),
	CONSTRAINT CK_FFIRMA_ESTADO CHECK (FF_ESTADO='A' OR FF_ESTADO='R'), 
	CONSTRAINT PK_FFIRMA PRIMARY KEY (FF_FORM, FF_USU, FF_FECHA), 
	CONSTRAINT FK_FFIRMA_AUOR FOREIGN KEY (FF_UOR_FIRMA)
		REFERENCES A_UOR (UOR_COD), 
	CONSTRAINT FK_FFIRMA_ECRO FOREIGN KEY (FF_TRAFIRMA_MUN, FF_TRAFIRMA_PRO, FF_TRAFIRMA_EJE, FF_TRAFIRMA_NUM, FF_TRAFIRMA_TRA, FF_TRAFIRMA_OCU)
		REFERENCES E_CRO (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU),
	CONSTRAINT FK_FFIRMA_FTRAFORM FOREIGN KEY (FF_FORM) 
		REFERENCES F_TRA_FORM (FT_COD) ON DELETE CASCADE
);


CREATE TABLE F_RESTRICCION (	
	R_FORM NUMBER(6,0) NOT NULL, 
	R_UOR NUMBER(5,0) NOT NULL, 
	R_CAR NUMBER(3,0) NOT NULL, 
	CONSTRAINT PK_FRESTRICCION PRIMARY KEY (R_FORM, R_UOR, R_CAR), 
	CONSTRAINT FK_FRESTRICCION_DEFFORM FOREIGN KEY (R_FORM)
		REFERENCES F_DEF_FORM (FDF_CODIGO) ON DELETE CASCADE, 
	CONSTRAINT FK_FRESTRICCION_CAR FOREIGN KEY (R_CAR)
		REFERENCES A_CAR (CAR_COD) ON DELETE CASCADE, 
	CONSTRAINT FK_FRESTRICCION_UOR FOREIGN KEY (R_UOR)
		REFERENCES A_UOR (UOR_COD) ON DELETE CASCADE
);
   
CREATE TABLE F_DEFFORM_TRA (	
	DFT_FORM NUMBER(6,0) NOT NULL, 
	DFT_PRO VARCHAR2(5) NOT NULL, 
	DFT_TRA NUMBER(4,0) NOT NULL, 
	DFT_REL CHAR(1) NOT NULL, 
	DFT_EST CHAR(1) NOT NULL, 
	DFT_MUN NUMBER(3,0) NOT NULL, 
	CONSTRAINT PK_FDFFORMTRA PRIMARY KEY (DFT_FORM, DFT_TRA, DFT_PRO, DFT_MUN), 
	CONSTRAINT FK_FDEFFORMTRA_DEFFORM FOREIGN KEY (DFT_FORM)
		REFERENCES  F_DEF_FORM (FDF_CODIGO) ON DELETE CASCADE, 
	CONSTRAINT FK_FDEFFORMTRA_TRA FOREIGN KEY (DFT_MUN, DFT_PRO, DFT_TRA)
		REFERENCES  E_TRA (TRA_MUN, TRA_PRO, TRA_COD) ON DELETE CASCADE
);
 

CREATE TABLE F_PLANTILLA2_FORM (	
	FDF_CODIGO NUMBER(6,0) NOT NULL, 
	FDF_PLANTILLA LONG RAW, 
	CONSTRAINT PK_F_PLANTILLA2_FORM PRIMARY KEY (FDF_CODIGO)
);
   
   
CREATE TABLE F_TRAFORM_ANEXO (	
	TFA_FORM VARCHAR2(20) NOT NULL, 
	TFA_COD NUMBER(3,0) NOT NULL, 
	TFA_DES VARCHAR2(50) NOT NULL, 
	TFA_TIP VARCHAR2(30) NOT NULL, 
	TFA_CONT LONG RAW, 
	CONSTRAINT PK_F_TRAFORM_ANEXO PRIMARY KEY (TFA_FORM, TFA_COD)
);

COMMENT ON TABLE F_TRAFORM_ANEXO IS 'Ficheros anexos al formulario.';
COMMENT ON COLUMN F_TRAFORM_ANEXO.TFA_FORM IS 'Formulario al que pertenece el anexo';
COMMENT ON COLUMN F_TRAFORM_ANEXO.TFA_COD IS 'id del anexo dentro del formulario';
COMMENT ON COLUMN F_TRAFORM_ANEXO.TFA_DES IS 'Descripcion del anexo';
COMMENT ON COLUMN F_TRAFORM_ANEXO.TFA_TIP IS 'Tipo de fichero almacenado: gif, doc, pdf...';
COMMENT ON COLUMN F_TRAFORM_ANEXO.TFA_CONT IS 'El fichero';


CREATE TABLE F_TRAFORM_BLOB (	
	TFB_FORM VARCHAR2(20) NOT NULL, 
	TFB_FICHERO LONG RAW, 
	CONSTRAINT F_TRAFORM_BLOP_PK PRIMARY KEY (TFB_FORM)
);


CREATE TABLE F_TRAFORM_TRA (	
	TFT_FORM VARCHAR2(20) NOT NULL, 
	TFT_TRA_MUN NUMBER(3,0) NOT NULL, 
	TFT_TRA_PRO VARCHAR2(5) NOT NULL, 
	TFT_TRA_EJE NUMBER(4,0) NOT NULL, 
	TFT_TRA_NUM VARCHAR2(30) NOT NULL, 
	TFT_TRA_TRA NUMBER(4,0) NOT NULL, 
	TFT_TRA_OCU NUMBER(4,0) NOT NULL, 
	PRIMARY KEY (TFT_FORM, TFT_TRA_MUN, TFT_TRA_PRO, TFT_TRA_EJE, TFT_TRA_NUM, TFT_TRA_TRA, TFT_TRA_OCU), 
	CONSTRAINT FK_FTRAFORMTRA_ECRO FOREIGN KEY (TFT_TRA_MUN, TFT_TRA_PRO, TFT_TRA_EJE, TFT_TRA_NUM, TFT_TRA_TRA, TFT_TRA_OCU)
		REFERENCES E_CRO (CRO_MUN, CRO_PRO, CRO_EJE, CRO_NUM, CRO_TRA, CRO_OCU),
	CONSTRAINT FK_FTRAFORMTRA_FTRAFORM FOREIGN KEY (TFT_FORM) 
		REFERENCES F_TRA_FORM (FT_COD) ON DELETE CASCADE
);


CREATE TABLE USUARIO_TEMP (	
	USU_LOGIN VARCHAR2(255) NOT NULL, 
	USU_NOMBRE VARCHAR2(50) NOT NULL, 
	USU_APE1 VARCHAR2(50) NOT NULL, 
	USU_APE2 VARCHAR2(50) NOT NULL, 
	USU_NIF VARCHAR2(50) NOT NULL, 
	USU_EMAIL VARCHAR2(100), 
	DEP_COD VARCHAR2(50) NOT NULL, 
	SER_COD VARCHAR2(50), 
	PER_COD VARCHAR2(50) NOT NULL, 
	PER_NOMBRE VARCHAR2(50), 
	DEP_NOMBRE VARCHAR2(50), 
	SER_NOMBRE VARCHAR2(50), 
	CATPROF_COD VARCHAR2(5), 
	CATPROF_NOMBRE VARCHAR2(100), 
	ENT_COD VARCHAR2(5), 
	USU_PSW VARCHAR2(20) NOT NULL, 
	USU_BLQ NUMBER(1,0) DEFAULT 0 NOT NULL, 
	CONSTRAINT PK_USUARIO_TEMP PRIMARY KEY (USU_LOGIN)
);

COMMENT ON COLUMN USUARIO_TEMP.DEP_COD IS 'Codigo visible de la UOR a la que pertenece el usuario';
COMMENT ON COLUMN USUARIO_TEMP.PER_COD IS 'Codigo del perfil (cargo) del usuario';
COMMENT ON COLUMN USUARIO_TEMP.CATPROF_COD IS 'Código de categoría profesional a la que pertenece';
COMMENT ON COLUMN USUARIO_TEMP.ENT_COD IS 'Entidad del usuario en la TVG (C=CRTVG, R=RG, T=TVG)';

create table LIST_TRAM_ORIG(
EJERCICIO NUMBER(4,0) NOT NULL,
COD_PRO	VARCHAR2(30) NOT NULL,
COD_MUN NUMBER(4,0) NOT NULL,
NUM_EXP	VARCHAR2(30) NOT NULL,
COD_TRA_ORIGEN	NUMBER(4,0) NOT NULL,
OCU_TRA_ORIGEN	NUMBER(4,0) NOT NULL,
COD_TRA_DESTINO	NUMBER(4,0) NOT NULL,
OCU_TRA_DESTINO NUMBER(4,0) NOT NULL,
PRIMARY KEY(EJERCICIO,COD_PRO,COD_MUN,NUM_EXP,COD_TRA_ORIGEN,OCU_TRA_ORIGEN,COD_TRA_DESTINO,OCU_TRA_DESTINO));

CREATE INDEX IX_LIST_TRAM_ORIG ON LIST_TRAM_ORIG(EJERCICIO, COD_PRO, COD_MUN,NUM_EXP,COD_TRA_DESTINO,OCU_TRA_DESTINO);			

CREATE TABLE NOTIFICACION
(
 CODIGO_NOTIFICACION NUMBER(4, 0) NOT NULL,
 NUM_EXPEDIENTE VARCHAR2(30 BYTE) NOT NULL,
 COD_PROCEDIMIENTO VARCHAR2(5 BYTE) NOT NULL,
 EJERCICIO NUMBER(4, 0) NOT NULL,
 COD_MUNICIPIO NUMBER(3, 0)NOT NULL,
 COD_TRAMITE NUMBER(4, 0) NOT NULL,
 OCU_TRAMITE NUMBER(4, 0) NOT NULL, 
 ACTO_NOTIFICADO VARCHAR2(2000 BYTE)  ,
 CADUCIDAD_NOTIFICACION NUMBER(4,0),
 FIRMA BLOB,
 TEXTO_NOTIFICACION VARCHAR2(2000 BYTE),
 FIRMADA VARCHAR2(1 BYTE),

 CONSTRAINT NOTIFICACION_PK PRIMARY KEY(CODIGO_NOTIFICACION),
CONSTRAINT NOTIFICACION_E_DOE_FK1 FOREIGN KEY(COD_MUNICIPIO,COD_TRAMITE,OCU_TRAMITE,COD_PROCEDIMIENTO,NUM_EXPEDIENTE,EJERCICIO)
REFERENCES E_CRO(CRO_MUN,CRO_TRA,CRO_OCU,CRO_PRO,CRO_NUM,CRO_EJE) ON DELETE CASCADE ENABLE);


 COMMENT ON COLUMN NOTIFICACION.CODIGO_NOTIFICACION IS 'Código de la notificación';
 COMMENT ON COLUMN NOTIFICACION.NUM_EXPEDIENTE  IS 'Número del expediente';
 COMMENT ON COLUMN NOTIFICACION.COD_PROCEDIMIENTO  IS 'Código del procedimiento.';
 COMMENT ON COLUMN NOTIFICACION.EJERCICIO  IS 'Ejercicio';
 COMMENT ON COLUMN NOTIFICACION.COD_MUNICIPIO IS  'Código del municipio.';
 COMMENT ON COLUMN NOTIFICACION.COD_TRAMITE  IS 'Código del trámite';
 COMMENT ON COLUMN NOTIFICACION.OCU_TRAMITE  IS 'Ocurrencia del trámite';
 COMMENT ON COLUMN NOTIFICACION.ACTO_NOTIFICADO IS 'Acto notificado';
 COMMENT ON COLUMN NOTIFICACION.CADUCIDAD_NOTIFICACION IS 'Días  a partir de los cuales caduca la notificación';
 COMMENT ON COLUMN NOTIFICACION.FIRMA  IS 'Firma de la notificación.';
 COMMENT ON COLUMN NOTIFICACION.TEXTO_NOTIFICACION IS 'Texto de la notificación.';


 CREATE TABLE ADJUNTO_NOTIFICACION
(
 CODIGO_NOTIFICACION NUMBER(4, 0) NOT NULL,
 COD_MUNICIPIO NUMBER(3, 0)  NOT NULL,
 EJERCICIO NUMBER(4, 0)  NOT NULL,
 NUM_EXPEDIENTE VARCHAR2(30 BYTE)  NOT NULL,
 COD_PROCEDIMIENTO VARCHAR2(5 BYTE) NOT NULL,
 COD_TRAMITE NUMBER(4, 0) NOT NULL,
 OCU_TRAMITE NUMBER(4, 0) NOT NULL,
 NUM_UNIDAD_DOC NUMBER(4, 0) NOT NULL,

 CONSTRAINT ADJUNTO_NOTIFICACION_PK PRIMARY KEY(CODIGO_NOTIFICACION,COD_MUNICIPIO,EJERCICIO,NUM_EXPEDIENTE,COD_PROCEDIMIENTO,COD_TRAMITE,OCU_TRAMITE,NUM_UNIDAD_DOC),
 CONSTRAINT ADJUNTO_NOTIFICACION_FK1 FOREIGN KEY(CODIGO_NOTIFICACION)
 REFERENCES NOTIFICACION(CODIGO_NOTIFICACION),
 CONSTRAINT ADJUNTO_E_CRO_FK2 FOREIGN KEY(COD_MUNICIPIO,COD_TRAMITE,OCU_TRAMITE,COD_PROCEDIMIENTO,NUM_EXPEDIENTE,EJERCICIO)
 REFERENCES E_CRO(CRO_MUN,CRO_TRA,CRO_OCU,CRO_PRO,CRO_NUM,CRO_EJE) ON DELETE CASCADE ENABLE);



 COMMENT ON COLUMN ADJUNTO_NOTIFICACION.CODIGO_NOTIFICACION IS 'Código de la notif';
 COMMENT ON COLUMN ADJUNTO_NOTIFICACION.COD_MUNICIPIO IS  'Código del municipio';
 COMMENT ON COLUMN ADJUNTO_NOTIFICACION.EJERCICIO  IS 'Ejercicio';
 COMMENT ON COLUMN ADJUNTO_NOTIFICACION.COD_PROCEDIMIENTO   IS 'codigo procedimiento';
 COMMENT ON COLUMN ADJUNTO_NOTIFICACION.NUM_EXPEDIENTE  IS 'Número del expediente';
 COMMENT ON COLUMN ADJUNTO_NOTIFICACION.COD_TRAMITE  IS 'Código del tramite';
 COMMENT ON COLUMN ADJUNTO_NOTIFICACION.OCU_TRAMITE  IS 'Ocurrencia del trámite';
 COMMENT ON COLUMN ADJUNTO_NOTIFICACION.NUM_UNIDAD_DOC  IS 'Número de unidad del documento';


CREATE TABLE AUTORIZADO_NOTIFICACION
(
 CODIGO_NOTIFICACION NUMBER(4, 0) NOT NULL,
 COD_MUNICIPIO NUMBER(3, 0)  NOT NULL,
 EJERCICIO NUMBER(4, 0)  NOT NULL,
 NUM_EXPEDIENTE VARCHAR2(30 BYTE)  NOT NULL,
 COD_TERCERO NUMBER(12, 0)  NOT NULL,
 VER_TERCERO NUMBER(3, 0)  NOT NULL,
 CONSTRAINT AUTORIZADO_NOTIFICACION_PK PRIMARY KEY(CODIGO_NOTIFICACION,COD_MUNICIPIO,EJERCICIO,NUM_EXPEDIENTE,COD_TERCERO,VER_TERCERO),
CONSTRAINT AUTORIZADO_NOTIFICACION_FK1 FOREIGN KEY(CODIGO_NOTIFICACION)
REFERENCES NOTIFICACION(CODIGO_NOTIFICACION),
CONSTRAINT AUTORIZADO_NOTIF_E_EXT_FK2 FOREIGN KEY(COD_MUNICIPIO,EJERCICIO,NUM_EXPEDIENTE,COD_TERCERO,VER_TERCERO)
REFERENCES E_EXT(EXT_MUN,EXT_EJE,EXT_NUM,EXT_TER,EXT_NVR)
 ON DELETE CASCADE ENABLE);

 COMMENT ON COLUMN AUTORIZADO_NOTIFICACION.CODIGO_NOTIFICACION IS 'Código de la notificación';
 COMMENT ON COLUMN AUTORIZADO_NOTIFICACION.COD_MUNICIPIO IS  'Código del municipio';
 COMMENT ON COLUMN AUTORIZADO_NOTIFICACION.EJERCICIO  IS 'Ejercicio';
 COMMENT ON COLUMN AUTORIZADO_NOTIFICACION.NUM_EXPEDIENTE  IS 'Número del expediente';
 COMMENT ON COLUMN AUTORIZADO_NOTIFICACION.COD_TERCERO  IS 'Código del tercero';
 COMMENT ON COLUMN AUTORIZADO_NOTIFICACION.VER_TERCERO  IS 'Version del tercero';
 
CREATE TABLE CAMPOS_LIST_PENDIENTES_PROC(CODIGO VARCHAR2(20 BYTE) NOT NULL,
CODIGO_PROCEDIMIENTO VARCHAR2(5 BYTE) NOT NULL,
CODIGO_MUNICIPIO NUMBER(3,0) NOT NULL,
NOMBRE_CAMPO VARCHAR2(4000 BYTE) NOT NULL,
TAMANHO NUMBER(38,0) NOT NULL,
ACTIVO NUMBER(1,0) NOT NULL,
ORDEN NUMBER(38,0) NOT NULL,
CAMPO_SUP NUMBER(1,0) NOT NULL,
CONSTRAINT PK_CAMPOS_LIST_PENDIENTES_PROC PRIMARY KEY (CODIGO,CODIGO_PROCEDIMIENTO,CODIGO_MUNICIPIO));


CREATE TABLE ETIQUETAS_LISTADO_PENDIENTES(CODIGO NUMBER(38,0) NOT NULL,
TIPO_LISTADO NUMBER(38,0) NOT NULL,
ETIQUETA VARCHAR2(30 BYTE) NOT NULL,
CONSTRAINT PK_ETI_LIST_PENDIENTES PRIMARY KEY(CODIGO,TIPO_LISTADO,ETIQUETA),
CONSTRAINT FK_CODIGO_CAMPLIST FOREIGN KEY(CODIGO,TIPO_LISTADO) REFERENCES A_CAMPLIST(CAMPLIST_COD,CAMPLIST_CODLIST)); 


CREATE TABLE TAREAS_PENDIENTES_INICIO(
	ID NUMBER(6,0) NOT NULL,
	NUM_EXPEDIENTE VARCHAR2(30 BYTE) NOT NULL,
	COD_TRAMITE NUMBER(4,0) NOT NULL,
	OCU_TRAMITE NUMBER(4,0) NOT NULL,
	COD_MUNICIPIO NUMBER(3,0) NOT NULL,
	COD_OPERACION NUMBER(30,0) NOT NULL,
	ERROR_PERSONALIZADO NUMBER(1,0),
	ETIQUETAS_MENSAJE VARCHAR2(4000 BYTE),
	PRIMARY KEY(ID),
	FOREIGN KEY(COD_OPERACION) REFERENCES DEF_TRA_SW(DEF_TRA_CFO) ON DELETE CASCADE);
		
CREATE TABLE E_DEF_FIRMA 
(
  ID_FIRMA NUMBER NOT NULL 
, FIRMA_USUARIO NUMBER(4, 0) 
, FIRMA_ORDEN NUMBER(2, 0) NOT NULL
, FIRMA_COD_DOC NUMBER(6, 0) NOT NULL 
, FIRMA_MUN NUMBER(3, 0) NOT NULL 
, FIRMA_PROC VARCHAR2(5) NOT NULL 
, FIRMA_UOR NUMBER(5, 0) NULL 
, FIRMA_CARGO NUMBER(3, 0) 
, FIRMA_FIN_REC VARCHAR2(1) DEFAULT '0' NOT NULL
, FIRMA_TRA_SUB VARCHAR2(1) DEFAULT '0' NOT NULL
, CONSTRAINT E_DEF_FIRMA_PK PRIMARY KEY (ID_FIRMA) ENABLE);

COMMENT ON COLUMN E_DEF_FIRMA.ID_FIRMA IS 'Identificador único de firma';
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_USUARIO IS 'USAURIO QUE FIRMA';
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_ORDEN IS 'ORDEN DE LA FIRMA DENTRO DEL CIRCUITO';
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_MUN IS 'MUNICIPIO';
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_PROC IS 'CÓDIGO DE PROCEDIMIENTO';
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_UOR IS 'UNIDAD ORGÁNICA DE LA FIRMA';
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_CARGO IS 'cARGO DE LA FIRMA';
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_UOR IS 'UNIDAD ORGÁNICA. La del expediente: -999, Definir en tramitacion: -888';
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_FIN_REC IS 'Indica si el rechazo de la firma finaliza el expediente';	 
COMMENT ON COLUMN E_DEF_FIRMA.FIRMA_TRA_SUB IS 'Indica si la firma se asocia a tramitar (1) o no (0)';


CREATE TABLE E_DOCS_FIRMAS 
(
  ID_DOC_FIRMA NUMBER NOT NULL 
, DOC_FIRMA_ESTADO VARCHAR2(2) NOT NULL 
, DOC_FIRMA_ORDEN NUMBER(2, 0) NOT NULL 
, DOC_FIRMA_UOR NUMBER(5, 0) 
, DOC_FIRMA_CARGO NUMBER(3, 0) 
, DOC_FIRMA_USUARIO NUMBER(4, 0) 
, DOC_FIRMA_FECHA DATE 
, ID_DOC_PRESENTADO NUMBER(15, 0) NOT NULL 
, DOC_FECHA_ENVIO DATE
, FIRMA BLOB
, DOC_FIRMA_OBSERVACIONES VARCHAR2(255)
, CONSTRAINT E_DOCS_FIRMAS_PK PRIMARY KEY 
  (    ID_DOC_FIRMA   )  ENABLE 
, CONSTRAINT E_DOCS_FIRMAS_E_DOCS_PRES_FK1 FOREIGN KEY (  ID_DOC_PRESENTADO ) REFERENCES E_DOCS_PRESENTADOS(  PRESENTADO_COD ) ENABLE);

COMMENT ON COLUMN E_DOCS_FIRMAS.ID_DOC_FIRMA IS 'Identificador único de fila';
COMMENT ON COLUMN E_DOCS_FIRMAS.DOC_FIRMA_ESTADO IS 'Estado de la firma (F=firmado, R=rechazado,P=pendiente,O=parado)';
COMMENT ON COLUMN E_DOCS_FIRMAS.DOC_FIRMA_ORDEN IS 'Orden de ejecución de la firma';
COMMENT ON COLUMN E_DOCS_FIRMAS.DOC_FIRMA_UOR IS 'UOR de la firma';
COMMENT ON COLUMN E_DOCS_FIRMAS.DOC_FIRMA_CARGO IS 'Cargo de la firma';
COMMENT ON COLUMN E_DOCS_FIRMAS.DOC_FIRMA_USUARIO IS 'Usuario que ha realizado la firma';
COMMENT ON COLUMN E_DOCS_FIRMAS.ID_DOC_PRESENTADO IS 'Identificador de documento anexado';


create table JUSTIFICANTE_REG_PERSO(NOMBRE_JUSTIFICANTE	VARCHAR2(1000 BYTE) NOT NULL,
EXTENSION_JUSTIFICANTE	VARCHAR2(100 BYTE),
DESCRIPCION_JUSTIFICANTE VARCHAR2(4000 BYTE),
DEFECTO_JUSTIFICANTE NUMBER(1,0),
RUTA_JUSTIFICANTE VARCHAR2(2000 BYTE),
PRIMARY KEY(NOMBRE_JUSTIFICANTE));


CREATE TABLE T_PLT (	
	PLT_COD NUMBER(3,0) NOT NULL, 
	PLT_DES VARCHAR2(100) NOT NULL, 
	PLT_URL VARCHAR2(500) NOT NULL, 
	CONSTRAINT PK_T_PLT PRIMARY KEY (PLT_COD)
);

COMMENT ON TABLE T_PLT IS 'PLANTILLAS PARA CAMPOS SUPLEMENTARIOS DE TERCERO';
COMMENT ON COLUMN T_PLT.PLT_COD IS 'Codigo de la plantilla';
COMMENT ON COLUMN T_PLT.PLT_DES IS 'Descripción';
COMMENT ON COLUMN T_PLT.PLT_URL IS 'URL DE LA PLANTILLA';


CREATE TABLE T_CAMPOS_EXTRA (	
	COD_MUNICIPIO NUMBER(3,0) NOT NULL, 	
	COD_CAMPO VARCHAR2(20) NOT NULL, 
	ROTULO VARCHAR2(2000) NOT NULL, 
	DESCRIPCION VARCHAR2(2000) NOT NULL, 
	COD_PLANTILLA NUMBER(3,0) NOT NULL, 
	TIPO_DATO VARCHAR2(2) NOT NULL, 
	TAMANO NUMBER(4,0) NOT NULL, 
	MASCARA VARCHAR2(1000), 
	OBLIGATORIO NUMBER(1,0) NOT NULL, 
	ORDEN NUMBER(3,0) NOT NULL, 	
	ACTIVO VARCHAR2(2), 
	DESPLEGABLE VARCHAR2(4), 	
	CONSTRAINT PK_T_CAMPOS_EXTRA PRIMARY KEY (COD_MUNICIPIO,COD_CAMPO),
	CONSTRAINT FK_T_CAMPOSEXTRA_T_PLT FOREIGN KEY(COD_PLANTILLA) REFERENCES T_PLT(PLT_COD));
   
COMMENT ON TABLE T_CAMPOS_EXTRA IS 'CAMPOS EXTRA DE UN TERCERO';
COMMENT ON COLUMN T_CAMPOS_EXTRA.COD_MUNICIPIO IS 'Codigo del municipio';
COMMENT ON COLUMN T_CAMPOS_EXTRA.COD_CAMPO IS 'Codigo del campo';
COMMENT ON COLUMN T_CAMPOS_EXTRA.ROTULO IS 'Rotulo a mostrar en la interfaz de usuario';
COMMENT ON COLUMN T_CAMPOS_EXTRA.DESCRIPCION IS 'Descripcion del campo';
COMMENT ON COLUMN T_CAMPOS_EXTRA.COD_PLANTILLA IS 'Código de la plantilla. FK que apunta a T_PLT';
COMMENT ON COLUMN T_CAMPOS_EXTRA.TIPO_DATO IS 'Tipo de dato';
COMMENT ON COLUMN T_CAMPOS_EXTRA.TAMANO IS 'Tamaño del campo';
COMMENT ON COLUMN T_CAMPOS_EXTRA.MASCARA IS 'Máscara';
COMMENT ON COLUMN T_CAMPOS_EXTRA.OBLIGATORIO IS '0 - No Obligatorio, 1- Obligatorio';
COMMENT ON COLUMN T_CAMPOS_EXTRA.ORDEN IS 'Orden de presentación del campo';
COMMENT ON COLUMN T_CAMPOS_EXTRA.ACTIVO IS 'NO- No activo, SI - Activo';
COMMENT ON COLUMN T_CAMPOS_EXTRA.DESPLEGABLE IS 'Código de campo suplementario de tipo desplegable';
    
	
CREATE TABLE T_CAMPOS_FECHA (	
	COD_CAMPO VARCHAR2(20) NOT NULL, 	
	COD_MUNICIPIO NUMBER(3,0) NOT NULL, 	
	COD_TERCERO NUMBER(12,0) NOT NULL,
	VALOR DATE NOT NULL, 		
	CONSTRAINT PK_T_CAMPOS_FECHA PRIMARY KEY (COD_MUNICIPIO,COD_CAMPO,COD_TERCERO),
	CONSTRAINT FK_T_CAMPOS_FECHA_T_TER FOREIGN KEY(COD_TERCERO) REFERENCES T_TER(TER_COD),
	CONSTRAINT FK_T_CAMPOS_FECHA_CAMPEXTRA FOREIGN KEY(COD_MUNICIPIO,COD_CAMPO) REFERENCES T_CAMPOS_EXTRA(COD_MUNICIPIO,COD_CAMPO));

COMMENT ON TABLE T_CAMPOS_FECHA IS 'VALORES DE CAMPOS DE TIPO FECHA PARA UN TERCERO';
COMMENT ON COLUMN T_CAMPOS_FECHA.COD_CAMPO IS 'Codigo del campo';
COMMENT ON COLUMN T_CAMPOS_FECHA.COD_MUNICIPIO IS 'Codigo del municipio';
COMMENT ON COLUMN T_CAMPOS_FECHA.COD_TERCERO IS 'Código del tercero';
COMMENT ON COLUMN T_CAMPOS_FECHA.VALOR IS 'Valor de la fecha';
	
CREATE TABLE T_CAMPOS_DESPLEGABLE (	
	COD_CAMPO VARCHAR2(20) NOT NULL, 	
	COD_MUNICIPIO NUMBER(3,0) NOT NULL, 	
	COD_TERCERO NUMBER(12,0) NOT NULL,
	VALOR VARCHAR2(4000 BYTE) NOT NULL, 		
	CONSTRAINT PK_T_CAMPOS_DESP PRIMARY KEY (COD_MUNICIPIO,COD_CAMPO,COD_TERCERO),
	CONSTRAINT FK_T_CAMPOS_DESP_T_TER FOREIGN KEY(COD_TERCERO) REFERENCES T_TER(TER_COD),
	CONSTRAINT FK_T_CAMPOS_DESP_CAMPEXTRA FOREIGN KEY(COD_MUNICIPIO,COD_CAMPO) REFERENCES T_CAMPOS_EXTRA(COD_MUNICIPIO,COD_CAMPO));
  
COMMENT ON TABLE T_CAMPOS_DESPLEGABLE IS 'VALORES DE CAMPOS DE TIPO DESPLEGABLE PARA UN TERCERO';
COMMENT ON COLUMN T_CAMPOS_DESPLEGABLE.COD_CAMPO IS 'Codigo del campo';
COMMENT ON COLUMN T_CAMPOS_DESPLEGABLE.COD_MUNICIPIO IS 'Codigo del municipio';
COMMENT ON COLUMN T_CAMPOS_DESPLEGABLE.COD_TERCERO IS 'Código del tercero';
COMMENT ON COLUMN T_CAMPOS_DESPLEGABLE.VALOR IS 'Valor del desplegable';


CREATE TABLE T_CAMPOS_NUMERICO (	
	COD_CAMPO VARCHAR2(20) NOT NULL, 	
	COD_MUNICIPIO NUMBER(3,0) NOT NULL, 	
	COD_TERCERO NUMBER(12,0) NOT NULL,
	VALOR NUMBER(10,2) NOT NULL, 		
	CONSTRAINT PK_T_CAMPOS_NUM PRIMARY KEY (COD_MUNICIPIO,COD_CAMPO,COD_TERCERO),
	CONSTRAINT FK_T_CAMPOS_NUM_T_TER FOREIGN KEY(COD_TERCERO) REFERENCES T_TER(TER_COD),
	CONSTRAINT FK_T_CAMPOS_NUM_CAMPEXTRA FOREIGN KEY(COD_MUNICIPIO,COD_CAMPO) REFERENCES T_CAMPOS_EXTRA(COD_MUNICIPIO,COD_CAMPO));
  
COMMENT ON TABLE T_CAMPOS_NUMERICO IS 'VALORES DE CAMPOS DE TIPO NUMÉRICO PARA UN TERCERO';
COMMENT ON COLUMN T_CAMPOS_NUMERICO.COD_CAMPO IS 'Codigo del campo';
COMMENT ON COLUMN T_CAMPOS_NUMERICO.COD_MUNICIPIO IS 'Codigo del municipio';
COMMENT ON COLUMN T_CAMPOS_NUMERICO.COD_TERCERO IS 'Código del tercero';
COMMENT ON COLUMN T_CAMPOS_NUMERICO.VALOR IS 'Valor del campo numérico';


CREATE TABLE T_CAMPOS_TEXTO (	
	COD_CAMPO VARCHAR2(20) NOT NULL, 	
	COD_MUNICIPIO NUMBER(3,0) NOT NULL, 	
	COD_TERCERO NUMBER(12,0) NOT NULL,
	VALOR VARCHAR2(4000 BYTE) NOT NULL, 		
	CONSTRAINT PK_T_CAMPOS_TXT PRIMARY KEY (COD_MUNICIPIO,COD_CAMPO,COD_TERCERO),
	CONSTRAINT FK_T_CAMPOS_TXT_T_TER FOREIGN KEY(COD_TERCERO) REFERENCES T_TER(TER_COD),
	CONSTRAINT FK_T_CAMPOS_TXT_CAMPEXTRA FOREIGN KEY(COD_MUNICIPIO,COD_CAMPO) REFERENCES T_CAMPOS_EXTRA(COD_MUNICIPIO,COD_CAMPO));
  
COMMENT ON TABLE T_CAMPOS_TEXTO IS 'VALORES DE CAMPOS DE TIPO TEXTO PARA UN TERCERO';
COMMENT ON COLUMN T_CAMPOS_TEXTO.COD_CAMPO IS 'Codigo del campo';
COMMENT ON COLUMN T_CAMPOS_TEXTO.COD_MUNICIPIO IS 'Codigo del municipio';
COMMENT ON COLUMN T_CAMPOS_TEXTO.COD_TERCERO IS 'Código del tercero';
COMMENT ON COLUMN T_CAMPOS_TEXTO.VALOR IS 'Valor del campo de tipo texto';
  

CREATE TABLE T_CAMPOS_TEXTO_LARGO (	
	COD_CAMPO VARCHAR2(20) NOT NULL, 	
	COD_MUNICIPIO NUMBER(3,0) NOT NULL, 	
	COD_TERCERO NUMBER(12,0) NOT NULL,
	VALOR CLOB NOT NULL, 		
	CONSTRAINT PK_T_CAMPOS_TXTL PRIMARY KEY (COD_MUNICIPIO,COD_CAMPO,COD_TERCERO),
	CONSTRAINT FK_T_CAMPOS_TXTL_T_TER FOREIGN KEY(COD_TERCERO) REFERENCES T_TER(TER_COD),
	CONSTRAINT FK_T_CAMPOS_TXTL_CAMPEXTRA FOREIGN KEY(COD_MUNICIPIO,COD_CAMPO) REFERENCES T_CAMPOS_EXTRA(COD_MUNICIPIO,COD_CAMPO));
  
COMMENT ON TABLE T_CAMPOS_TEXTO_LARGO IS 'VALORES DE CAMPOS DE TIPO TEXTO LARGO PARA UN TERCERO';
COMMENT ON COLUMN T_CAMPOS_TEXTO_LARGO.COD_CAMPO IS 'Codigo del campo';
COMMENT ON COLUMN T_CAMPOS_TEXTO_LARGO.COD_MUNICIPIO IS 'Codigo del municipio';
COMMENT ON COLUMN T_CAMPOS_TEXTO_LARGO.COD_TERCERO IS 'Código del tercero';
COMMENT ON COLUMN T_CAMPOS_TEXTO_LARGO.VALOR IS 'Valor del campo de tipo texto largo';



CREATE SEQUENCE SEQ_COMUNICACION START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE CACHE 20 NOORDER; 
CREATE SEQUENCE SEQ_ADJUNTO_COMUNICACION START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE CACHE 20 NOORDER;  

CREATE TABLE COMUNICACION(
	ID NUMBER(19,0) NOT NULL,
	ASUNTO VARCHAR2(200) NOT NULL,
	TEXTO CLOB NOT NULL,
	TIPO_DOCUMENTO NUMBER (2,0) NOT NULL,
	DOCUMENTO VARCHAR2(25) NOT NULL,
	NOMBRE VARCHAR2(300) NOT NULL,
	FECHA DATE NOT NULL,
	NUM_REGISTRO VARCHAR2(255) NULL,
	ORIGEN_REGISTRO VARCHAR2(255) NULL,
	XML_COMUNICACION CLOB  NULL,
	FIRMA CLOB NOT NULL,
	PLATAFORMA_FIRMA VARCHAR2(125) NOT NULL,
	COD_ORGANIZACION NUMBER(3,0) NOT NULL,
	EJERCICIO NUMBER(4,0) NOT NULL,
	NUM_EXPEDIENTE VARCHAR2(30) NOT NULL,
	LEIDA NUMBER(1,0) DEFAULT 0);

ALTER TABLE COMUNICACION ADD CONSTRAINT PK_COMUNICACION PRIMARY KEY(ID);

COMMENT ON COLUMN COMUNICACION.ID IS 'Clave primaria';
COMMENT ON COLUMN COMUNICACION.ASUNTO IS 'Asunto de la comunicación';
COMMENT ON COLUMN COMUNICACION.TEXTO IS 'Texto de la comunicación';
COMMENT ON COLUMN COMUNICACION.TIPO_DOCUMENTO IS 'Tipo de documento del interesado que ha enviado la comunicación';
COMMENT ON COLUMN COMUNICACION.DOCUMENTO IS 'Documento del interesado del expediente que ha enviado la comunicación';
COMMENT ON COLUMN COMUNICACION.NOMBRE IS 'Nombre y apellidos del usuario que ha enviado la comunicación';
COMMENT ON COLUMN COMUNICACION.FECHA IS 'Fecha en la que se ha enviado la comunicación';
COMMENT ON COLUMN COMUNICACION.NUM_REGISTRO IS 'Número de registro asociado a la comunicación';
COMMENT ON COLUMN COMUNICACION.ORIGEN_REGISTRO IS 'Nombre del registro en el que se ha consolidado una entrada para que quede constancia';
COMMENT ON COLUMN COMUNICACION.XML_COMUNICACION IS 'Contenido de la pantalla de alta de una comunicación que se ha firmado';
COMMENT ON COLUMN COMUNICACION.FIRMA IS 'Firma del formulario enviado';
COMMENT ON COLUMN COMUNICACION.PLATAFORMA_FIRMA IS 'Nombre de la plataforma de firma';
COMMENT ON COLUMN COMUNICACION.COD_ORGANIZACION IS 'Código de la organización';
COMMENT ON COLUMN COMUNICACION.EJERCICIO IS 'Ejercicio al que pertenece el expediente';
COMMENT ON COLUMN COMUNICACION.NUM_EXPEDIENTE IS 'Número del expediente en Flexia';
COMMENT ON COLUMN COMUNICACION.LEIDA IS 'Indica si la comunicación ha sido leída 0->NO, 1->SI';


 CREATE TABLE ADJUNTO_COMUNICACION(
	ID NUMBER(19,0) NOT NULL,
	ID_COMUNICACION NUMBER(19,0) NOT NULL,
	NOMBRE VARCHAR2(100) NOT NULL,
	TIPO_MIME VARCHAR2(80) NOT NULL,
	FECHA DATE NOT NULL,
	CONTENIDO BLOB NOT NULL,
	FIRMA CLOB NOT NULL,
	PLATAFORMA_FIRMA VARCHAR2(125)
  );
  
  ALTER TABLE ADJUNTO_COMUNICACION ADD CONSTRAINT PK_ADJUNTO_COMUNICACION PRIMARY KEY(ID);
  
  COMMENT ON COLUMN ADJUNTO_COMUNICACION.ID IS 'Clave primaria';
  COMMENT ON COLUMN ADJUNTO_COMUNICACION.ID_COMUNICACION IS 'Clave foranea COMUNICACION';
  COMMENT ON COLUMN ADJUNTO_COMUNICACION.NOMBRE IS 'Nombre completo del fichero con extensión incluida';
  COMMENT ON COLUMN ADJUNTO_COMUNICACION.TIPO_MIME IS 'Tipo MIME del fichero';
  COMMENT ON COLUMN ADJUNTO_COMUNICACION.FECHA IS 'Fecha de envío del adjunto';
  COMMENT ON COLUMN ADJUNTO_COMUNICACION.CONTENIDO IS 'Contenido binario del adjunto';
  COMMENT ON COLUMN ADJUNTO_COMUNICACION.FIRMA IS 'Firma del adjunto enviado';
  COMMENT ON COLUMN ADJUNTO_COMUNICACION.PLATAFORMA_FIRMA IS 'Nombre de la plataforma de firma';
  
 ALTER TABLE ADJUNTO_COMUNICACION ADD
 (CONSTRAINT FK_IDCOMUNICACION FOREIGN KEY(ID_COMUNICACION) 
 REFERENCES COMUNICACION(ID) );
 
 
 
CREATE SEQUENCE SEQ_FILE_EXT_NOTIFICACION START WITH 1 MAXVALUE 999999999999999999999999999 MINVALUE 1 NOCYCLE CACHE 20 NOORDER;

CREATE TABLE ADJUNTO_EXT_NOTIFICACION(
	ID NUMBER(19,0) NOT NULL,
	COD_MUNICIPIO NUMBER(3,0) NOT NULL,
	NUM_EXPEDIENTE VARCHAR2(30 BYTE) NOT NULL,
	COD_TRAMITE NUMBER(4,0) NOT NULL,
	OCU_TRAMITE NUMBER(4,0) NOT NULL,
	FIRMA CLOB NULL,
	FECHA DATE NOT NULL,
	CONTENIDO BLOB NOT NULL,
	ID_NOTIFICACION NUMBER(4,0),		
	PLATAFORMA_FIRMA VARCHAR2(100) NULL,
	COD_USUARIO_FIRMA NUMBER(4,0) NULL,
	NOMBRE VARCHAR2(255 BYTE) NOT NULL,
	TIPO_MIME VARCHAR2(100 BYTE) NOT NULL,
	ESTADO_FIRMA VARCHAR2(1 BYTE) NOT NULL,
	FECHA_FIRMA DATE,
	COD_USUARIO_RECHAZO NUMBER(4,0),
	FECHA_RECHAZO DATE,
	OBSERVACIONES_RECHAZO VARCHAR2(500 BYTE),
	TIPO_CERTIFICADO_FIRMA NUMBER(1,0),
	CONSTRAINT ADJUNTO_EXT_NOTIF_PK PRIMARY KEY(ID),
	CONSTRAINT COD_NOTIF_FK FOREIGN KEY(ID_NOTIFICACION) REFERENCES NOTIFICACION(CODIGO_NOTIFICACION));
	
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.ID IS 'Clave primaria';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.COD_MUNICIPIO IS 'Código de la municipio';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.NUM_EXPEDIENTE IS 'Número del expediente';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.COD_TRAMITE IS 'Código del trámite';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.OCU_TRAMITE IS 'Ocurrencia del trámite';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.FIRMA IS 'Firma del adjunto';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.FECHA IS 'Fecha de alta del adjunto';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.CONTENIDO IS 'Contenido binario del fichero';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.ID_NOTIFICACION IS 'Identificador de la notificación';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.PLATAFORMA_FIRMA IS 'Plataforma de la firma';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.NOMBRE IS 'Nombre del adjunto';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.TIPO_MIME IS 'Tipo MIME del adjunto';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.ESTADO_FIRMA IS 'ESTADO DE LA FIRMA';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.FECHA_FIRMA IS 'Fecha de la firma';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.COD_USUARIO_RECHAZO IS 'Código del usuario que ha rechazado la firma';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.FECHA_RECHAZO IS 'Fecha de rechazo';
COMMENT ON COLUMN ADJUNTO_EXT_NOTIFICACION.TIPO_CERTIFICADO_FIRMA IS 'Tipo de certificado con el que se ha hecho la firma. 0 es de organismo, 1 de usuario';






 CREATE TABLE NOTIFICACION(
    CODIGO_NOTIFICACION NUMBER(4,0) NOT NULL ENABLE, 
	NUM_EXPEDIENTE VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	COD_PROCEDIMIENTO VARCHAR2(5 BYTE) NOT NULL ENABLE, 
	EJERCICIO NUMBER(4,0) NOT NULL ENABLE, 
	COD_MUNICIPIO NUMBER(3,0) NOT NULL ENABLE, 
	COD_TRAMITE NUMBER(4,0) NOT NULL ENABLE, 
	OCU_TRAMITE NUMBER(4,0) NOT NULL ENABLE, 
	ACTO_NOTIFICADO VARCHAR2(2000 BYTE), 
	CADUCIDAD_NOTIFICACION NUMBER(4,0), 
	FIRMA BLOB, 
	TEXTO_NOTIFICACION VARCHAR2(2000 BYTE), 
	FIRMADA VARCHAR2(1 BYTE), 
	XML_NOTIFICACION CLOB DEFAULT NULL, 
	FECHA_ENVIO DATE DEFAULT NULL, 
	REGISTRO_RT VARCHAR2(225 BYTE) DEFAULT NULL, 
	CONSTRAINT NOTIFICACION_PK PRIMARY KEY (CODIGO_NOTIFICACION));
	 
	 
	 
CREATE TABLE AUTORIZADO_NOTIFICACION(	
	CODIGO_NOTIFICACION NUMBER(4,0) NOT NULL ENABLE, 
	COD_MUNICIPIO NUMBER(3,0) NOT NULL ENABLE, 
	EJERCICIO NUMBER(4,0) NOT NULL ENABLE, 
	NUM_EXPEDIENTE VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	COD_TERCERO NUMBER(12,0) NOT NULL ENABLE, 
	VER_TERCERO NUMBER(3,0) NOT NULL ENABLE, 
	CONSTRAINT AUTORIZADO_NOTIFICACION_PK PRIMARY KEY (CODIGO_NOTIFICACION, COD_MUNICIPIO,EJERCICIO, NUM_EXPEDIENTE, COD_TERCERO, VER_TERCERO),  
	CONSTRAINT AUTORIZADO_NOTIFICACION_FK1 FOREIGN KEY ("CODIGO_NOTIFICACION") REFERENCES NOTIFICACION (CODIGO_NOTIFICACION) ENABLE);


CREATE TABLE E_DOCS_FIRMAS_HISTORICO (	
	ID_HISTORICO NUMBER NOT NULL , 	
	ID_DOC_PRESENTADO NUMBER(15,0) NOT NULL , 	
	ID_VERSION NUMBER NOT NULL,
	DOC_FIRMA_ESTADO VARCHAR(2) NOT NULL,
        DOC_FIRMA_ORDEN NUMBER(2,0) NOT NULL,
        DOC_FIRMA_USUARIO NUMBER(4,0),
        DOC_FIRMA_FECHA DATE,
        DOC_FIRMA_OBSERVACIONES VARCHAR(255),
	CONSTRAINT PK_T_E_DOCS_FIRMAS_HISTORICO PRIMARY KEY (ID_HISTORICO),
	CONSTRAINT FK__DOCS_FIRMAS_DOC_PRESENTADO FOREIGN KEY(ID_DOC_PRESENTADO) REFERENCES E_DOCS_PRESENTADOS(PRESENTADO_COD));

COMMENT ON COLUMN E_DOCS_FIRMAS_HISTORICO.ID_HISTORICO IS 'Identificador único de fila';
COMMENT ON COLUMN E_DOCS_FIRMAS_HISTORICO.ID_DOC_PRESENTADO IS 'Identificador del documento al que se asocian las firmas';
COMMENT ON COLUMN E_DOCS_FIRMAS_HISTORICO.ID_VERSION IS 'Número de versionado histórico del circuito de firmas';
COMMENT ON COLUMN E_DOCS_FIRMAS_HISTORICO.DOC_FIRMA_ESTADO IS 'Estado de la firma';
COMMENT ON COLUMN E_DOCS_FIRMAS_HISTORICO.DOC_FIRMA_ORDEN IS 'Orden de la firma dentro de el circuito';
COMMENT ON COLUMN E_DOCS_FIRMAS_HISTORICO.DOC_FIRMA_USUARIO IS 'Uuario que efectuó la firma';
COMMENT ON COLUMN E_DOCS_FIRMAS_HISTORICO.DOC_FIRMA_FECHA IS 'Fecha en que se realizó la firma';
COMMENT ON COLUMN E_DOCS_FIRMAS_HISTORICO.DOC_FIRMA_OBSERVACIONES IS 'Descripción de observaciones de la firma';
	
	
CREATE TABLE MELANBIDE03_IMPRESION_CEPAP(
  NOMBRE_FICHERO VARCHAR2(225) NOT NULL, 
  FECHA_GENERACION DATE, 
  CONTENIDO LONG RAW, 
  CONSTRAINT MELANBIDE03_IMPRESION_CEP_PK1 PRIMARY KEY(NOMBRE_FICHERO));


CREATE TABLE MELANBIDE03_EXP_IMPR_CEPAP(
NOMBRE_FICHERO VARCHAR2(225) NOT NULL, 
NUM_EXPEDIENTE VARCHAR2(30) NOT NULL,
CONSTRAINT MELANBIDE03_EXP_IMPR_CEPA_PK PRIMARY KEY(NOMBRE_FICHERO, NUM_EXPEDIENTE));

ALTER TABLE MELANBIDE03_EXP_IMPR_CEPAP ADD CONSTRAINT MELANBIDE03_EXP_IMPR_CEPA_FK1 FOREIGN KEY(NOMBRE_FICHERO) 
	REFERENCES MELANBIDE03_IMPRESION_CEPAP(NOMBRE_FICHERO);

commit;	
	
	
COMMIT;
		-- Salida al sistema
spool off;
quit;
