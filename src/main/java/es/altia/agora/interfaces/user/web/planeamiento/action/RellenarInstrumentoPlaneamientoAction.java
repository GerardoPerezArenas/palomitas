/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.InstrumentoPlaneamientoForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.*;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class RellenarInstrumentoPlaneamientoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(RellenarInstrumentoPlaneamientoAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("RellenarInstrumentoPlaneamientoAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        Iterator registrosPlaneamientoIt = ((Collection) session.getAttribute("registrosPlaneamiento")).iterator();
        Integer numRegistro = new Integer(request.getParameter("numeroRegistro"));
        for (int i=0;i<(numRegistro.intValue()-1);i++) {
            if (registrosPlaneamientoIt.hasNext()) {
                registrosPlaneamientoIt.next();
            }
        }
        if (registrosPlaneamientoIt.hasNext()) {
            session.setAttribute("InstrumentoPlaneamientoForm", registrosPlaneamientoIt.next());
            request.setAttribute("registroActual", numRegistro.toString());
        } else {
            request.setAttribute("registroActual", "-1");
        }

        return (mapping.findForward("default"));
    }
}