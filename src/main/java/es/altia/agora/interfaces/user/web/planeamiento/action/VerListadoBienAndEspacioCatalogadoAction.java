/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.MantCatalogacionValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.BienAndEspacioCatalogadoForm;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.*;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class VerListadoBienAndEspacioCatalogadoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(VerListadoBienAndEspacioCatalogadoAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("VerListadoBienAndEspacioCatalogadoAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        Collection registrosBien = new ArrayList();
        Iterator registrosBienIt = ((Collection) session.getAttribute("registrosBien")).iterator();

        Iterator catalogacionesIt = null;
        MantCatalogacionValueObject catalogacionVO = null;
        BienAndEspacioCatalogadoForm bienForm = null;
        while (registrosBienIt.hasNext()) {
            bienForm = (BienAndEspacioCatalogadoForm) registrosBienIt.next();
                catalogacionesIt = bienForm.getCatalogaciones().iterator();
                while (catalogacionesIt.hasNext()) {
                    catalogacionVO = (MantCatalogacionValueObject) catalogacionesIt.next();
                    if (catalogacionVO.getCodigo().equals(bienForm.getCodigoCatalogacion())) {
                        bienForm.setCatalogacion(catalogacionVO.getDescripcion());
                        break;
                    }
                }
            registrosBien.add(bienForm);
        }
        registrosBienIt = registrosBien.iterator();
        if (registrosBienIt.hasNext()) {
            session.setAttribute("criteriosBien", setCriteriosBusqueda(
                    (HashMap) session.getAttribute("criteriosBien"),
                    (BienAndEspacioCatalogadoForm) registrosBienIt.next()));
        }
        session.setAttribute("registrosBien", registrosBien);

        return (mapping.findForward("default"));
    }

    //Funcion que permite fijar los criterios de busqueda para ser utilizados en los informes de impresion
    private HashMap setCriteriosBusqueda(HashMap criterios, BienAndEspacioCatalogadoForm bienForm){

        if (criterios.get("catalogacion")!=null) {
            criterios.put("catalogacion", bienForm.getCatalogacion());
        }
        if (criterios.get("gradoProteccion")!=null) {
            criterios.put("gradoProteccion", bienForm.getGradoProteccion());
        }
        if (criterios.get("relacionBien")!=null) {
            criterios.put("relacionBien", bienForm.getRelacionBien());
        }

        return criterios;
    }
}