/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.terceros.*;
import es.altia.agora.business.terceros.mantenimiento.persistence.*;
import es.altia.agora.business.terceros.persistence.*;
import es.altia.agora.business.util.*;
import es.altia.agora.interfaces.user.web.terceros.*;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;

import java.util.Vector;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class AbrirDomiciliosAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(AbrirDomiciliosAction.class.getName());
    String codPais = "";
    String codProvincia = "";
    String codMunicipio = "";

    public ActionForward performSession(ActionMapping mapping,
                                        ActionForm form,
                                        HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("AbrirDomiciliosAction.perform");
        // Validaremos los parametros del request especificados
        HttpSession session = request.getSession();

        if ((session.getAttribute("usuario") != null)) {
            UsuarioValueObject usuario = (UsuarioValueObject)session.getAttribute("usuario");
            String[] params = usuario.getParamsCon();
            ParametrosTerceroValueObject paramsTercero = (ParametrosTerceroValueObject)
                    session.getAttribute("parametrosTercero");
            codPais = paramsTercero.getPais();
            codProvincia = paramsTercero.getProvincia();
            codMunicipio = paramsTercero.getMunicipio();
            // Si usuario en sesion es nulo --> error.

            ActionErrors errors = new ActionErrors();

            //Vector tiposVias = new Vector();
            Vector listaCP = new Vector();
            BusquedaTercerosForm bTercerosForm = new BusquedaTercerosForm();
            GeneralValueObject gVO = new GeneralValueObject();
            TercerosValueObject terVO = new TercerosValueObject();
            /* anadir ECO/ESI */
            Vector listaECOs = new Vector();
            Vector listaESIs = new Vector();
            //Vector listaVias = new Vector();
            /* Fin anadir ECO/ESI */
            String codLocalizacion = request.getParameter("codigoDomicilio");
            gVO.setAtributo("codPais",codPais);
            gVO.setAtributo("codProvincia",codProvincia);
            //String codMunic = request.getParameter("codMun");
            gVO.setAtributo("codMunicipio",codMunicipio);
            listaCP = CodPostalesManager.getInstance().getListaCodPostales(params,gVO);
            //tiposVias = TiposViasManager.getInstance().getListaTiposVias(params);
            //bTercerosForm.setListaTipoVias(tiposVias);
            bTercerosForm.setListaCodPostales(listaCP);
            /* anadir ECO/ESI */
            listaECOs = EcosManager.getInstance().getListaEcos(gVO,params);
            listaESIs = EntidadesSingularesManager.getInstance().getListaEntidadesSingulares(gVO,params);
            //listaVias = ViasManager.getInstance().getListaViasSolas(params,gVO);
            bTercerosForm.setListaECOs(listaECOs);
            bTercerosForm.setListaESIs(listaESIs);
            //bTercerosForm.setListaVias(listaVias);
            /* fin anadir ECO/ESI */

            session.removeAttribute("RelacionDomicilios");
            session.setAttribute("BusquedaTercerosForm", bTercerosForm);
            if (m_Log.isDebugEnabled()) m_Log.debug("TramitacionExpedientesAction: localización |" + codLocalizacion + "|");
            //m_Log.debug("TramitacionExpedientesAction: localización |" + codLocalizacion + "|");

            if(codLocalizacion != null && !"".equals(codLocalizacion) && !"null".equals(codLocalizacion)) {
                TercerosManager terMan = TercerosManager.getInstance();
                Vector domicilios = new Vector();
                GeneralValueObject domicilioVO = new GeneralValueObject();

                domicilioVO.setAtributo("codDomicilio",codLocalizacion);
                domicilios=terMan.getDomiciliosById(params,domicilioVO);
                session.setAttribute("RelacionDomicilios",domicilios);
                bTercerosForm.setListaDomicilios(domicilios);
            }
            session.setAttribute("modoInicio", request.getParameter("modoInicio"));
        }
        /* Redirigimos al JSP de salida*/
        return (mapping.findForward("default"));        
    }
}
