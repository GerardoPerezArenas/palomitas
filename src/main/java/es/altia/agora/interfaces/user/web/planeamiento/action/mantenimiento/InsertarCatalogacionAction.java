/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action.mantenimiento;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.persistence.MantCatalogacionManager;
import es.altia.agora.business.planeamiento.mantenimiento.MantCatalogacionValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoCatalogacionesForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoCatalogacionForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Collection;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class InsertarCatalogacionAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(InsertarCatalogacionAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("InsertarCatalogacionAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        MantenimientoCatalogacionesForm catalogacionesForm = (MantenimientoCatalogacionesForm) form;
        MantCatalogacionValueObject catalogacionVO = new MantCatalogacionValueObject(catalogacionesForm.getCodigo(), catalogacionesForm.getDescripcion());
        MantCatalogacionManager.getInstance().create(catalogacionVO, params);

        Collection catalogaciones = ((MantenimientoCatalogacionesForm) session.getAttribute("MantenimientoCatalogacionesForm")).getCatalogaciones();
        MantenimientoCatalogacionForm catalogacionForm = new MantenimientoCatalogacionForm();
        catalogacionForm.setCodigo(catalogacionesForm.getCodigo());
        catalogacionForm.setDescripcion(catalogacionesForm.getDescripcion());
        catalogaciones.add(catalogacionForm);
        catalogacionesForm.setCatalogaciones(catalogaciones);

        session.setAttribute("MantenimientoCatalogacionesForm", catalogacionesForm);
        return (mapping.findForward("default"));
    }
}