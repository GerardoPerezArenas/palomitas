/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.BienAndEspacioCatalogadoForm;
import es.altia.agora.business.util.GeneralValueObject;
import es.altia.agora.business.terceros.persistence.TercerosManager;
import es.altia.agora.business.escritorio.UsuarioValueObject;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.*;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class RellenarBienAndEspacioCatalogadoFromListadoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(RellenarBienAndEspacioCatalogadoFromListadoAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("RellenarBienAndEspacioCatalogadoFromListadoAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        Iterator registrosBienIt = ((Collection) session.getAttribute("registrosBien")).iterator();
        BienAndEspacioCatalogadoForm bienForm = (BienAndEspacioCatalogadoForm) form;
        StringTokenizer st = new StringTokenizer(bienForm.getNumeroRegistro(), "/");
        String anho = (String) st.nextElement();
        Integer numero = new Integer((String) st.nextElement());
        BienAndEspacioCatalogadoForm bienEspForm = null;
        int i=1;
        while (registrosBienIt.hasNext()) {
            bienEspForm = (BienAndEspacioCatalogadoForm) registrosBienIt.next();
            if (bienEspForm.getAnho().equals(anho) && bienEspForm.getNumero().equals(numero.toString())) {
                session.setAttribute("BienAndEspacioCatalogadoForm", bienEspForm);
                request.setAttribute("registroActual", (new Integer(i).toString()));

                GeneralValueObject domicilioVO = new GeneralValueObject();
                domicilioVO.setAtributo("codDomicilio", bienEspForm.getCodigoDomicilio());
                Vector domicilios= TercerosManager.getInstance().getDomiciliosById(params,domicilioVO);
                request.setAttribute("domicilio", domicilios.get(0));
                break;
            }
            i++;
        }

        return (mapping.findForward("default"));
    }
}