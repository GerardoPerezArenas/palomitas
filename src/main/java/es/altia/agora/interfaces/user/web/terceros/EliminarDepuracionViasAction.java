/* Generated by Together */
package es.altia.agora.interfaces.user.web.terceros;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.terceros.mantenimiento.persistence.ProvinciasManager;
import es.altia.agora.business.terceros.mantenimiento.persistence.MunicipiosManager;
import es.altia.agora.business.terceros.mantenimiento.persistence.PaisesManager;
import es.altia.agora.business.terceros.mantenimiento.persistence.ViasManager;
import es.altia.agora.business.terceros.ParametrosTerceroValueObject;
import es.altia.agora.business.util.GeneralValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import es.altia.util.conexion.BDException;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Vector;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class EliminarDepuracionViasAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(EliminarDepuracionViasAction.class.getName());
    protected static Config m_ConfigTechnical = ConfigServiceHelper.getConfig("techserver");

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("EliminarDepuracionViasAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        String codPais = request.getParameter("codPais");
        String codProvincia = request.getParameter("codProvincia");
        String codMunicipio = request.getParameter("codMunicipio");
        String codVia = request.getParameter("codVia");

        String[] codVias = (request.getParameter("codVias")).split(",");
        GeneralValueObject gVO = new GeneralValueObject();
        gVO.setAtributo("codPais", codPais);
        gVO.setAtributo("codProvincia", codProvincia);
        gVO.setAtributo("codMunicipio", codMunicipio);
        gVO.setAtributo("codVia", codVia);

        try {
            ViasManager.getInstance().depurarVias(params, gVO, codVias);
        } catch (BDException e) {
            return (mapping.findForward("error"));
        }

        Vector vias = (Vector) session.getAttribute("DepuracionVias.vias");
        for (int i=0;i<vias.size();i++) {
            ViaForm viaForm = (ViaForm) vias.get(i);
            for (int j=0;j<codVias.length;j++) {
                if (codVias[j].equals(viaForm.getCodVia())) {
                    vias.remove(i);
                    i--;
                    break;
                }
            }
        }
        session.setAttribute("DepuracionVias.vias", vias);

        vias = (Vector) session.getAttribute("DepuracionVias.viasRepetidas");
        for (int i=0;i<vias.size();i++) {
            ViaForm viaForm = (ViaForm) vias.get(i);
            for (int j=0;j<codVias.length;j++) {
                if (codVias[j].equals(viaForm.getCodVia())) {
                    vias.remove(i);
                    i--;
                    break;
                }
            }
        }
        session.setAttribute("DepuracionVias.viasRepetidas", vias);

        return (mapping.findForward("default"));
    }
}