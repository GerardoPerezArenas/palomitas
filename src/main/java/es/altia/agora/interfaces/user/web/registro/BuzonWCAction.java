/* Generated by Together */
package es.altia.agora.interfaces.user.web.registro;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.registro.BuzonWCValueObject;
import es.altia.agora.business.registro.persistence.BuzonWCManager;
import es.altia.agora.interfaces.user.web.helper.ActionHelper;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;

import java.util.StringTokenizer;
import java.util.Vector;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

  public final class BuzonWCAction extends ActionSession {

  protected static Log m_Log =
          LogFactory.getLog(BuzonWCAction.class.getName());

      public ActionForward performSession(	ActionMapping mapping,
                  ActionForm form,
                  HttpServletRequest request,
                  HttpServletResponse response) throws IOException, ServletException {

    m_Log.debug("perform");
    ActionHelper myActionHelper = new ActionHelper(getLocale(request), getResources(request));


          // Validaremos los parametros del request especificados
    HttpSession session = request.getSession();
    String opcion ="";

    if ((session.getAttribute("usuario") != null)) {
      UsuarioValueObject usuario = (UsuarioValueObject)session.getAttribute("usuario");
      String[] params = usuario.getParamsCon();
      int cod_dep;
      int cod_uni;
      cod_dep= usuario.getDepCod();
      cod_uni= usuario.getUnidadOrgCod();

      // Si usuario en sesion es nulo --> error.

      ActionErrors errors = new ActionErrors();

      BuzonWCValueObject buzonVO = new BuzonWCValueObject();
      BuzonWCForm buzonWCForm = null;

      if (form == null) {
        m_Log.debug("Rellenamos el form de Buzon");
        form = new BuzonWCForm();
        if ("request".equals(mapping.getScope()))
          request.setAttribute(mapping.getAttribute(), form);
        else
          session.setAttribute(mapping.getAttribute(), form);
      }

      buzonWCForm = (BuzonWCForm)form;

      opcion = request.getParameter("opcion");
      if (m_Log.isInfoEnabled()) m_Log.info("la opcion en el action es " + opcion);

      if (opcion.equals("inicio")){
        Vector consulta = new Vector();
        try {
          consulta = BuzonWCManager.getInstance().getRegistrosWC(buzonVO,params);
          if(m_Log.isDebugEnabled()) m_Log.debug("el tamaño de la consulta es : " + consulta.size());
        } catch (Exception e) {
          consulta = new Vector();
        }
        session.setAttribute("RelacionRegistros",consulta);
        opcion="inicio";
      } else if ( "cargar_pagina".equals(opcion) ) {
        buzonVO = buzonWCForm.getBuzonWC();
        buzonWCForm.setBuzonWC(buzonVO);
        opcion = "cargar_pagina";
      } else if ( "aceptar".equals(opcion) ) {
      	buzonVO = buzonWCForm.getBuzonWC();
      	String numero = request.getParameter("numero");
      	buzonVO.setNumero(numero);
      	String ejercicio = request.getParameter("ejercicio");
      	buzonVO.setEjercicio(ejercicio);
      	int res = BuzonWCManager.getInstance().aceptarRegistro(buzonVO,params);
      	Vector consulta = new Vector();
      	String respOpcion = "";
      	if(res<1) {
      		respOpcion = "noAceptada";
      	} else {
      		consulta = BuzonWCManager.getInstance().getRegistrosWC(buzonVO,params);
      		session.setAttribute("RelacionRegistros",consulta);
      		respOpcion = "aceptada";
      		opcion = "cargar_pagina";
      	}
      	buzonWCForm.setBuzonWC(buzonVO);
      } else if ( "rechazar".equals(opcion) ) {
      	buzonVO = buzonWCForm.getBuzonWC();
      	String numero = request.getParameter("numero");
      	buzonVO.setNumero(numero);
      	String ejercicio = request.getParameter("ejercicio");
      	buzonVO.setEjercicio(ejercicio);
      	int res = BuzonWCManager.getInstance().rechazarRegistro(buzonVO,params);
      	Vector consulta = new Vector();
      	String respOpcion = "";
      	if(res<1) {
      		respOpcion = "noAceptada";
      	} else {
      		consulta = BuzonWCManager.getInstance().getRegistrosWC(buzonVO,params);
      		session.setAttribute("RelacionRegistros",consulta);
      		respOpcion = "aceptada";
      		opcion = "cargar_pagina";
      	}
      	buzonWCForm.setBuzonWC(buzonVO);
      } else if ( "inicioHistorico".equals(opcion) ) {
      	Vector consulta = new Vector();
        try {
          consulta = BuzonWCManager.getInstance().getRegistrosWCHistoricos(buzonVO,params);
          if(m_Log.isDebugEnabled()) m_Log.debug("el tamaño de la consulta es : " + consulta.size());
        } catch (Exception e) {
          consulta = new Vector();
        }
        session.setAttribute("RelacionRegistrosHistoricos",consulta);
        opcion="inicioHistorico";
      } else if ( "cargar_paginaHistorico".equals(opcion) ) {
        buzonVO = buzonWCForm.getBuzonWC();
        buzonWCForm.setBuzonWC(buzonVO);
        opcion = "cargar_paginaHistorico";
      } else if ( "verSolicitud".equals(opcion) ) {
      	String numero = request.getParameter("numero");
      	String ejercicio = request.getParameter("ejercicio");
      	String devolucion ="";
      	devolucion = BuzonWCManager.getInstance().getSolicitud(numero,ejercicio,params);
      	buzonVO.setXML(devolucion);
      	buzonWCForm.setBuzonWC(buzonVO);
      }
      
    } else { // No hay usuario.
      m_Log.debug("MantAnotacionRegistroAction --> no hay usuario");
      opcion = "no_usuario";
    }

  /* Redirigimos al JSP de salida*/
      return (mapping.findForward(opcion));

}

private Vector listaTemasSeleccionados(String listTemasSelecc) {
  Vector lista = new Vector();
  StringTokenizer valores = null;
  if (listTemasSelecc != null) {
    valores = new StringTokenizer(listTemasSelecc,"§¥,",false);
    while (valores.hasMoreTokens()) {
      String valor = valores.nextToken();
      lista.addElement(valor);
      if(m_Log.isDebugEnabled()) m_Log.debug("--> " + valor);
    }
  }
  return lista;
}

}