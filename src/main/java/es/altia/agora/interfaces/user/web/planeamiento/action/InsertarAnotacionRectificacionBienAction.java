/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.BienAndEspacioCatalogadoForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.RectificacionForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Collection;
import java.util.Iterator;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class InsertarAnotacionRectificacionBienAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(InsertarAnotacionRectificacionBienAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("InsertarAnotacionRectificacionBienAction.perform");
        HttpSession session = request.getSession();

        BienAndEspacioCatalogadoForm bienForm = (BienAndEspacioCatalogadoForm)
                session.getAttribute("BienAndEspacioCatalogadoForm");
        Collection rectificaciones = bienForm.getRectificaciones();
        Iterator rectificacionesIt = rectificaciones.iterator();
        RectificacionForm rectificacionForm = (RectificacionForm) form;
        String comentario = "";
        if (rectificacionForm.getNumeroRectificacion().equals("")) {
            Integer numero = new Integer(1);
            while (rectificacionesIt.hasNext()) {
                numero = new Integer((new Integer(((RectificacionForm) rectificacionesIt.next()).getNumeroRectificacion())).intValue()
                        +1);
            }
            rectificacionForm.setNumeroRectificacion(numero.toString());
            comentario = rectificacionForm.getComentarioRectificacion().replaceAll("\r\n", "@intro@");
            rectificacionForm.setComentarioRectificacion(comentario);
            rectificaciones.add(rectificacionForm);
        } else {
            RectificacionForm rectForm = null;
            rectificaciones = new ArrayList();
            while (rectificacionesIt.hasNext()) {
                rectForm = (RectificacionForm) rectificacionesIt.next();
                if (rectForm.getNumeroRectificacion().equals(rectificacionForm.getNumeroRectificacion())) {
                    rectForm.setFechaRectificacion(rectificacionForm.getFechaRectificacion());
                    rectForm.setComentarioRectificacion(rectificacionForm.getComentarioRectificacion().replaceAll("\r\n", "@intro@"));
                }
                rectificaciones.add(rectForm);
            }
        }
        bienForm.setRectificaciones(rectificaciones);
        session.setAttribute("BienAndEspacioCatalogadoForm", bienForm);

        return (mapping.findForward("default"));
    }
}