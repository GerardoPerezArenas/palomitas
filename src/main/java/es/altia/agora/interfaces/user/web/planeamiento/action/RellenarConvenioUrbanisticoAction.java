/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.ConvenioUrbanisticoForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.PromotorForm;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.*;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class RellenarConvenioUrbanisticoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(RellenarConvenioUrbanisticoAction.class.getName());
    protected static Config m_ConfigTechnical = ConfigServiceHelper.getConfig("techserver");

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("RellenarConvenioUrbanisticoAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        Iterator registrosConvenioIt = ((Collection) session.getAttribute("registrosConvenio")).iterator();
        Integer numRegistro = new Integer(request.getParameter("numeroRegistro"));
        for (int i=0;i<(numRegistro.intValue()-1);i++) {
            if (registrosConvenioIt.hasNext()) {
                registrosConvenioIt.next();
            }
        }
        if (registrosConvenioIt.hasNext()) {
            ConvenioUrbanisticoForm conUrbForm = (ConvenioUrbanisticoForm) registrosConvenioIt.next();
            conUrbForm.setFirmante(m_ConfigTechnical.getString("Planeamiento.Firmante"));
            session.setAttribute("ConvenioUrbanisticoForm", conUrbForm);
            request.setAttribute("registroActual", numRegistro.toString());
            String nombreFirmante = "";
            Iterator firmantesIt = conUrbForm.getPartesFirmantes().iterator();
            if (firmantesIt.hasNext()) {
                nombreFirmante = ((PromotorForm) firmantesIt.next()).getDescripcion();
            }
            request.setAttribute("nombreFirmante", nombreFirmante);
        } else {
            request.setAttribute("registroActual", "-1");
        }

        return (mapping.findForward("default"));
    }
}