/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.BienAndEspacioCatalogadoForm;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Collection;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class LimpiarBienAndEspacioCatalogadoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(LimpiarBienAndEspacioCatalogadoAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("LimpiarBienAndEspacioCatalogadoAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        BienAndEspacioCatalogadoForm bienForm = (BienAndEspacioCatalogadoForm)
                session.getAttribute("BienAndEspacioCatalogadoForm");

        Collection registrosBien = (Collection) session.getAttribute("registrosBien");
        Iterator registrosBienIt = null;
        if (registrosBien!=null) {
            registrosBienIt = registrosBien.iterator();
            registrosBien = new ArrayList();
            Integer numRegistro = new Integer(request.getParameter("numeroRegistro"));
            int i = 1;
            while (registrosBienIt.hasNext()) {
                BienAndEspacioCatalogadoForm bForm = (BienAndEspacioCatalogadoForm) registrosBienIt.next();
                if (numRegistro.intValue() == i) {
                    BienAndEspacioCatalogadoForm bienEspForm = (BienAndEspacioCatalogadoForm) bForm.clone();
                    registrosBien.add(bienEspForm);
                } else {
                    registrosBien.add(bForm);
                }
                i++;
            }
            session.setAttribute("registrosBien", registrosBien);
        }

        bienForm.setAnotaciones(new ArrayList());
        bienForm.setRectificaciones(new ArrayList());
        session.setAttribute("BienAndEspacioCatalogadoForm", bienForm);

        return (mapping.findForward("default"));
    }
}