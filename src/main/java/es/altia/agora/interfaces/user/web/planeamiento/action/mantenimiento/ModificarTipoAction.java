/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action.mantenimiento;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.persistence.MantTipoManager;
import es.altia.agora.business.planeamiento.mantenimiento.MantTipoValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoTiposForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoTipoForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Iterator;
import java.util.Collection;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class ModificarTipoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(ModificarTipoAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("ModificarTipoAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        MantenimientoTiposForm tiposForm = (MantenimientoTiposForm) form;
        MantTipoValueObject tipoVO = new MantTipoValueObject(new Character(
                tiposForm.getTipoRegistro().charAt(0)), tiposForm.getCodigoSubseccion(), tiposForm.getCodigo(),
                tiposForm.getDescripcion());
        MantTipoManager.getInstance().modify(tipoVO, params);

        Collection tipos = new ArrayList();
        MantenimientoTipoForm tipoForm = null;
        Iterator tiposIt = ((MantenimientoTiposForm)
                session.getAttribute("MantenimientoTiposForm")).getTipos().iterator();
        while (tiposIt.hasNext()) {
            tipoForm = (MantenimientoTipoForm) tiposIt.next();
            if (tipoForm.getCodigoSubseccion().equals(tiposForm.getCodigoSubseccion()) &&
                    tipoForm.getCodigo().equals(tiposForm.getCodigo())) {
                tipoForm.setDescripcion(tiposForm.getDescripcion());
            }
            tipos.add(tipoForm);
        }
        
        tiposForm.setTipos(tipos);

        session.setAttribute("MantenimientoTiposForm", tiposForm);
        return (mapping.findForward("default"));
    }
}