/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action.mantenimiento;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.persistence.MantSubseccionManager;
import es.altia.agora.business.planeamiento.mantenimiento.MantSubseccionValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoSubseccionesForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoSubseccionForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Iterator;
import java.util.Collection;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class CargarSubseccionesAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(CargarSubseccionesAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("CargarSubseccionesAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        if (form == null) {
            m_Log.debug("Rellenamos el form de Mantenimiento de Subsecciones");
            form = new MantenimientoSubseccionesForm();
            request.setAttribute(mapping.getAttribute(), form);
        }
        MantenimientoSubseccionForm subseccionForm = null;
        Character tipoRegistro = new Character(request.getParameter("tipoRegistro").charAt(0));
        Iterator subseccionesIt = MantSubseccionManager.getInstance().findByTipoRegistro(tipoRegistro,
                params).iterator();
        MantSubseccionValueObject subseccionVO = null;
        Collection subsecciones = new ArrayList();
        while (subseccionesIt.hasNext()) {
            subseccionVO = (MantSubseccionValueObject) subseccionesIt.next();
            subseccionForm = new MantenimientoSubseccionForm();
            subseccionForm.setTipoRegistro(subseccionVO.getTipoRegistro().toString());
            subseccionForm.setCodigo(subseccionVO.getCodigo());
            subseccionForm.setDescripcion(subseccionVO.getDescripcion());
            subsecciones.add(subseccionForm);
        }
        ((MantenimientoSubseccionesForm) form).setSubsecciones(subsecciones);
        ((MantenimientoSubseccionesForm) form).setTipoRegistro(request.getParameter("tipoRegistro"));
        session.setAttribute("MantenimientoSubseccionesForm", form);
        return (mapping.findForward("default"));
    }
}