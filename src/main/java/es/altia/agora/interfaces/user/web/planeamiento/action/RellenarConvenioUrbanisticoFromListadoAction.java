/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.ConvenioUrbanisticoForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.PromotorForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.*;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class RellenarConvenioUrbanisticoFromListadoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(RellenarConvenioUrbanisticoFromListadoAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("RellenarConvenioUrbanisticoAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        Iterator registrosConvenioIt = ((Collection) session.getAttribute("registrosConvenio")).iterator();
        ConvenioUrbanisticoForm convenioForm = (ConvenioUrbanisticoForm) form;
        StringTokenizer st = new StringTokenizer(convenioForm.getNumeroRegistro(), "/");
        String anho = (String) st.nextElement();
        Integer numero = new Integer((String) st.nextElement());
        ConvenioUrbanisticoForm conUrbForm = null;
        int i=1;
        while (registrosConvenioIt.hasNext()) {
            conUrbForm = (ConvenioUrbanisticoForm) registrosConvenioIt.next();
            if (conUrbForm.getAnho().equals(anho) && conUrbForm.getNumero().equals(numero.toString()) &&
                    conUrbForm.getCodigoSubseccion().equals(convenioForm.getCodigoSubseccion())) {
                session.setAttribute("ConvenioUrbanisticoForm", conUrbForm);
                request.setAttribute("registroActual", (new Integer(i).toString()));
                String nombreFirmante = "";
                Iterator firmantesIt = conUrbForm.getPartesFirmantes().iterator();
                if (firmantesIt.hasNext()) {
                    nombreFirmante = ((PromotorForm) firmantesIt.next()).getDescripcion();
                }
                request.setAttribute("nombreFirmante", nombreFirmante);
                break;
            }
            i++;
        }

        return (mapping.findForward("default"));
    }
}