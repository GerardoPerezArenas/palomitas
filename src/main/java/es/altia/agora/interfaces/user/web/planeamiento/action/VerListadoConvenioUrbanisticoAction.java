/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.MantSubseccionValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.MantAmbitoValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.ConvenioUrbanisticoForm;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.*;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class VerListadoConvenioUrbanisticoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(VerListadoConvenioUrbanisticoAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("VerListadoConvenioUrbanisticoAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        Collection registrosConvenio = new ArrayList();
        Iterator registrosConvenioIt = ((Collection) session.getAttribute("registrosConvenio")).iterator();

        Iterator subseccionesIt = null;
        Iterator ambitosIt = null;
        MantSubseccionValueObject subseccionVO = null;
        MantAmbitoValueObject ambitoVO = null;
        ConvenioUrbanisticoForm convenioForm = null;
        while (registrosConvenioIt.hasNext()) {
            convenioForm = (ConvenioUrbanisticoForm) registrosConvenioIt.next();
            subseccionesIt = convenioForm.getSubsecciones().iterator();
            while (subseccionesIt.hasNext()) {
                subseccionVO = (MantSubseccionValueObject) subseccionesIt.next();
                if (subseccionVO.getCodigo().equals(convenioForm.getCodigoSubseccion())) {
                    convenioForm.setSubseccion(subseccionVO.getDescripcion());
                    break;
                }
            }
            ambitosIt = convenioForm.getAmbitos().iterator();
            while (ambitosIt.hasNext()) {
                ambitoVO = (MantAmbitoValueObject) ambitosIt.next();
                if (ambitoVO.getCodigo().equals(convenioForm.getCodigoAmbito())) {
                    convenioForm.setAmbito(ambitoVO.getDescripcion());
                    break;
                }
            }
            registrosConvenio.add(convenioForm);
        }
        registrosConvenioIt = registrosConvenio.iterator();
        if (registrosConvenioIt.hasNext()) {
            session.setAttribute("criteriosConvenio", setCriteriosBusqueda(
                    (HashMap) session.getAttribute("criteriosConvenio"),
                    (ConvenioUrbanisticoForm) registrosConvenioIt.next()));
        }
        session.setAttribute("registrosConvenio", registrosConvenio);

        return (mapping.findForward("default"));
    }

    //Funcion que permite fijar los criterios de busqueda para ser utilizados en los informes de impresion
    private HashMap setCriteriosBusqueda(HashMap criterios, ConvenioUrbanisticoForm convenioForm){

        if (criterios.get("subseccion")!=null) {
            criterios.put("subseccion", convenioForm.getSubseccion());
        }
        if (criterios.get("ambito")!=null) {
            criterios.put("ambito", convenioForm.getAmbito());
        }
        if (criterios.get("organoAprobacion")!=null) {
            criterios.put("organoAprobacion", convenioForm.getOrganoAprobacion());
        }

        return criterios;
    }
}