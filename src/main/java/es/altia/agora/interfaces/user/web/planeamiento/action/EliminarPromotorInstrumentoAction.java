/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.InstrumentoPlaneamientoForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.PromotorForm;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Collection;
import java.util.Iterator;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class EliminarPromotorInstrumentoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(EliminarPromotorInstrumentoAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("EliminarPromotorInstrumentoAction.perform");
        HttpSession session = request.getSession();

        InstrumentoPlaneamientoForm instrumentoForm = (InstrumentoPlaneamientoForm)
                session.getAttribute("InstrumentoPlaneamientoForm");
        Collection promotores = new ArrayList();
        Iterator promotoresIt = instrumentoForm.getCodigosPromotor().iterator();
        PromotorForm promotorForm = (PromotorForm) form;
        PromotorForm promForm = null;
        while (promotoresIt.hasNext()) {
            promForm = (PromotorForm) promotoresIt.next();
            if (!promForm.getCodigo().equals(promotorForm.getCodigo())) {
                promotores.add(promForm);
            }
        }

        instrumentoForm.setCodigosPromotor(promotores);
        session.setAttribute("InstrumentoPlaneamientoForm", instrumentoForm);

        return (mapping.findForward("default"));
    }
}