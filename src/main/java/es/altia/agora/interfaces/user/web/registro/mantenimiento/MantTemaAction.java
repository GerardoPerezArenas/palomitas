  /* Generated by Together */
  package es.altia.agora.interfaces.user.web.registro.mantenimiento;

import es.altia.agora.business.escritorio.RegistroUsuarioValueObject;
import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.registro.RegistroValueObject;
import es.altia.agora.business.registro.mantenimiento.MantTemasValueObject;
import es.altia.agora.business.registro.mantenimiento.persistence.MantTemaManager;
import es.altia.agora.business.registro.persistence.RegistroAperturaCierreManager;
import es.altia.agora.interfaces.user.web.helper.ActionHelper;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.technical.Fecha;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;

import java.util.Date;
import java.util.Vector;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

    public final class MantTemaAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(MantTemaAction.class.getName());

        public ActionForward performSession(	ActionMapping mapping,
                    ActionForm form,
                    HttpServletRequest request,
                          HttpServletResponse response) throws IOException, ServletException {

      m_Log.debug("perform");
      ActionHelper myActionHelper = new ActionHelper(getLocale(request), getResources(request));
            ActionErrors errors = new ActionErrors();
      String[] params = null;
      HttpSession session = request.getSession();
      RegistroUsuarioValueObject regUsuarioVO = new RegistroUsuarioValueObject();

      if (session.getAttribute("usuario") != null && session.getAttribute("registroUsuario") !=null){
        UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
        regUsuarioVO = (RegistroUsuarioValueObject)session.getAttribute("registroUsuario");
        params = usuarioVO.getParamsCon();
      }

        String opcion = request.getParameter("opcion");
        int cod_dep;
        int cod_uni;
        cod_dep= regUsuarioVO.getDepCod();
        cod_uni= regUsuarioVO.getUnidadOrgCod();
        MantTemasValueObject temasVO = new MantTemasValueObject();
        Date fRegCerradoE = new Date();
        Date fRegCerradoS = new Date();
        RegistroValueObject elRegistroESVO = new RegistroValueObject();

      if (opcion.equals("cargar")){

        // Rellenamos el form de mantenimientoTemas
        if (form == null) {
          m_Log.debug("Rellenamos el form de Mantenimiento Temas");
          form = new MantTemaForm();
          if ("request".equals(mapping.getScope()))
            request.setAttribute(mapping.getAttribute(), form);
          else
            session.setAttribute(mapping.getAttribute(), form);
        }

        MantTemaForm temaForm = (MantTemaForm)form;

        /* Obtenemos ahora el mantenimientoTemas de la capa de negocio*/
        elRegistroESVO.setIdentDepart(cod_dep);
        elRegistroESVO.setUnidadOrgan(cod_uni);
        elRegistroESVO.setTipoReg("E");
        fRegCerradoE = RegistroAperturaCierreManager.getInstance().getFechaRegistroCerrado(elRegistroESVO,params);
        Fecha f = new Fecha();
        String fechaCerradoE = f.obtenerString(fRegCerradoE);
        elRegistroESVO.setTipoReg("S");
        fRegCerradoS = RegistroAperturaCierreManager.getInstance().getFechaRegistroCerrado(elRegistroESVO,params);
        String fechaCerradoS = f.obtenerString(fRegCerradoS);
        Vector lista= new Vector();
        lista = MantTemaManager.getInstance().buscaTemas(params);
        temaForm.setCodigos(lista);
        Vector util= new Vector();
        util = MantTemaManager.getInstance().buscaTemasUtilizados(params);
        temaForm.setUtilizados(util);
        Vector utilizadosCerrados = new Vector();
        utilizadosCerrados = MantTemaManager.getInstance().buscaTemasUtilizadosCerrados(fechaCerradoE,fechaCerradoS,params);
        temaForm.setUtilizadosCerrados(utilizadosCerrados);

        /* Redirigimos al JSP de salida*/
        return (mapping.findForward(opcion));

      }else if(opcion.equals("eliminar")) {
        elRegistroESVO.setIdentDepart(cod_dep);
        elRegistroESVO.setUnidadOrgan(cod_uni);
        elRegistroESVO.setTipoReg("E");
        fRegCerradoE = RegistroAperturaCierreManager.getInstance().getFechaRegistroCerrado(elRegistroESVO,params);
        Fecha f = new Fecha();
        String fechaCerradoE = f.obtenerString(fRegCerradoE);
        elRegistroESVO.setTipoReg("S");
        fRegCerradoS = RegistroAperturaCierreManager.getInstance().getFechaRegistroCerrado(elRegistroESVO,params);
        String fechaCerradoS = f.obtenerString(fRegCerradoS);
        MantTemaForm temaForm = (MantTemaForm)form;
        String identificador = request.getParameter("identificador");
        if(m_Log.isDebugEnabled()) m_Log.debug("el identificador es : " + identificador);
        temasVO.setIde(Integer.parseInt(identificador));
        if(m_Log.isDebugEnabled()) m_Log.debug("el identificador es : " + temasVO.getIde());
        Vector lista = new Vector();
        lista = MantTemaManager.getInstance().eliminarTema(temasVO,params);
        temaForm.setCodigos(lista);
        Vector util= new Vector();
        util = MantTemaManager.getInstance().buscaTemasUtilizados(params);
        temaForm.setUtilizados(util);
        Vector utilizadosCerrados = new Vector();
        utilizadosCerrados = MantTemaManager.getInstance().buscaTemasUtilizadosCerrados(fechaCerradoE,fechaCerradoS,params);
        temaForm.setUtilizadosCerrados(utilizadosCerrados);
        return (mapping.findForward("vuelveCargar"));

      } else if(opcion.equals("modificar")) {
        elRegistroESVO.setIdentDepart(cod_dep);
        elRegistroESVO.setUnidadOrgan(cod_uni);
        elRegistroESVO.setTipoReg("E");
        fRegCerradoE = RegistroAperturaCierreManager.getInstance().getFechaRegistroCerrado(elRegistroESVO,params);
        Fecha f = new Fecha();
        String fechaCerradoE = f.obtenerString(fRegCerradoE);
        elRegistroESVO.setTipoReg("S");
        fRegCerradoS = RegistroAperturaCierreManager.getInstance().getFechaRegistroCerrado(elRegistroESVO,params);
        String fechaCerradoS = f.obtenerString(fRegCerradoS);
        MantTemaForm temaForm = (MantTemaForm)form;
        String identificador = request.getParameter("identificador");
        if(m_Log.isDebugEnabled()) m_Log.debug("el identificador es : " + identificador);
        temasVO.setIde(Integer.parseInt(identificador));
        String codigo = request.getParameter("codigo");
        String descripcion = request.getParameter("txtNomeDescripcion");
        temasVO.setCodigo(codigo);
        temasVO.setTxtNomeDescripcion(descripcion);
        Vector lista = new Vector();
        lista = MantTemaManager.getInstance().modificarTema(temasVO,params);
        temaForm.setCodigos(lista);
        Vector util= new Vector();
        util = MantTemaManager.getInstance().buscaTemasUtilizados(params);
        temaForm.setUtilizados(util);
        Vector utilizadosCerrados = new Vector();
        utilizadosCerrados = MantTemaManager.getInstance().buscaTemasUtilizadosCerrados(fechaCerradoE,fechaCerradoS,params);
        temaForm.setUtilizadosCerrados(utilizadosCerrados);
        return (mapping.findForward("vuelveCargar"));

      } else if(opcion.equals("alta")) {
        elRegistroESVO.setIdentDepart(cod_dep);
        elRegistroESVO.setUnidadOrgan(cod_uni);
        elRegistroESVO.setTipoReg("E");
        fRegCerradoE = RegistroAperturaCierreManager.getInstance().getFechaRegistroCerrado(elRegistroESVO,params);
        Fecha f = new Fecha();
        String fechaCerradoE = f.obtenerString(fRegCerradoE);
        elRegistroESVO.setTipoReg("S");
        fRegCerradoS = RegistroAperturaCierreManager.getInstance().getFechaRegistroCerrado(elRegistroESVO,params);
        String fechaCerradoS = f.obtenerString(fRegCerradoS);
        MantTemaForm temaForm = (MantTemaForm)form;
        String codigo = request.getParameter("codigo");
        String descripcion = request.getParameter("txtNomeDescripcion");
        temasVO.setCodigo(codigo);
        temasVO.setTxtNomeDescripcion(descripcion);
        Vector lista = new Vector();
        lista = MantTemaManager.getInstance().altaTema(temasVO,params);
        if(m_Log.isDebugEnabled()) m_Log.debug("el tamaño del vector lista en el action es : " + lista.size());
        temaForm.setCodigos(lista);
        Vector util= new Vector();
        util = MantTemaManager.getInstance().buscaTemasUtilizados(params);
        temaForm.setUtilizados(util);
        Vector utilizadosCerrados = new Vector();
        utilizadosCerrados = MantTemaManager.getInstance().buscaTemasUtilizadosCerrados(fechaCerradoE,fechaCerradoS,params);
        temaForm.setUtilizadosCerrados(utilizadosCerrados);
        return (mapping.findForward("vuelveCargar"));
      } else if(opcion.equals("buscarTemas")) {
      	MantTemaForm temaForm = (MantTemaForm)form;
      	String nombreTema = request.getParameter("nombreTema");
      	Vector listaTemas= new Vector();
        listaTemas = MantTemaManager.getInstance().buscaTemasDescripcion(params,nombreTema);
        temaForm.setCodigos(listaTemas);
        return (mapping.findForward(opcion));
      } else if(opcion.equals("salir")){

        if ((session.getAttribute("MantTemaForm") != null))
          session.removeAttribute("MantTemaForm");
        /* Redirigimos al JSP de salida*/
        return (mapping.findForward(opcion));

      }else{

        return (new ActionForward(mapping.getInput()));
      }
        }

    }
