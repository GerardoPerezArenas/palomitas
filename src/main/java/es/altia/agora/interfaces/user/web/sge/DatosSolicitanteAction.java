  /* Generated by Together */
package es.altia.agora.interfaces.user.web.sge;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.registro.persistence.AnotacionRegistroManager;
import es.altia.agora.business.sge.DatosSolicitanteValueObject;
import es.altia.agora.business.sge.persistence.DefinicionProcedimientosManager;
import es.altia.agora.business.terceros.*;
import es.altia.agora.business.terceros.mantenimiento.persistence.*;
import es.altia.agora.business.util.GeneralValueObject;
import es.altia.agora.interfaces.user.web.helper.ActionHelper;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class DatosSolicitanteAction extends ActionSession {

  protected static Log m_Log =
          LogFactory.getLog(DatosSolicitanteAction.class.getName());

  public ActionForward performSession(ActionMapping mapping,ActionForm form,
    HttpServletRequest request, HttpServletResponse response) 
    throws IOException, ServletException {

    m_Log.debug("perform");
    ActionHelper myActionHelper = new ActionHelper(getLocale(request), getResources(request));


          // Validaremos los parametros del request especificados
    HttpSession session = request.getSession();
    String opcion ="";

    if ((session.getAttribute("usuario") != null)) {
      UsuarioValueObject usuario = (UsuarioValueObject)session.getAttribute("usuario");
      ParametrosTerceroValueObject paramsTercero = (ParametrosTerceroValueObject)session.getAttribute("parametrosTercero");
      String codPais = paramsTercero.getPais();
      String codProvincia = paramsTercero.getProvincia();
      String[] params = usuario.getParamsCon();
      int cod_dep;
      int cod_uni;
      cod_dep= usuario.getDepCod();
      cod_uni= usuario.getUnidadOrgCod();

      // Si usuario en sesion es nulo --> error.

      ActionErrors errors = new ActionErrors();

      DatosSolicitanteValueObject datosSolVO = new DatosSolicitanteValueObject();
      DatosSolicitanteForm datosSolForm = null;

      if (form == null) {
        m_Log.debug("Rellenamos el form de Datos de Solicitante");
        form = new DatosSolicitanteForm();
        if ("request".equals(mapping.getScope()))
          request.setAttribute(mapping.getAttribute(), form);
        else
          session.setAttribute(mapping.getAttribute(), form);
      }

      datosSolForm = (DatosSolicitanteForm)form;

      opcion = request.getParameter("opcion");
      if (m_Log.isInfoEnabled()) m_Log.info("la opcion en el action es " + opcion);

      if (opcion.equals("inicio")){
        GeneralValueObject gVO = new GeneralValueObject();
        gVO.setAtributo("codPais",codPais);
        gVO.setAtributo("codProvincia",codProvincia);
      
        // Cargar listas.
        datosSolVO.setListaDepartamentos(DefinicionProcedimientosManager.getInstance().getListaTiposDepartamentos(params));
        datosSolVO.setListaTiposDocumentos(AnotacionRegistroManager.getInstance().getListaTiposIdInteresado(params));
        datosSolVO.setListaProvincias(ProvinciasManager.getInstance().getListaProvincias(gVO,params));
        datosSolVO.setListaPaises(PaisesManager.getInstance().getListaPaises(params));

        datosSolForm.setDatosSolicitante(datosSolVO);

        opcion = "inicio";
      }
    }else{ // No hay usuario.
      m_Log.debug("MantAnotacionRegistroAction --> no hay usuario");
      opcion = "no_usuario";
    }
    /* Redirigimos al JSP de salida*/
    return (mapping.findForward(opcion));
  }
}