/* Generated by Together */
package es.altia.agora.interfaces.user.web.terceros;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.terceros.persistence.TercerosManager;
import es.altia.agora.business.util.GeneralValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Vector;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class BuscarTercerosRepetidosByNomAndDocDepuracionAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(BuscarTercerosRepetidosByNomAndDocDepuracionAction.class.getName());
    protected static Config m_ConfigTechnical = ConfigServiceHelper.getConfig("techserver");

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("BuscarTercerosRepetidosByNomAndDocDepuracionAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        DepuracionTercerosForm depuracionTercerosForm = (DepuracionTercerosForm) form;

        GeneralValueObject gVO = new GeneralValueObject();
        String codTipoDocumento = depuracionTercerosForm.getCodTipoDocumento();
        if (codTipoDocumento==null || codTipoDocumento.equals("")) {
            codTipoDocumento = "*";
        }
        gVO.setAtributo("codTipoDocumento", codTipoDocumento);
        String documento = depuracionTercerosForm.getDocumento();
        String nombre = depuracionTercerosForm.getNombre();
        String apellido1 = depuracionTercerosForm.getApellido1();
        String apellido2 = depuracionTercerosForm.getApellido2();

        if (documento==null || documento.equals("")) {
            documento = "*";
        }
        gVO.setAtributo("documento", documento);
        gVO.setAtributo("nombreCompleto", concatenaNombreTercero(depuracionTercerosForm.getNombre(),
                depuracionTercerosForm.getApellido1(), depuracionTercerosForm.getApellido2()));

        if (nombre==null || nombre.equals("")) {
            nombre = "*";
        }
        if (apellido1==null || apellido1.equals("")) {
            apellido1 = "*";
        }
        if (apellido2==null || apellido2.equals("")) {
            apellido2 = "*";
        }

        gVO.setAtributo("nombre", nombre);
        gVO.setAtributo("apellido1", apellido1);
        gVO.setAtributo("apellido2", apellido2);

        Vector resultado;
        if (nombre.equals("*") && apellido1.equals("*") && apellido2.equals("*")) {
            resultado = TercerosManager.getInstance().getTercerosRepByNomCompleto(params, gVO);
        } else {
            resultado = TercerosManager.getInstance().getTercerosRepByNomAndDoc(params, gVO);
        }

        Vector terceros = new Vector();

        // Creamos los indices para pasar a la jsp unicamente una pagina de datos.
        //int startIndex = depuracionTercerosForm.getStartIndex();
        //int count = depuracionTercerosForm.getCount();
        int startIndex=0;
        int count=0;

        try{
           	startIndex=Integer.parseInt(request.getParameter("startIndex"));
        	count=Integer.parseInt(request.getParameter("count"));
        }
        catch(Exception e){
        	 e.printStackTrace();
             if(m_Log.isErrorEnabled()) m_Log.error(e.getMessage());
        }

        int endIndex = startIndex + count - 1;
        if (endIndex > resultado.size()) endIndex = resultado.size();

        for (int i = startIndex-1; i < endIndex; i++) {
            gVO = (GeneralValueObject) resultado.get(i);
            TerceroForm terceroForm = new TerceroForm();
            terceroForm.setTipoDocumento((String) gVO.getAtributo("T_TID.TID_DES"));
            terceroForm.setDocumento((String) gVO.getAtributo("T_TER.TER_DOC"));
            terceroForm.setCodTercero((String) gVO.getAtributo("T_TER.TER_COD"));
            terceroForm.setNombre((String) gVO.getAtributo("T_TER.TER_NOM"));
            terceroForm.setApellido1((String) gVO.getAtributo("T_TER.TER_AP1"));
            terceroForm.setApellido2((String) gVO.getAtributo("T_TER.TER_AP2"));
            
            terceros.add(terceroForm);
        }

        session.setAttribute("DepuracionTerceros.tercerosRepetidos", terceros);
        request.setAttribute("DepuracionTerceros.numResultados", Integer.toString(resultado.size()));
        return (mapping.findForward("default"));
    }

    private String concatenaNombreTercero(String nombre, String apellido1, String apellido2){
        String nom = "";
        nom = (apellido1!=null && !apellido1.equals(""))? nom +" "+ apellido1:nom + "*";
        nom = (apellido2!=null && !apellido2.equals(""))? nom +" "+ apellido2:nom + "*";
        nom = (nombre!=null && !nombre.equals(""))?nom+", "+ nombre:nom + "*";
        return nom;
    }
}