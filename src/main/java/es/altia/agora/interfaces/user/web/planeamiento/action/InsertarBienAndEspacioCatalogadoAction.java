/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.RegistroValueObject;
import es.altia.agora.business.planeamiento.AnotacionRegistroValueObject;
import es.altia.agora.business.planeamiento.PromotorValueObject;
import es.altia.agora.business.planeamiento.persistence.RegistroPlaneamientoManager;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.BienAndEspacioCatalogadoForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.AnotacionForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.PromotorForm;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import es.altia.util.exceptions.InternalErrorException;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Calendar;
import java.util.Iterator;
import java.util.Collection;
import java.util.ArrayList;
import java.text.SimpleDateFormat;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class InsertarBienAndEspacioCatalogadoAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(InsertarBienAndEspacioCatalogadoAction.class.getName());
    protected static Config m_ConfigTechnical = ConfigServiceHelper.getConfig("techserver");

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        try {
            m_Log.info("InsertarBienAndEspacioCatalogadoAction.perform");
            String[] params = null;
            HttpSession session = request.getSession();

            if (session.getAttribute("usuario") != null){
                UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
                params = usuarioVO.getParamsCon();
            }

            BienAndEspacioCatalogadoForm bienForm = (BienAndEspacioCatalogadoForm) form;
            BienAndEspacioCatalogadoForm bienSessionForm = (BienAndEspacioCatalogadoForm)
                    session.getAttribute("BienAndEspacioCatalogadoForm");
            Calendar fechaAlta = Calendar.getInstance();
            Calendar fechaAprobacion = Calendar.getInstance();
            Calendar fechaBaja = Calendar.getInstance();
            Calendar fechaPublicacion = Calendar.getInstance();

            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            try {
                String fecha = bienForm.getFechaAprobacion();
                if ((fecha==null) || (fecha.equals(""))) {
                    fechaAprobacion = null;
                } else {
                    fechaAprobacion.setTime(format.parse(fecha));
                }
                fecha = bienForm.getFechaBaja();
                if ((fecha==null) || (fecha.equals(""))) {
                    fechaBaja = null;
                } else {
                    fechaBaja.setTime(format.parse(fecha));
                }
                fecha = bienForm.getFechaPublicacion();
                if ((fecha==null) || (fecha.equals(""))) {
                    fechaPublicacion = null;
                } else {
                    fechaPublicacion.setTime(format.parse(fecha));
                }
            } catch (Exception e) {//En principio nunca va a entrar
                e.printStackTrace();
                if (m_Log.isErrorEnabled()) m_Log.error(e.getMessage());
            }
            Integer codigoDomicilio = null;
            if (bienForm.getCodigoDomicilio()!=null && !bienForm.getCodigoDomicilio().equals("")) {
                codigoDomicilio = new Integer(bienForm.getCodigoDomicilio());
            }
            Calendar fechaYear = Calendar.getInstance();
            SimpleDateFormat formatYear = new SimpleDateFormat("yyyy");
            RegistroValueObject registroVO = new RegistroValueObject(
                    new Character(bienForm.getTipoRegistro().charAt(0)),
                    m_ConfigTechnical.getString("Planeamiento.BienAndEspacioCatalogado.Subseccion"),
                    null,
                    null, formatYear.format(fechaYear.getTime()),
                    bienForm.getNumeroRegistro(), fechaAlta, fechaAprobacion, null, fechaBaja,
                    null, null,null, null,
                    null, null,
                    null, bienForm.getDenominacionBien(), codigoDomicilio, bienForm.getCodigoCatalogacion(),
                    bienForm.getCodigoGradoProteccion(), bienForm.getCodigoRelacionBien(), fechaPublicacion,
                    bienForm.getNumeroPublicacion(), bienForm.getObservaciones(), bienForm.getArchivo());

            Iterator anotacionesIt = bienSessionForm.getAnotaciones().iterator();
            Collection anotaciones = new ArrayList();
            AnotacionRegistroValueObject anotacionVO = null;
            AnotacionForm anotacionForm = null;
            Calendar fechaAnotacion = null;
            String comentario = "";
            while (anotacionesIt.hasNext()) {
                anotacionForm = (AnotacionForm) anotacionesIt.next();
                fechaAnotacion = Calendar.getInstance();
                try {
                    String fecha = anotacionForm.getFechaAnotacion();
                    if ((fecha==null) || (fecha.equals(""))) {
                        fechaAnotacion = null;
                    } else {
                        fechaAnotacion.setTime(format.parse(fecha));
                    }
                } catch (Exception e) {//En principio nunca va a entrar
                    e.printStackTrace();
                    if (m_Log.isErrorEnabled()) m_Log.error(e.getMessage());
                }
                comentario = anotacionForm.getComentarioAnotacion().replaceAll("@intro@", "\r\n");
                anotacionVO = new AnotacionRegistroValueObject(new Character(bienForm.getTipoRegistro().charAt(0)),
                        m_ConfigTechnical.getString("Planeamiento.BienAndEspacioCatalogado.Subseccion"),
                        null, formatYear.format(fechaYear.getTime()), anotacionForm.getNumeroAnotacion(), fechaAnotacion,
                        comentario);
                anotaciones.add(anotacionVO);
            }

            Integer numero = RegistroPlaneamientoManager.getInstance().create(registroVO, anotaciones,
                    new ArrayList(), params);
            bienSessionForm.setNumero(numero.toString());
            bienSessionForm.setNumeroRegistro(formatYear.format(fechaYear.getTime()) + "/" + numero.toString());
            bienSessionForm.setAnho(formatYear.format(fechaYear.getTime()));
            bienSessionForm.setTipoRegistro(bienForm.getTipoRegistro());
            bienSessionForm.setFechaAprobacion(bienForm.getFechaAprobacion());
            bienSessionForm.setFechaBaja(bienForm.getFechaBaja());
            bienSessionForm.setDenominacionBien(bienForm.getDenominacionBien().replaceAll("\r\n", "@intro@"));
            bienSessionForm.setCodigoDomicilio(bienForm.getCodigoDomicilio());
            bienSessionForm.setCodigoCatalogacion(bienForm.getCodigoCatalogacion());
            bienSessionForm.setCodigoGradoProteccion(bienForm.getCodigoGradoProteccion());
            bienSessionForm.setCodigoRelacionBien(bienForm.getCodigoRelacionBien());
            bienSessionForm.setFechaPublicacion(bienForm.getFechaPublicacion());
            bienSessionForm.setNumeroPublicacion(bienForm.getNumeroPublicacion());
            bienSessionForm.setObservaciones(bienForm.getObservaciones());
            bienSessionForm.setArchivo(bienForm.getArchivo());

            session.setAttribute("BienAndEspacioCatalogadoForm", bienSessionForm);

            Collection bienes = new ArrayList();
            bienes.add(bienSessionForm);
            session.setAttribute("registrosBien", bienes);
            request.setAttribute("registroActual", "1");

            return (mapping.findForward("default"));
        } catch  (InternalErrorException e) {
            return (mapping.findForward("errorInsercion"));
        }
    }
}