/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action.mantenimiento;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.persistence.MantAmbitoManager;
import es.altia.agora.business.planeamiento.mantenimiento.MantAmbitoValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoAmbitosForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoAmbitoForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Iterator;
import java.util.Collection;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class CargarAmbitosAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(CargarAmbitosAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("CargarAmbitosAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        if (form == null) {
            m_Log.debug("Rellenamos el form de Mantenimiento de Ambitos");
            form = new MantenimientoAmbitosForm();
            request.setAttribute(mapping.getAttribute(), form);
        }
        MantenimientoAmbitoForm ambitoForm = null;
        Iterator ambitosIt = MantAmbitoManager.getInstance().findAll(params).iterator();
        MantAmbitoValueObject ambitoVO = null;
        Collection ambitos = new ArrayList();
        while (ambitosIt.hasNext()) {
            ambitoVO = (MantAmbitoValueObject) ambitosIt.next();
            ambitoForm = new MantenimientoAmbitoForm();
            ambitoForm.setCodigo(ambitoVO.getCodigo());
            ambitoForm.setDescripcion(ambitoVO.getDescripcion());
            ambitos.add(ambitoForm);
        }
        ((MantenimientoAmbitosForm) form).setAmbitos(ambitos);
        session.setAttribute("MantenimientoAmbitosForm", form);
        return (mapping.findForward("default"));
    }
}