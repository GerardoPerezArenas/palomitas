/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action.mantenimiento;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.persistence.MantOrganoAprobacionManager;
import es.altia.agora.business.planeamiento.mantenimiento.MantOrganoAprobacionValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoOrganosAprobacionForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoOrganoAprobacionForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Collection;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class InsertarOrganoAprobacionAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(InsertarOrganoAprobacionAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("InsertarOrganoAprobacionAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        MantenimientoOrganosAprobacionForm organosAprobacionForm = (MantenimientoOrganosAprobacionForm) form;
        MantOrganoAprobacionValueObject organoAprobacionVO = new MantOrganoAprobacionValueObject(organosAprobacionForm.getCodigo(), organosAprobacionForm.getDescripcion());
        MantOrganoAprobacionManager.getInstance().create(organoAprobacionVO, params);

        Collection organosAprobacion = ((MantenimientoOrganosAprobacionForm) session.getAttribute("MantenimientoOrganosAprobacionForm")).getOrganosAprobacion();
        MantenimientoOrganoAprobacionForm organoAprobacionForm = new MantenimientoOrganoAprobacionForm();
        organoAprobacionForm.setCodigo(organosAprobacionForm.getCodigo());
        organoAprobacionForm.setDescripcion(organosAprobacionForm.getDescripcion());
        organosAprobacion.add(organoAprobacionForm);
        organosAprobacionForm.setOrganosAprobacion(organosAprobacion);

        session.setAttribute("MantenimientoOrganosAprobacionForm", organosAprobacionForm);
        return (mapping.findForward("default"));
    }
}