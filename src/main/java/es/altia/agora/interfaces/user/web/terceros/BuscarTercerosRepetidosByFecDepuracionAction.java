/* Generated by Together */
package es.altia.agora.interfaces.user.web.terceros;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.terceros.persistence.TercerosManager;
import es.altia.agora.business.util.GeneralValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.common.service.config.Config;
import es.altia.common.service.config.ConfigServiceHelper;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Vector;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class BuscarTercerosRepetidosByFecDepuracionAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(BuscarTercerosRepetidosByFecDepuracionAction.class.getName());
    protected static Config m_ConfigTechnical = ConfigServiceHelper.getConfig("techserver");

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("BuscarTercerosRepetidosByFecDepuracionAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        DepuracionTercerosForm depuracionTercerosForm = (DepuracionTercerosForm) form;

        GeneralValueObject gVO = new GeneralValueObject();
        gVO.setAtributo("fechaInicio", depuracionTercerosForm.getFechaInicio());
        gVO.setAtributo("fechaFin", depuracionTercerosForm.getFechaFin());

        Vector resultado = TercerosManager.getInstance().getTercerosRepByFec(params, gVO);

        Vector terceros = new Vector();

        // Creamos los indices para pasar a la jsp unicamente una pagina de datos.
        int startIndex = depuracionTercerosForm.getStartIndex();
        int count = depuracionTercerosForm.getCount();
        int endIndex = startIndex + count - 1;
        if (endIndex > resultado.size()) endIndex = resultado.size();

        m_Log.debug("BUSCAMOS LOS RESULTADOS QUE VAN DE " + startIndex + " A " + count);
        for (int i = startIndex - 1; i < endIndex; i++) {
            gVO = (GeneralValueObject) resultado.get(i);
            TerceroForm terceroForm = new TerceroForm();
            terceroForm.setTipoDocumento((String) gVO.getAtributo("T_TID.TID_DES"));
            terceroForm.setDocumento((String) gVO.getAtributo("T_TER.TER_DOC"));
            terceroForm.setCodTercero((String) gVO.getAtributo("T_TER.TER_COD"));
            terceroForm.setNombre((String) gVO.getAtributo("T_TER.TER_NOM"));
            terceroForm.setApellido1((String) gVO.getAtributo("T_TER.TER_AP1"));
            terceroForm.setApellido2((String) gVO.getAtributo("T_TER.TER_AP2"));

            terceros.add(terceroForm);
        }

        session.setAttribute("DepuracionTerceros.tercerosRepetidos", terceros);
        request.setAttribute("DepuracionTerceros.numResultados", Integer.toString(resultado.size()));

        return (mapping.findForward("default"));
    }
}