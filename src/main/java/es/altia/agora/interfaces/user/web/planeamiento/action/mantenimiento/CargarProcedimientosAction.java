/* Generated by Together */
package es.altia.agora.interfaces.user.web.planeamiento.action.mantenimiento;

import es.altia.agora.business.escritorio.UsuarioValueObject;
import es.altia.agora.business.planeamiento.mantenimiento.persistence.MantProcedimientoManager;
import es.altia.agora.business.planeamiento.mantenimiento.MantProcedimientoValueObject;
import es.altia.agora.interfaces.user.web.util.ActionSession;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoProcedimientosForm;
import es.altia.agora.interfaces.user.web.planeamiento.form.mantenimiento.MantenimientoProcedimientoForm;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;

import java.io.IOException;
import java.util.Iterator;
import java.util.Collection;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

public final class CargarProcedimientosAction extends ActionSession {

    protected static Log m_Log =
            LogFactory.getLog(CargarProcedimientosAction.class.getName());

    public ActionForward performSession(ActionMapping mapping, ActionForm form, HttpServletRequest request,
                                        HttpServletResponse response) throws IOException, ServletException {

        m_Log.info("CargarProcedimientosAction.perform");
        String[] params = null;
        HttpSession session = request.getSession();

        if (session.getAttribute("usuario") != null){
            UsuarioValueObject usuarioVO = (UsuarioValueObject)session.getAttribute("usuario");
            params = usuarioVO.getParamsCon();
        }

        if (form == null) {
            m_Log.debug("Rellenamos el form de Mantenimiento de Procedimientos");
            form = new MantenimientoProcedimientosForm();
            request.setAttribute(mapping.getAttribute(), form);
        }
        MantenimientoProcedimientoForm procedimientoForm = null;
        Iterator procedimientosIt = MantProcedimientoManager.getInstance().findAll(params).iterator();
        MantProcedimientoValueObject procedimientoVO = null;
        Collection procedimientos = new ArrayList();
        while (procedimientosIt.hasNext()) {
            procedimientoVO = (MantProcedimientoValueObject) procedimientosIt.next();
            procedimientoForm = new MantenimientoProcedimientoForm();
            procedimientoForm.setCodigo(procedimientoVO.getCodigo());
            procedimientoForm.setDescripcion(procedimientoVO.getDescripcion());
            procedimientos.add(procedimientoForm);
        }
        ((MantenimientoProcedimientosForm) form).setProcedimientos(procedimientos);
        session.setAttribute("MantenimientoProcedimientosForm", form);
        return (mapping.findForward("default"));
    }
}