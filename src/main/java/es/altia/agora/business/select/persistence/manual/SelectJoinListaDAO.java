/* Generated by Together */

package es.altia.agora.business.select.persistence.manual;

import es.altia.agora.business.select.SelectValueObject;
import es.altia.agora.business.select.exception.SelectListaException;
import es.altia.agora.business.util.ElementoListaTablaValueObject;
import es.altia.common.exception.*;
import es.altia.common.service.config.*;
import es.altia.common.service.jdbc.JDBCWrapper;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import java.util.Vector;


public class SelectJoinListaDAO {

    /**
     * Construye un nuevo SelectListaDAO. Es protected, por lo que la unica manera de instanciar esta clase
     * es usando el factory method <code>getInstance</code>
     */
    protected SelectJoinListaDAO() {
        super();
        //Queremos usar el fichero de configuracion techserver
        m_ConfigTechnical = ConfigServiceHelper.getConfig("techserver");
        //Queremos tener acceso a los mensajes de error localizados
        m_ConfigError = ConfigServiceHelper.getConfig("error");

    }


    /**
     * Recuperar los codigos y descripciones de una determinada tabla
     * @param laSelect con los nombres de campos y de la tabla para crear la select
     * @exception SelectListaException si existe algun problema tecnico.
     * @exception TechnicalException si hay algun problema tecnico usando los servicios del framework.
     */
    public Vector load(SelectValueObject laSelect) throws SelectListaException, TechnicalException
    {

        ElementoListaTablaValueObject elElemento = null;
        Vector laListaCodigos = null;
        int i = 0;

        //Queremos estar informados de cuando este metod es ejecutado
        m_Log.debug("load");

        if(laListaCodigos == null)
        {
           //Obtiene la sentencia sql a ser ejecutada del fichero de configuracion tecnico.
           String sql = "";
           //String sql = m_ConfigTechnical.getString("SQL.gen_valores_tablas.loadListaCond");
           laListaCodigos = new Vector();
           //Usar el JDBCWrapper es mas sencillo que usar JDBC directamente
           JDBCWrapper sqlExec = new JDBCWrapper();

           try
           {

               String col_cod     = laSelect.getCol_cod();
               String col_desc_c  = laSelect.getCol_desc_c();
               String col_desc_e  = laSelect.getCol_desc_e();
               String nom_tabla1  = laSelect.getNom_tabla();
               String nom_tabla2  = laSelect.getNom_tabla();
               String col_where   = laSelect.getCol_where();
               String valor_where = laSelect.getValor_where();
               // Creamos la select con los parametros adecuados (campos y tablas)
               sql = "SELECT b." + col_cod + "," + col_desc_c;
               if(col_desc_e != null)
                  sql = sql + " , " + col_desc_e;
               sql = sql + " FROM " + nom_tabla1 + " a, " + nom_tabla2 + " b ";
               sql = sql + " WHERE a." + col_cod + " = b." + col_cod;
               if(!(col_where.equals("")))
                  sql = sql + " AND " + col_where + " = " + valor_where;

               if(m_Log.isDebugEnabled()) m_Log.debug("sentencia despues" + sql);

               //Ahora el JDBCWrapper tiene suficiente informacion para construir la sentencia sql.
               //De este modo, la podemos ejecutar.

               sqlExec.execute(sql);

               if(m_Log.isDebugEnabled()) m_Log.debug("Lista codigos: " + sql);
               while( sqlExec.next() )
               {
                  if( col_desc_e == null)
                     //Solo una descripcion
                     elElemento = new ElementoListaTablaValueObject(
                                                 sqlExec.getString(col_cod),
								                 sqlExec.getString(col_desc_c),
                                                 i);
                  else
                    //Dos descripciones
                     elElemento = new ElementoListaTablaValueObject(
                                                 sqlExec.getString(col_cod),
								                 sqlExec.getString(col_desc_c),
                                                 sqlExec.getString(col_desc_e),
                                                 i);

                  laListaCodigos.addElement( elElemento );
                  if(m_Log.isDebugEnabled()) m_Log.debug(sqlExec.getString(col_cod) + "--" + sqlExec.getString(col_desc_c) + "--" + i);
                  i++;
                }

                m_Log.debug("Cargada la lista de codigos de la tabla.");
            }
            catch (Exception e)
            {
               //Si la eliminacion va mal tenemos que lanzar y loggear la excepcion
               m_Log.error(e.getMessage());
              throw new SelectListaException(m_ConfigError.getString("Error.ListaSelectCondDAO.load"), e);
            }
            finally {
                if (sqlExec!=null) sqlExec.close();
            }
        }
        //Queremos estar informados de cuando este metodo ha finalizado
        m_Log.debug("load");

        return(laListaCodigos);
    }

    /**
     * Factory method para el<code>Singelton</code>.
     * @return La unica instancia de SelectListaDAO.The only CustomerDAO instance.
     */
    public static SelectListaDAO getInstance() {
        //si no hay ninguna instancia de esta clase tenemos que crear una
        if (instance == null) {
            // Necesitamos sincronizacion para serializar (no multithread)
            // Las invocaciones de este metodo
            synchronized(SelectListaDAO.class) {
                if (instance == null) {
                    instance = new SelectListaDAO();
                }
            }
        }
        return instance;
    }

     /*
     * Mi propia instancia. Usada en el metodo getInstance
     */

    private static SelectListaDAO instance = null;

     /*
     * Declaracion de servicios
     */

    protected static Config m_ConfigTechnical; //Para el fichero de configuracion tecnico
    protected static Config m_ConfigError; //Para los mensajes de error localizados
    protected static Log m_Log =
            LogFactory.getLog(SelectJoinListaDAO.class.getName());


}
